{"id":"a16e955e795052143c8cac401f24f549","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function _preventExecution() internal view {\n    // solhint-disable-next-line avoid-tx-origin\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    _preventExecution();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AutomationBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/// @title Chainlink Functions client interface.\ninterface IFunctionsClient {\n  /// @notice Chainlink Functions response handler called by the Functions Router\n  /// during fullilment from the designated transmitter node in an OCR round.\n  /// @param requestId The requestId returned by FunctionsClient.sendRequest().\n  /// @param response Aggregated response from the request's source code.\n  /// @param err Aggregated error either from the request's source code or from the execution pipeline.\n  /// @dev Either response or error parameter will be set, but never both.\n  function handleOracleFulfillment(bytes32 requestId, bytes memory response, bytes memory err) external;\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport {FunctionsResponse} from \"../libraries/FunctionsResponse.sol\";\n\n/// @title Chainlink Functions Router interface.\ninterface IFunctionsRouter {\n  /// @notice The identifier of the route to retrieve the address of the access control contract\n  /// The access control contract controls which accounts can manage subscriptions\n  /// @return id - bytes32 id that can be passed to the \"getContractById\" of the Router\n  function getAllowListId() external view returns (bytes32);\n\n  /// @notice Set the identifier of the route to retrieve the address of the access control contract\n  /// The access control contract controls which accounts can manage subscriptions\n  function setAllowListId(bytes32 allowListId) external;\n\n  /// @notice Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\n  /// @return adminFee\n  function getAdminFee() external view returns (uint72 adminFee);\n\n  /// @notice Sends a request using the provided subscriptionId\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\n  /// a client can make requests from different contracts referencing the same subscription\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n  /// @param dataVersion - Gas limit for the fulfillment callback\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\n  /// @param donId - An identifier used to determine which route to send the request along\n  /// @return requestId - A unique request identifier\n  function sendRequest(\n    uint64 subscriptionId,\n    bytes calldata data,\n    uint16 dataVersion,\n    uint32 callbackGasLimit,\n    bytes32 donId\n  ) external returns (bytes32);\n\n  /// @notice Sends a request to the proposed contracts\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\n  /// a client can make requests from different contracts referencing the same subscription\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n  /// @param dataVersion - Gas limit for the fulfillment callback\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\n  /// @param donId - An identifier used to determine which route to send the request along\n  /// @return requestId - A unique request identifier\n  function sendRequestToProposed(\n    uint64 subscriptionId,\n    bytes calldata data,\n    uint16 dataVersion,\n    uint32 callbackGasLimit,\n    bytes32 donId\n  ) external returns (bytes32);\n\n  /// @notice Fulfill the request by:\n  /// - calling back the data that the Oracle returned to the client contract\n  /// - pay the DON for processing the request\n  /// @dev Only callable by the Coordinator contract that is saved in the commitment\n  /// @param response response data from DON consensus\n  /// @param err error from DON consensus\n  /// @param juelsPerGas - current rate of juels/gas\n  /// @param costWithoutFulfillment - The cost of processing the request (in Juels of LINK ), without fulfillment\n  /// @param transmitter - The Node that transmitted the OCR report\n  /// @param commitment - The parameters of the request that must be held consistent between request and response time\n  /// @return fulfillResult -\n  /// @return callbackGasCostJuels -\n  function fulfill(\n    bytes memory response,\n    bytes memory err,\n    uint96 juelsPerGas,\n    uint96 costWithoutFulfillment,\n    address transmitter,\n    FunctionsResponse.Commitment memory commitment\n  ) external returns (FunctionsResponse.FulfillResult, uint96);\n\n  /// @notice Validate requested gas limit is below the subscription max.\n  /// @param subscriptionId subscription ID\n  /// @param callbackGasLimit desired callback gas limit\n  function isValidCallbackGasLimit(uint64 subscriptionId, uint32 callbackGasLimit) external view;\n\n  /// @notice Get the current contract given an ID\n  /// @param id A bytes32 identifier for the route\n  /// @return contract The current contract address\n  function getContractById(bytes32 id) external view returns (address);\n\n  /// @notice Get the proposed next contract given an ID\n  /// @param id A bytes32 identifier for the route\n  /// @return contract The current or proposed contract address\n  function getProposedContractById(bytes32 id) external view returns (address);\n\n  /// @notice Return the latest proprosal set\n  /// @return ids The identifiers of the contracts to update\n  /// @return to The addresses of the contracts that will be updated to\n  function getProposedContractSet() external view returns (bytes32[] memory, address[] memory);\n\n  /// @notice Proposes one or more updates to the contract routes\n  /// @dev Only callable by owner\n  function proposeContractsUpdate(bytes32[] memory proposalSetIds, address[] memory proposalSetAddresses) external;\n\n  /// @notice Updates the current contract routes to the proposed contracts\n  /// @dev Only callable by owner\n  function updateContracts() external;\n\n  /// @dev Puts the system into an emergency stopped state.\n  /// @dev Only callable by owner\n  function pause() external;\n\n  /// @dev Takes the system out of an emergency stopped state.\n  /// @dev Only callable by owner\n  function unpause() external;\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport {CBOR} from \"../../../vendor/solidity-cborutils/v2.0.0/CBOR.sol\";\n\n/// @title Library for encoding the input data of a Functions request into CBOR\nlibrary FunctionsRequest {\n  using CBOR for CBOR.CBORBuffer;\n\n  uint16 public constant REQUEST_DATA_VERSION = 1;\n  uint256 internal constant DEFAULT_BUFFER_SIZE = 256;\n\n  enum Location {\n    Inline, // Provided within the Request\n    Remote, // Hosted through remote location that can be accessed through a provided URL\n    DONHosted // Hosted on the DON's storage\n  }\n\n  enum CodeLanguage {\n    JavaScript\n    // In future version we may add other languages\n  }\n\n  struct Request {\n    Location codeLocation; // ════════════╸ The location of the source code that will be executed on each node in the DON\n    Location secretsLocation; // ═════════╸ The location of secrets that will be passed into the source code. *Only Remote secrets are supported\n    CodeLanguage language; // ════════════╸ The coding language that the source code is written in\n    string source; // ════════════════════╸ Raw source code for Request.codeLocation of Location.Inline, URL for Request.codeLocation of Location.Remote, or slot decimal number for Request.codeLocation of Location.DONHosted\n    bytes encryptedSecretsReference; // ══╸ Encrypted URLs for Request.secretsLocation of Location.Remote (use addSecretsReference()), or CBOR encoded slotid+version for Request.secretsLocation of Location.DONHosted (use addDONHostedSecrets())\n    string[] args; // ════════════════════╸ String arguments that will be passed into the source code\n    bytes[] bytesArgs; // ════════════════╸ Bytes arguments that will be passed into the source code\n  }\n\n  error EmptySource();\n  error EmptySecrets();\n  error EmptyArgs();\n  error NoInlineSecrets();\n\n  /// @notice Encodes a Request to CBOR encoded bytes\n  /// @param self The request to encode\n  /// @return CBOR encoded bytes\n  function encodeCBOR(Request memory self) internal pure returns (bytes memory) {\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\n\n    buffer.writeString(\"codeLocation\");\n    buffer.writeUInt256(uint256(self.codeLocation));\n\n    buffer.writeString(\"language\");\n    buffer.writeUInt256(uint256(self.language));\n\n    buffer.writeString(\"source\");\n    buffer.writeString(self.source);\n\n    if (self.args.length > 0) {\n      buffer.writeString(\"args\");\n      buffer.startArray();\n      for (uint256 i = 0; i < self.args.length; ++i) {\n        buffer.writeString(self.args[i]);\n      }\n      buffer.endSequence();\n    }\n\n    if (self.encryptedSecretsReference.length > 0) {\n      if (self.secretsLocation == Location.Inline) {\n        revert NoInlineSecrets();\n      }\n      buffer.writeString(\"secretsLocation\");\n      buffer.writeUInt256(uint256(self.secretsLocation));\n      buffer.writeString(\"secrets\");\n      buffer.writeBytes(self.encryptedSecretsReference);\n    }\n\n    if (self.bytesArgs.length > 0) {\n      buffer.writeString(\"bytesArgs\");\n      buffer.startArray();\n      for (uint256 i = 0; i < self.bytesArgs.length; ++i) {\n        buffer.writeBytes(self.bytesArgs[i]);\n      }\n      buffer.endSequence();\n    }\n\n    return buffer.buf.buf;\n  }\n\n  /// @notice Initializes a Chainlink Functions Request\n  /// @dev Sets the codeLocation and code on the request\n  /// @param self The uninitialized request\n  /// @param codeLocation The user provided source code location\n  /// @param language The programming language of the user code\n  /// @param source The user provided source code or a url\n  function initializeRequest(\n    Request memory self,\n    Location codeLocation,\n    CodeLanguage language,\n    string memory source\n  ) internal pure {\n    if (bytes(source).length == 0) revert EmptySource();\n\n    self.codeLocation = codeLocation;\n    self.language = language;\n    self.source = source;\n  }\n\n  /// @notice Initializes a Chainlink Functions Request\n  /// @dev Simplified version of initializeRequest for PoC\n  /// @param self The uninitialized request\n  /// @param javaScriptSource The user provided JS code (must not be empty)\n  function initializeRequestForInlineJavaScript(Request memory self, string memory javaScriptSource) internal pure {\n    initializeRequest(self, Location.Inline, CodeLanguage.JavaScript, javaScriptSource);\n  }\n\n  /// @notice Adds Remote user encrypted secrets to a Request\n  /// @param self The initialized request\n  /// @param encryptedSecretsReference Encrypted comma-separated string of URLs pointing to off-chain secrets\n  function addSecretsReference(Request memory self, bytes memory encryptedSecretsReference) internal pure {\n    if (encryptedSecretsReference.length == 0) revert EmptySecrets();\n\n    self.secretsLocation = Location.Remote;\n    self.encryptedSecretsReference = encryptedSecretsReference;\n  }\n\n  /// @notice Adds DON-hosted secrets reference to a Request\n  /// @param self The initialized request\n  /// @param slotID Slot ID of the user's secrets hosted on DON\n  /// @param version User data version (for the slotID)\n  function addDONHostedSecrets(Request memory self, uint8 slotID, uint64 version) internal pure {\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\n\n    buffer.writeString(\"slotID\");\n    buffer.writeUInt64(slotID);\n    buffer.writeString(\"version\");\n    buffer.writeUInt64(version);\n\n    self.secretsLocation = Location.DONHosted;\n    self.encryptedSecretsReference = buffer.buf.buf;\n  }\n\n  /// @notice Sets args for the user run function\n  /// @param self The initialized request\n  /// @param args The array of string args (must not be empty)\n  function setArgs(Request memory self, string[] memory args) internal pure {\n    if (args.length == 0) revert EmptyArgs();\n\n    self.args = args;\n  }\n\n  /// @notice Sets bytes args for the user run function\n  /// @param self The initialized request\n  /// @param args The array of bytes args (must not be empty)\n  function setBytesArgs(Request memory self, bytes[] memory args) internal pure {\n    if (args.length == 0) revert EmptyArgs();\n\n    self.bytesArgs = args;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/// @title Library of types that are used for fulfillment of a Functions request\nlibrary FunctionsResponse {\n  // Used to send request information from the Router to the Coordinator\n  struct RequestMeta {\n    bytes data; // ══════════════════╸ CBOR encoded Chainlink Functions request data, use FunctionsRequest library to encode a request\n    bytes32 flags; // ═══════════════╸ Per-subscription flags\n    address requestingContract; // ══╗ The client contract that is sending the request\n    uint96 availableBalance; // ═════╝ Common LINK balance of the subscription that is controlled by the Router to be used for all consumer requests.\n    uint72 adminFee; // ═════════════╗ Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\n    uint64 subscriptionId; //        ║ Identifier of the billing subscription that will be charged for the request\n    uint64 initiatedRequests; //     ║ The number of requests that have been started\n    uint32 callbackGasLimit; //      ║ The amount of gas that the callback to the consuming contract will be given\n    uint16 dataVersion; // ══════════╝ The version of the structure of the CBOR encoded request data\n    uint64 completedRequests; // ════╗ The number of requests that have successfully completed or timed out\n    address subscriptionOwner; // ═══╝ The owner of the billing subscription\n  }\n\n  enum FulfillResult {\n    FULFILLED, // 0\n    USER_CALLBACK_ERROR, // 1\n    INVALID_REQUEST_ID, // 2\n    COST_EXCEEDS_COMMITMENT, // 3\n    INSUFFICIENT_GAS_PROVIDED, // 4\n    SUBSCRIPTION_BALANCE_INVARIANT_VIOLATION, // 5\n    INVALID_COMMITMENT // 6\n  }\n\n  struct Commitment {\n    bytes32 requestId; // ═════════════════╸ A unique identifier for a Chainlink Functions request\n    address coordinator; // ═══════════════╗ The Coordinator contract that manages the DON that is servicing a request\n    uint96 estimatedTotalCostJuels; // ════╝ The maximum cost in Juels (1e18) of LINK that will be charged to fulfill a request\n    address client; // ════════════════════╗ The client contract that sent the request\n    uint64 subscriptionId; //              ║ Identifier of the billing subscription that will be charged for the request\n    uint32 callbackGasLimit; // ═══════════╝ The amount of gas that the callback to the consuming contract will be given\n    uint72 adminFee; // ═══════════════════╗ Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\n    uint72 donFee; //                      ║ Fee (in Juels of LINK) that will be split between Node Operators for servicing a request\n    uint40 gasOverheadBeforeCallback; //   ║ Represents the average gas execution cost before the fulfillment callback.\n    uint40 gasOverheadAfterCallback; //    ║ Represents the average gas execution cost after the fulfillment callback.\n    uint32 timeoutTimestamp; // ═══════════╝ The timestamp at which a request will be eligible to be timed out\n  }\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_3_0/FunctionsClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport {IFunctionsRouter} from \"../v1_0_0/interfaces/IFunctionsRouter.sol\";\nimport {IFunctionsClient} from \"../v1_0_0/interfaces/IFunctionsClient.sol\";\n\nimport {FunctionsRequest} from \"../v1_0_0/libraries/FunctionsRequest.sol\";\n\n/// @title The Chainlink Functions client contract\n/// @notice Contract developers can inherit this contract in order to make Chainlink Functions requests\nabstract contract FunctionsClient is IFunctionsClient {\n  using FunctionsRequest for FunctionsRequest.Request;\n\n  IFunctionsRouter internal immutable i_functionsRouter;\n\n  event RequestSent(bytes32 indexed id);\n  event RequestFulfilled(bytes32 indexed id);\n\n  error OnlyRouterCanFulfill();\n\n  constructor(address router) {\n    i_functionsRouter = IFunctionsRouter(router);\n  }\n\n  /// @notice Sends a Chainlink Functions request\n  /// @param data The CBOR encoded bytes data for a Functions request\n  /// @param subscriptionId The subscription ID that will be charged to service the request\n  /// @param callbackGasLimit the amount of gas that will be available for the fulfillment callback\n  /// @return requestId The generated request ID for this request\n  function _sendRequest(\n    bytes memory data,\n    uint64 subscriptionId,\n    uint32 callbackGasLimit,\n    bytes32 donId\n  ) internal returns (bytes32) {\n    bytes32 requestId = i_functionsRouter.sendRequest(\n      subscriptionId,\n      data,\n      FunctionsRequest.REQUEST_DATA_VERSION,\n      callbackGasLimit,\n      donId\n    );\n    emit RequestSent(requestId);\n    return requestId;\n  }\n\n  /// @notice User defined function to handle a response from the DON\n  /// @param requestId The request ID, returned by sendRequest()\n  /// @param response Aggregated response from the execution of the user's source code\n  /// @param err Aggregated error from the execution of the user code or from the execution pipeline\n  /// @dev Either response or error parameter will be set, but never both\n  function _fulfillRequest(bytes32 requestId, bytes memory response, bytes memory err) internal virtual;\n\n  /// @inheritdoc IFunctionsClient\n  function handleOracleFulfillment(bytes32 requestId, bytes memory response, bytes memory err) external override {\n    if (msg.sender != address(i_functionsRouter)) {\n      revert OnlyRouterCanFulfill();\n    }\n    _fulfillRequest(requestId, response, err);\n    emit RequestFulfilled(requestId);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ConfirmedOwnerWithProposal} from \"./ConfirmedOwnerWithProposal.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IOwnable} from \"../interfaces/IOwnable.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    // solhint-disable-next-line gas-custom-errors\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /// @notice Allows an owner to begin transferring ownership to a new address.\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /// @notice Allows an ownership transfer to be completed by the recipient.\n  function acceptOwnership() external override {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /// @notice Get the current owner\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /// @notice validate, transfer ownership, and emit relevant events\n  function _transferOwnership(address to) private {\n    // solhint-disable-next-line gas-custom-errors\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /// @notice validate access\n  function _validateOwnership() internal view {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /// @notice Reverts if called by anyone other than the contract owner.\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"},"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol":{"content":"// SPDX-License-Identifier: BSD-2-Clause\npragma solidity ^0.8.4;\n\n/**\n* @dev A library for working with mutable byte buffers in Solidity.\n*\n* Byte buffers are mutable and expandable, and provide a variety of primitives\n* for appending to them. At any time you can fetch a bytes object containing the\n* current contents of the buffer. The bytes object should not be stored between\n* operations, as it may change due to resizing of the buffer.\n*/\nlibrary Buffer {\n    /**\n    * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n    *      a capacity. The capacity may be longer than the current value, in\n    *      which case it can be extended without the need to allocate more memory.\n    */\n    struct buffer {\n        bytes buf;\n        uint capacity;\n    }\n\n    /**\n    * @dev Initializes a buffer with an initial capacity.\n    * @param buf The buffer to initialize.\n    * @param capacity The number of bytes of space to allocate the buffer.\n    * @return The buffer, for chaining.\n    */\n    function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\n        if (capacity % 32 != 0) {\n            capacity += 32 - (capacity % 32);\n        }\n        // Allocate space for the buffer data\n        buf.capacity = capacity;\n        assembly {\n            let ptr := mload(0x40)\n            mstore(buf, ptr)\n            mstore(ptr, 0)\n            let fpm := add(32, add(ptr, capacity))\n            if lt(fpm, ptr) {\n                revert(0, 0)\n            }\n            mstore(0x40, fpm)\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Initializes a new buffer from an existing bytes object.\n    *      Changes to the buffer may mutate the original value.\n    * @param b The bytes object to initialize the buffer with.\n    * @return A new buffer.\n    */\n    function fromBytes(bytes memory b) internal pure returns(buffer memory) {\n        buffer memory buf;\n        buf.buf = b;\n        buf.capacity = b.length;\n        return buf;\n    }\n\n    function resize(buffer memory buf, uint capacity) private pure {\n        bytes memory oldbuf = buf.buf;\n        init(buf, capacity);\n        append(buf, oldbuf);\n    }\n\n    /**\n    * @dev Sets buffer length to 0.\n    * @param buf The buffer to truncate.\n    * @return The original buffer, for chaining..\n    */\n    function truncate(buffer memory buf) internal pure returns (buffer memory) {\n        assembly {\n            let bufptr := mload(buf)\n            mstore(bufptr, 0)\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @param len The number of bytes to copy.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data, uint len) internal pure returns(buffer memory) {\n        require(len <= data.length);\n\n        uint off = buf.buf.length;\n        uint newCapacity = off + len;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        uint dest;\n        uint src;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Length of existing buffer data\n            let buflen := mload(bufptr)\n            // Start address = buffer address + offset + sizeof(buffer length)\n            dest := add(add(bufptr, 32), off)\n            // Update buffer length if we're extending it\n            if gt(newCapacity, buflen) {\n                mstore(bufptr, newCapacity)\n            }\n            src := add(data, 32)\n        }\n\n        // Copy word-length chunks while possible\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        // Copy remaining bytes\n        unchecked {\n            uint mask = (256 ** (32 - len)) - 1;\n            assembly {\n                let srcpart := and(mload(src), not(mask))\n                let destpart := and(mload(dest), mask)\n                mstore(dest, or(destpart, srcpart))\n            }\n        }\n\n        return buf;\n    }\n\n    /**\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n        return append(buf, data, data.length);\n    }\n\n    /**\n    * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n    *      capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint offPlusOne = off + 1;\n        if (off >= buf.capacity) {\n            resize(buf, offPlusOne * 2);\n        }\n\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Address = buffer address + sizeof(buffer length) + off\n            let dest := add(add(bufptr, off), 32)\n            mstore8(dest, data)\n            // Update buffer length if we extended it\n            if gt(offPlusOne, mload(bufptr)) {\n                mstore(bufptr, offPlusOne)\n            }\n        }\n\n        return buf;\n    }\n\n    /**\n    * @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\n    *      exceed the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @param len The number of bytes to write (left-aligned).\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes32 data, uint len) private pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint newCapacity = len + off;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        unchecked {\n            uint mask = (256 ** len) - 1;\n            // Right-align data\n            data = data >> (8 * (32 - len));\n            assembly {\n                // Memory address of the buffer data\n                let bufptr := mload(buf)\n                // Address = buffer address + sizeof(buffer length) + newCapacity\n                let dest := add(bufptr, newCapacity)\n                mstore(dest, or(and(mload(dest), not(mask)), data))\n                // Update buffer length if we extended it\n                if gt(newCapacity, mload(bufptr)) {\n                    mstore(bufptr, newCapacity)\n                }\n            }\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chhaining.\n    */\n    function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n        return append(buf, bytes32(data), 20);\n    }\n\n    /**\n    * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n        return append(buf, data, 32);\n    }\n\n    /**\n     * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n     *      exceed the capacity of the buffer.\n     * @param buf The buffer to append to.\n     * @param data The data to append.\n     * @param len The number of bytes to write (right-aligned).\n     * @return The original buffer.\n     */\n    function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint newCapacity = len + off;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        uint mask = (256 ** len) - 1;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Address = buffer address + sizeof(buffer length) + newCapacity\n            let dest := add(bufptr, newCapacity)\n            mstore(dest, or(and(mload(dest), not(mask)), data))\n            // Update buffer length if we extended it\n            if gt(newCapacity, mload(bufptr)) {\n                mstore(bufptr, newCapacity)\n            }\n        }\n        return buf;\n    }\n}"},"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"../../@ensdomains/buffer/v0.1.0/Buffer.sol\";\n\n/**\n* @dev A library for populating CBOR encoded payload in Solidity.\n*\n* https://datatracker.ietf.org/doc/html/rfc7049\n*\n* The library offers various write* and start* methods to encode values of different types.\n* The resulted buffer can be obtained with data() method.\n* Encoding of primitive types is staightforward, whereas encoding of sequences can result\n* in an invalid CBOR if start/write/end flow is violated.\n* For the purpose of gas saving, the library does not verify start/write/end flow internally,\n* except for nested start/end pairs.\n*/\n\nlibrary CBOR {\n    using Buffer for Buffer.buffer;\n\n    struct CBORBuffer {\n        Buffer.buffer buf;\n        uint256 depth;\n    }\n\n    uint8 private constant MAJOR_TYPE_INT = 0;\n    uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\n    uint8 private constant MAJOR_TYPE_BYTES = 2;\n    uint8 private constant MAJOR_TYPE_STRING = 3;\n    uint8 private constant MAJOR_TYPE_ARRAY = 4;\n    uint8 private constant MAJOR_TYPE_MAP = 5;\n    uint8 private constant MAJOR_TYPE_TAG = 6;\n    uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\n\n    uint8 private constant TAG_TYPE_BIGNUM = 2;\n    uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\n\n    uint8 private constant CBOR_FALSE = 20;\n    uint8 private constant CBOR_TRUE = 21;\n    uint8 private constant CBOR_NULL = 22;\n    uint8 private constant CBOR_UNDEFINED = 23;\n\n    function create(uint256 capacity) internal pure returns(CBORBuffer memory cbor) {\n        Buffer.init(cbor.buf, capacity);\n        cbor.depth = 0;\n        return cbor;\n    }\n\n    function data(CBORBuffer memory buf) internal pure returns(bytes memory) {\n        require(buf.depth == 0, \"Invalid CBOR\");\n        return buf.buf.buf;\n    }\n\n    function writeUInt256(CBORBuffer memory buf, uint256 value) internal pure {\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\n        writeBytes(buf, abi.encode(value));\n    }\n\n    function writeInt256(CBORBuffer memory buf, int256 value) internal pure {\n        if (value < 0) {\n            buf.buf.appendUint8(\n                uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM)\n            );\n            writeBytes(buf, abi.encode(uint256(-1 - value)));\n        } else {\n            writeUInt256(buf, uint256(value));\n        }\n    }\n\n    function writeUInt64(CBORBuffer memory buf, uint64 value) internal pure {\n        writeFixedNumeric(buf, MAJOR_TYPE_INT, value);\n    }\n\n    function writeInt64(CBORBuffer memory buf, int64 value) internal pure {\n        if(value >= 0) {\n            writeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\n        } else{\n            writeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(-1 - value));\n        }\n    }\n\n    function writeBytes(CBORBuffer memory buf, bytes memory value) internal pure {\n        writeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\n        buf.buf.append(value);\n    }\n\n    function writeString(CBORBuffer memory buf, string memory value) internal pure {\n        writeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\n        buf.buf.append(bytes(value));\n    }\n\n    function writeBool(CBORBuffer memory buf, bool value) internal pure {\n        writeContentFree(buf, value ? CBOR_TRUE : CBOR_FALSE);\n    }\n\n    function writeNull(CBORBuffer memory buf) internal pure {\n        writeContentFree(buf, CBOR_NULL);\n    }\n\n    function writeUndefined(CBORBuffer memory buf) internal pure {\n        writeContentFree(buf, CBOR_UNDEFINED);\n    }\n\n    function startArray(CBORBuffer memory buf) internal pure {\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\n        buf.depth += 1;\n    }\n\n    function startFixedArray(CBORBuffer memory buf, uint64 length) internal pure {\n        writeDefiniteLengthType(buf, MAJOR_TYPE_ARRAY, length);\n    }\n\n    function startMap(CBORBuffer memory buf) internal pure {\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\n        buf.depth += 1;\n    }\n\n    function startFixedMap(CBORBuffer memory buf, uint64 length) internal pure {\n        writeDefiniteLengthType(buf, MAJOR_TYPE_MAP, length);\n    }\n\n    function endSequence(CBORBuffer memory buf) internal pure {\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\n        buf.depth -= 1;\n    }\n\n    function writeKVString(CBORBuffer memory buf, string memory key, string memory value) internal pure {\n        writeString(buf, key);\n        writeString(buf, value);\n    }\n\n    function writeKVBytes(CBORBuffer memory buf, string memory key, bytes memory value) internal pure {\n        writeString(buf, key);\n        writeBytes(buf, value);\n    }\n\n    function writeKVUInt256(CBORBuffer memory buf, string memory key, uint256 value) internal pure {\n        writeString(buf, key);\n        writeUInt256(buf, value);\n    }\n\n    function writeKVInt256(CBORBuffer memory buf, string memory key, int256 value) internal pure {\n        writeString(buf, key);\n        writeInt256(buf, value);\n    }\n\n    function writeKVUInt64(CBORBuffer memory buf, string memory key, uint64 value) internal pure {\n        writeString(buf, key);\n        writeUInt64(buf, value);\n    }\n\n    function writeKVInt64(CBORBuffer memory buf, string memory key, int64 value) internal pure {\n        writeString(buf, key);\n        writeInt64(buf, value);\n    }\n\n    function writeKVBool(CBORBuffer memory buf, string memory key, bool value) internal pure {\n        writeString(buf, key);\n        writeBool(buf, value);\n    }\n\n    function writeKVNull(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        writeNull(buf);\n    }\n\n    function writeKVUndefined(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        writeUndefined(buf);\n    }\n\n    function writeKVMap(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        startMap(buf);\n    }\n\n    function writeKVArray(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        startArray(buf);\n    }\n\n    function writeFixedNumeric(\n        CBORBuffer memory buf,\n        uint8 major,\n        uint64 value\n    ) private pure {\n        if (value <= 23) {\n            buf.buf.appendUint8(uint8((major << 5) | value));\n        } else if (value <= 0xFF) {\n            buf.buf.appendUint8(uint8((major << 5) | 24));\n            buf.buf.appendInt(value, 1);\n        } else if (value <= 0xFFFF) {\n            buf.buf.appendUint8(uint8((major << 5) | 25));\n            buf.buf.appendInt(value, 2);\n        } else if (value <= 0xFFFFFFFF) {\n            buf.buf.appendUint8(uint8((major << 5) | 26));\n            buf.buf.appendInt(value, 4);\n        } else {\n            buf.buf.appendUint8(uint8((major << 5) | 27));\n            buf.buf.appendInt(value, 8);\n        }\n    }\n\n    function writeIndefiniteLengthType(CBORBuffer memory buf, uint8 major)\n        private\n        pure\n    {\n        buf.buf.appendUint8(uint8((major << 5) | 31));\n    }\n\n    function writeDefiniteLengthType(CBORBuffer memory buf, uint8 major, uint64 length)\n        private\n        pure\n    {\n        writeFixedNumeric(buf, major, length);\n    }\n\n    function writeContentFree(CBORBuffer memory buf, uint8 value) private pure {\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_CONTENT_FREE << 5) | value));\n    }\n}"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {VRFV2PlusClient} from \"../libraries/VRFV2PlusClient.sol\";\nimport {IVRFSubscriptionV2Plus} from \"./IVRFSubscriptionV2Plus.sol\";\n\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\n  /**\n   * @notice Request a set of random words.\n   * @param req - a struct containing following fields for randomness request:\n   * keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * requestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * extraArgs - abi-encoded extra args\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\n/// @notice method required to be implemented by all V2Plus consumers.\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\ninterface IVRFMigratableConsumerV2Plus {\n  event CoordinatorSet(address vrfCoordinator);\n\n  /// @notice Sets the VRF Coordinator address\n  /// @notice This method should only be callable by the coordinator or contract owner\n  function setCoordinator(address vrfCoordinator) external;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\n/// @notice related methods implemented by the V2Plus coordinator.\ninterface IVRFSubscriptionV2Plus {\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint256 subId, address to) external;\n\n  /**\n   * @notice Accept subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n   * @dev  to send Native with the call, for example:\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\n   */\n  function createSubscription() external returns (uint256 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return nativeBalance - native balance of the subscription in wei.\n   * @return reqCount - Requests count of subscription.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint256 subId\n  )\n    external\n    view\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint256 subId) external view returns (bool);\n\n  /**\n   * @notice Paginate through all active VRF subscriptions.\n   * @param startIndex index of the subscription to start from\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\n   */\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\n\n  /**\n   * @notice Fund a subscription with native.\n   * @param subId - ID of the subscription\n   * @notice This method expects msg.value to be greater than or equal to 0.\n   */\n  function fundSubscriptionWithNative(uint256 subId) external payable;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// End consumer library.\nlibrary VRFV2PlusClient {\n  // extraArgs will evolve to support new features\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\"VRF ExtraArgsV1\"));\n  struct ExtraArgsV1 {\n    bool nativePayment;\n  }\n\n  struct RandomWordsRequest {\n    bytes32 keyHash;\n    uint256 subId;\n    uint16 requestConfirmations;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n    bytes extraArgs;\n  }\n\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {IVRFCoordinatorV2Plus} from \"./interfaces/IVRFCoordinatorV2Plus.sol\";\nimport {IVRFMigratableConsumerV2Plus} from \"./interfaces/IVRFMigratableConsumerV2Plus.sol\";\nimport {ConfirmedOwner} from \"../../shared/access/ConfirmedOwner.sol\";\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords, extraArgs),\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n *\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\n  error ZeroAddress();\n\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\n  // so that coordinator reference is updated after migration\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\n    if (msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n\n  /**\n   * @inheritdoc IVRFMigratableConsumerV2Plus\n   */\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n\n    emit CoordinatorSet(_vrfCoordinator);\n  }\n\n  modifier onlyOwnerOrCoordinator() {\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\n    }\n    _;\n  }\n}\n"},"contracts/Groth16Verifier.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/**\n * @title Groth16Verifier\n * @dev Basic Groth16 verifier contract for ZK proof verification\n * This is a simplified implementation for development/testing purposes\n * In production, this would be generated from the actual circuit\n */\ncontract Groth16Verifier {\n    using Pairing for *;\n    \n    struct VerifyingKey {\n        Pairing.G1Point alpha;\n        Pairing.G2Point beta;\n        Pairing.G2Point gamma;\n        Pairing.G2Point delta;\n        Pairing.G1Point[] gamma_abc;\n    }\n    \n    struct Proof {\n        Pairing.G1Point a;\n        Pairing.G2Point b;\n        Pairing.G1Point c;\n    }\n    \n    VerifyingKey verifyingKey;\n    \n    event VerifyingKeyChanged();\n    \n    constructor() {\n        verifyingKey.alpha = Pairing.G1Point(\n            0x2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e2,\n            0x14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d1926\n        );\n        verifyingKey.beta = Pairing.G2Point(\n            [0x0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c,\n             0x0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab],\n            [0x304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a7,\n             0x1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8]\n        );\n        verifyingKey.gamma = Pairing.G2Point(\n            [0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2,\n             0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed],\n            [0x090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b,\n             0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa]\n        );\n        verifyingKey.delta = Pairing.G2Point(\n            [0x260e01b251f6f1c7e7ff4e580791dee8ea51d87a358e038b4efe30fac09383c1,\n             0x0118c4d5b837bcc2bc89b5b398b5974e9f5944073b32078b7e231fec938883b0],\n            [0x04fc6369f7110fe3d25156c1bb9a72859cf2a04641f99ba4ee413c80da6a5fe4,\n             0x22febda3c0c0632a56475b4214e5615e11e6dd3f96e6cea2854a87d4dacc5e55]\n        );\n        \n        // Initialize gamma_abc array for public inputs\n        verifyingKey.gamma_abc.push(Pairing.G1Point(\n            0x1f39f65dc48c11e29a9b88f2b85b35bf4ed1e3b95b4a5f1a8d2e3f4a5b6c7d8e,\n            0x2a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b\n        ));\n        verifyingKey.gamma_abc.push(Pairing.G1Point(\n            0x5c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c,\n            0x7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d\n        ));\n        verifyingKey.gamma_abc.push(Pairing.G1Point(\n            0x9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f,\n            0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a\n        ));\n        verifyingKey.gamma_abc.push(Pairing.G1Point(\n            0x3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b,\n            0x5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d\n        ));\n        verifyingKey.gamma_abc.push(Pairing.G1Point(\n            0x7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f,\n            0x9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a\n        ));\n    }\n    \n    function verifyTx(\n        Proof memory proof,\n        uint256[] memory input\n    ) public view returns (bool) {\n        if (input.length + 1 != verifyingKey.gamma_abc.length) {\n            return false;\n        }\n        \n        // Compute the linear combination vk_x\n        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);\n        for (uint i = 0; i < input.length; i++) {\n            require(input[i] < Pairing.PRIME_Q, \"Input too large\");\n            vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(verifyingKey.gamma_abc[i + 1], input[i]));\n        }\n        vk_x = Pairing.addition(vk_x, verifyingKey.gamma_abc[0]);\n        \n        return Pairing.pairing(\n            Pairing.negate(proof.a),\n            proof.b,\n            verifyingKey.alpha,\n            verifyingKey.beta,\n            vk_x,\n            verifyingKey.gamma,\n            proof.c,\n            verifyingKey.delta\n        );\n    }\n    \n    function verifyProof(\n        uint[2] memory a,\n        uint[2][2] memory b,\n        uint[2] memory c,\n        uint[] memory input\n    ) public view returns (bool) {\n        Proof memory proof;\n        proof.a = Pairing.G1Point(a[0], a[1]);\n        proof.b = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);\n        proof.c = Pairing.G1Point(c[0], c[1]);\n        \n        uint[] memory inputValues = new uint[](input.length);\n        for(uint i = 0; i < input.length; i++){\n            inputValues[i] = input[i];\n        }\n        \n        return verifyTx(proof, inputValues);\n    }\n}\n\nlibrary Pairing {\n    uint256 constant PRIME_Q = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\n\n    struct G1Point {\n        uint256 x;\n        uint256 y;\n    }\n\n    struct G2Point {\n        uint256[2] x;\n        uint256[2] y;\n    }\n\n    function P1() pure internal returns (G1Point memory) {\n        return G1Point(1, 2);\n    }\n\n    function P2() pure internal returns (G2Point memory) {\n        return G2Point(\n            [10857046999023057135944570762232829481370756359578518086990519993285655852781,\n             11559732032986387107991004021392285783925812861821192530917403151452391805634],\n            [8495653923123431417604973247489272438418190587263600148770280649306958101930,\n             4082367875863433681332203403145435568316851327593401208105741076214120093531]\n        );\n    }\n\n    function negate(G1Point memory p) pure internal returns (G1Point memory) {\n        if (p.x == 0 && p.y == 0) {\n            return G1Point(0, 0);\n        } else {\n            return G1Point(p.x, PRIME_Q - (p.y % PRIME_Q));\n        }\n    }\n\n    function addition(G1Point memory p1, G1Point memory p2) view internal returns (G1Point memory r) {\n        uint256[4] memory input;\n        input[0] = p1.x;\n        input[1] = p1.y;\n        input[2] = p2.x;\n        input[3] = p2.y;\n        bool success;\n        assembly {\n            success := staticcall(gas(), 6, input, 0x80, r, 0x40)\n        }\n        require(success, \"Addition failed\");\n    }\n\n    function scalar_mul(G1Point memory p, uint256 s) view internal returns (G1Point memory r) {\n        uint256[3] memory input;\n        input[0] = p.x;\n        input[1] = p.y;\n        input[2] = s;\n        bool success;\n        assembly {\n            success := staticcall(gas(), 7, input, 0x60, r, 0x40)\n        }\n        require(success, \"Scalar multiplication failed\");\n    }\n\n    function pairing(\n        G1Point memory a1,\n        G2Point memory a2,\n        G1Point memory b1,\n        G2Point memory b2,\n        G1Point memory c1,\n        G2Point memory c2,\n        G1Point memory d1,\n        G2Point memory d2\n    ) view internal returns (bool) {\n        G1Point[4] memory p1 = [a1, b1, c1, d1];\n        G2Point[4] memory p2 = [a2, b2, c2, d2];\n        uint256 inputSize = 24;\n        uint256[] memory input = new uint256[](inputSize);\n        \n        for (uint i = 0; i < 4; i++) {\n            input[i * 6 + 0] = p1[i].x;\n            input[i * 6 + 1] = p1[i].y;\n            input[i * 6 + 2] = p2[i].x[0];\n            input[i * 6 + 3] = p2[i].x[1];\n            input[i * 6 + 4] = p2[i].y[0];\n            input[i * 6 + 5] = p2[i].y[1];\n        }\n        \n        uint256[1] memory out;\n        bool success;\n        assembly {\n            success := staticcall(gas(), 8, add(input, 0x20), mul(inputSize, 0x20), out, 0x20)\n        }\n        require(success, \"Pairing check failed\");\n        return out[0] != 0;\n    }\n} "},"contracts/NovaProofAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"./ZKProofAggregator.sol\";\nimport {FunctionsRequest} from \"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\";\n\n/**\n * @title NovaProofAggregator\n * @dev Enhanced ZK proof aggregator with Nova recursive proof capabilities\n * @notice This contract enables recursive proof composition for scalable verification\n */\ncontract NovaProofAggregator is ZKProofAggregator {\n    using FunctionsRequest for FunctionsRequest.Request;\n    \n    // Events for Nova operations\n    event NovaFoldingStarted(uint256 indexed batchId, uint256[] proofIds, address indexed requester);\n    event NovaFoldingCompleted(uint256 indexed batchId, bytes32 aggregatedHash, bool isValid);\n    event RecursiveProofGenerated(uint256 indexed batchId, uint256 recursionDepth, bytes recursiveProof);\n    \n    // Structs for Nova\n    struct NovaInstance {\n        uint256 stepIn;\n        uint256 stepOut;\n        uint256 programCounter;\n        bytes32 stateRootIn;\n        bytes32 stateRootOut;\n        bytes32 nullifierHash;\n        bool isValid;\n    }\n    \n    struct RecursiveProofBatch {\n        uint256[] proofIds;\n        address requester;\n        uint256 timestamp;\n        uint256 recursionDepth;\n        bytes32 aggregatedHash;\n        NovaInstance foldedInstance;\n        bool isCompleted;\n        mapping(uint256 => bytes32) proofHashes;\n        mapping(uint256 => uint256[4]) publicInputs;\n    }\n    \n    // State variables for Nova\n    mapping(uint256 => RecursiveProofBatch) public recursiveProofBatches;\n    mapping(bytes32 => bool) public usedNullifiers; // Prevent double folding\n    mapping(uint256 => uint256) public proofToBatch; // Map proof ID to batch ID\n    \n    uint256 public batchCounter;\n    uint256 public maxRecursionDepth = 16;\n    uint256 public minProofsPerBatch = 2;\n    uint256 public maxProofsPerBatch = 8;\n    \n    // Nova circuit verifier (would be deployed separately)\n    address public novaVerifier;\n    \n    modifier validBatch(uint256 batchId) {\n        require(batchId > 0 && batchId <= batchCounter, \"Invalid batch ID\");\n        _;\n    }\n    \n    modifier onlyBatchRequester(uint256 batchId) {\n        require(recursiveProofBatches[batchId].requester == msg.sender, \"Not batch requester\");\n        _;\n    }\n    \n    constructor(\n        address vrfCoordinator,\n        address functionsRouter,\n        uint256 vrfSubscriptionId,\n        bytes32 vrfKeyHash,\n        uint64 functionsSubscriptionId,\n        bytes32 functionsDonId,\n        address groth16VerifierAddress,\n        address _novaVerifier\n    ) ZKProofAggregator(\n        vrfCoordinator,\n        functionsRouter,\n        vrfSubscriptionId,\n        vrfKeyHash,\n        functionsSubscriptionId,\n        functionsDonId,\n        groth16VerifierAddress\n    ) {\n        novaVerifier = _novaVerifier;\n    }\n    \n    /**\n     * @dev Start Nova folding process for multiple proofs\n     * @param proofIds Array of proof IDs to aggregate recursively\n     * @return batchId Unique identifier for this folding batch\n     */\n    function startNovaFolding(uint256[] memory proofIds) \n        external \n        returns (uint256 batchId) \n    {\n        require(\n            proofIds.length >= minProofsPerBatch && proofIds.length <= maxProofsPerBatch, \n            \"Invalid proof count\"\n        );\n        \n        // Verify all proofs exist and are completed\n        for (uint256 i = 0; i < proofIds.length; i++) {\n            require(proofRequests[proofIds[i]].isCompleted, \"Proof not completed\");\n            require(proofRequests[proofIds[i]].isValid, \"Invalid proof\");\n            require(proofToBatch[proofIds[i]] == 0, \"Proof already in batch\");\n        }\n        \n        batchId = ++batchCounter;\n        RecursiveProofBatch storage batch = recursiveProofBatches[batchId];\n        \n        batch.proofIds = proofIds;\n        batch.requester = msg.sender;\n        batch.timestamp = block.timestamp;\n        batch.recursionDepth = 0;\n        batch.isCompleted = false;\n        \n        // Store proof hashes and public inputs\n        for (uint256 i = 0; i < proofIds.length; i++) {\n            uint256 proofId = proofIds[i];\n            proofToBatch[proofId] = batchId;\n            \n            // Generate proof hash from state root and block number\n            batch.proofHashes[i] = keccak256(\n                abi.encodePacked(\n                    proofRequests[proofId].stateRoot,\n                    proofRequests[proofId].blockNumber,\n                    proofRequests[proofId].sourceChain\n                )\n            );\n            \n            // Store public inputs (simplified for demo)\n            batch.publicInputs[i] = [\n                uint256(proofRequests[proofId].stateRoot),\n                proofRequests[proofId].blockNumber,\n                uint256(keccak256(bytes(proofRequests[proofId].sourceChain))),\n                block.timestamp\n            ];\n        }\n        \n        emit NovaFoldingStarted(batchId, proofIds, msg.sender);\n        \n        // Request recursive proof generation\n        _requestRecursiveProofGeneration(batchId);\n        \n        return batchId;\n    }\n    \n    /**\n     * @dev Internal function to request recursive proof generation\n     */\n    function _requestRecursiveProofGeneration(uint256 batchId) internal {\n        RecursiveProofBatch storage batch = recursiveProofBatches[batchId];\n        \n        // Enhanced JavaScript source for Nova folding\n        string memory source = string(abi.encodePacked(\n            \"const batchId = parseInt(args[0]);\",\n            \"const proofCount = parseInt(args[1]);\",\n            \"const stepIn = parseInt(args[2]);\",\n            \"// Generate Nova recursive proof - simplified for demo\",\n            \"const aggregatedHash = ethers.utils.keccak256(\",\n            \"  ethers.utils.defaultAbiCoder.encode(\",\n            \"    ['uint256', 'uint256', 'uint256'],\",\n            \"    [batchId, proofCount, stepIn]\",\n            \"  )\",\n            \");\",\n            \"const foldedInstance = {\",\n            \"  stepIn: stepIn,\",\n            \"  stepOut: stepIn + 1,\",\n            \"  programCounter: Date.now(),\",\n            \"  stateRootIn: aggregatedHash,\",\n            \"  stateRootOut: aggregatedHash,\",\n            \"  nullifierHash: ethers.utils.keccak256(aggregatedHash),\",\n            \"  isValid: true\",\n            \"};\",\n            \"return Functions.encodeString(JSON.stringify({\",\n            \"  batchId: batchId,\",\n            \"  aggregatedHash: aggregatedHash,\",\n            \"  foldedInstance: foldedInstance,\",\n            \"  recursiveProof: aggregatedHash\",\n            \"}));\"\n        ));\n\n        // Use the parent contract's helper to send Functions request\n        _sendNovaFunctionsRequest(batchId, source, batch.proofIds.length, batch.recursionDepth);\n    }\n    \n    /**\n     * @dev Helper function to send Nova Functions request\n     */\n    function _sendNovaFunctionsRequest(\n        uint256 batchId,\n        string memory source,\n        uint256 proofCount,\n        uint256 recursionDepth\n    ) internal {\n        FunctionsRequest.Request memory req;\n        req.initializeRequestForInlineJavaScript(source);\n        \n        // Prepare arguments for Nova proof generation\n        string[] memory args = new string[](3);\n        args[0] = uint256ToString(batchId);\n        args[1] = uint256ToString(proofCount);\n        args[2] = uint256ToString(recursionDepth);\n        req.setArgs(args);\n\n        bytes32 functionsRequestId = _sendRequest(\n            req.encodeCBOR(),\n            s_functionsSubscriptionId,\n            s_functionsGasLimit,\n            s_functionsDonId\n        );\n        \n        // Use batchId + 10000 to distinguish from regular proof requests\n        functionsRequestToProofId[functionsRequestId] = batchId + 10000;\n        \n        emit FunctionsRequestSent(functionsRequestId, \"nova-batch\", batchId);\n    }\n\n    /**\n     * @dev Override fulfillRequest to handle Nova operations\n     */\n    function _fulfillRequest(\n        bytes32 requestId,\n        bytes memory response,\n        bytes memory err\n    ) internal virtual override {\n        uint256 requestType = functionsRequestToProofId[requestId];\n        \n        if (requestType > 10000) { // Nova batch IDs\n            uint256 batchId = requestType - 10000;\n            _handleNovaResponse(batchId, response, err);\n        } else {\n            // Handle regular proof responses\n            super._fulfillRequest(requestId, response, err);\n        }\n    }\n    \n    /**\n     * @dev Continue recursive folding with additional depth\n     * @param batchId The batch to continue folding\n     */\n    function continueRecursiveFolding(uint256 batchId) \n        external \n        validBatch(batchId)\n        onlyBatchRequester(batchId)\n    {\n        RecursiveProofBatch storage batch = recursiveProofBatches[batchId];\n        require(batch.isCompleted, \"Previous folding not completed\");\n        require(batch.recursionDepth < maxRecursionDepth, \"Max recursion depth reached\");\n        \n        batch.recursionDepth++;\n        batch.isCompleted = false; // Reset for next round\n        _requestRecursiveProofGeneration(batchId);\n    }\n    \n    /**\n     * @dev Handle Nova proof generation response\n     */\n    function _handleNovaResponse(\n        uint256 batchId, \n        bytes memory response, \n        bytes memory err\n    ) internal {\n        if (err.length > 0) {\n            emit FunctionsRequestError(bytes32(batchId), err); // Using parent contract's event\n            return;\n        }\n        \n        RecursiveProofBatch storage batch = recursiveProofBatches[batchId];\n        \n        // Parse Nova response (simplified for demo)\n        batch.aggregatedHash = keccak256(response);\n        batch.isCompleted = true;\n        \n        // Create folded instance for next recursion\n        batch.foldedInstance = NovaInstance({\n            stepIn: batch.recursionDepth,\n            stepOut: batch.recursionDepth + 1,\n            programCounter: block.timestamp,\n            stateRootIn: keccak256(abi.encodePacked(batch.proofIds)),\n            stateRootOut: batch.aggregatedHash,\n            nullifierHash: keccak256(abi.encodePacked(batchId, batch.requester)),\n            isValid: true\n        });\n        \n        emit NovaFoldingCompleted(batchId, batch.aggregatedHash, true);\n        emit RecursiveProofGenerated(batchId, batch.recursionDepth, response);\n    }\n    \n    /**\n     * @dev Verify Nova recursive proof on-chain\n     * @param batchId The batch ID to verify\n     * @param proof The recursive proof to verify\n     * @return isValid Whether the proof is valid\n     */\n    function verifyNovaProof(\n        uint256 batchId, \n        bytes memory proof\n    ) external view validBatch(batchId) returns (bool isValid) {\n        RecursiveProofBatch storage batch = recursiveProofBatches[batchId];\n        require(batch.isCompleted, \"Batch not completed\");\n        \n        // Simplified verification for demo\n        bytes32 computedHash = keccak256(proof);\n        return computedHash == batch.aggregatedHash;\n    }\n    \n    /**\n     * @dev Get recursive proof batch details\n     */\n    function getRecursiveProofBatch(uint256 batchId) \n        external \n        view \n        validBatch(batchId) \n        returns (\n            uint256[] memory proofIds,\n            address requester,\n            uint256 timestamp,\n            uint256 recursionDepth,\n            bytes32 aggregatedHash,\n            bool isCompleted\n        ) \n    {\n        RecursiveProofBatch storage batch = recursiveProofBatches[batchId];\n        return (\n            batch.proofIds,\n            batch.requester,\n            batch.timestamp,\n            batch.recursionDepth,\n            batch.aggregatedHash,\n            batch.isCompleted\n        );\n    }\n    \n    /**\n     * @dev Get folded instance for a batch\n     */\n    function getFoldedInstance(uint256 batchId) \n        external \n        view \n        validBatch(batchId) \n        returns (NovaInstance memory) \n    {\n        return recursiveProofBatches[batchId].foldedInstance;\n    }\n    \n    /**\n     * @dev Admin function to update recursion parameters\n     */\n    function updateRecursionParams(\n        uint256 _maxRecursionDepth,\n        uint256 _minProofsPerBatch,\n        uint256 _maxProofsPerBatch\n    ) external onlyContractOwner {\n        require(_maxRecursionDepth > 0 && _maxRecursionDepth <= 32, \"Invalid max depth\");\n        require(_minProofsPerBatch >= 2 && _minProofsPerBatch <= _maxProofsPerBatch, \"Invalid batch sizes\");\n        \n        maxRecursionDepth = _maxRecursionDepth;\n        minProofsPerBatch = _minProofsPerBatch;\n        maxProofsPerBatch = _maxProofsPerBatch;\n    }\n} "},"contracts/ZKProofAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\nimport {VRFConsumerBaseV2Plus} from \"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\";\nimport {VRFV2PlusClient} from \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\";\nimport {FunctionsClient} from \"@chainlink/contracts/src/v0.8/functions/v1_3_0/FunctionsClient.sol\";\nimport {FunctionsRequest} from \"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\";\nimport {AutomationCompatibleInterface} from \"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\";\n// Using Chainlink's ownership model instead of OpenZeppelin's\nimport \"./Groth16Verifier.sol\";\n\n/**\n * @title ZKProofAggregator\n * @dev Main contract for aggregating ZK proofs with Chainlink services\n * @notice This contract enables trustless cross-chain state verification through ZK proof aggregation\n */\ncontract ZKProofAggregator is VRFConsumerBaseV2Plus, FunctionsClient, AutomationCompatibleInterface {\n    using FunctionsRequest for FunctionsRequest.Request;\n\n    // Events\n    event ProofRequested(uint256 indexed requestId, address indexed requester, uint256 blockNumber);\n    event ProofVerified(uint256 indexed requestId, bool isValid, bytes32 stateRoot);\n    event RandomnessReceived(uint256 indexed requestId, uint256 randomValue, uint256 selectedBlock);\n    event FunctionsRequestSent(bytes32 indexed requestId, string sourceChain, uint256 blockNumber);\n    event FunctionsResponseReceived(bytes32 indexed requestId, bytes proof, bytes publicInputs);\n    event FunctionsRequestError(bytes32 indexed requestId, bytes error);\n\n    // Structs\n    struct ProofRequest {\n        address requester;\n        uint256 timestamp;\n        string sourceChain;\n        uint256 blockNumber;\n        bytes32 stateRoot;\n        bool isCompleted;\n        bool isValid;\n    }\n\n    struct ZKProof {\n        uint256[2] a;\n        uint256[2][2] b;\n        uint256[2] c;\n        uint256[] publicInputs;\n    }\n\n    // State variables\n    mapping(uint256 => ProofRequest) public proofRequests;\n    mapping(bytes32 => uint256) public functionsRequestToProofId;\n    \n    uint256 public requestCounter;\n    uint256 public lastUpkeepTimestamp;\n    uint256 public upkeepInterval = 3600; // 1 hour\n\n    // Chainlink VRF Configuration\n    uint256 private s_subscriptionId;\n    bytes32 private s_keyHash;\n    uint32 private s_callbackGasLimit = 2500000;\n    uint16 private s_requestConfirmations = 3;\n    uint32 private s_numWords = 1;\n\n    // Chainlink Functions Configuration\n    uint64 internal s_functionsSubscriptionId;\n    uint32 internal s_functionsGasLimit = 300000;\n    bytes32 internal s_functionsDonId;\n    string internal s_functionsSource; // JavaScript source code\n    string internal s_proofServiceUrl; // External ZK proof service URL\n    uint8 internal merkleDepth = 8; // Default Merkle tree depth\n    \n    // ZK Verification\n    mapping(bytes32 => bool) public verifiedProofs;\n    Groth16Verifier public immutable groth16Verifier;\n    \n    // Proof aggregation tracking\n    mapping(uint256 => bytes32[]) public aggregatedProofHashes;\n    mapping(bytes32 => bool) public usedProofHashes;\n    \n    // Access control\n    mapping(address => bool) public authorizedCallers;\n    address private _owner;\n\n    modifier onlyAuthorized() {\n        require(authorizedCallers[msg.sender] || msg.sender == _owner, \"Not authorized\");\n        _;\n    }\n    \n    function contractOwner() public view returns (address) {\n        return _owner;\n    }\n    \n    modifier onlyContractOwner() {\n        require(msg.sender == _owner, \"Only owner\");\n        _;\n    }\n\n    constructor(\n        address vrfCoordinator,\n        address functionsRouter,\n        uint256 vrfSubscriptionId,\n        bytes32 vrfKeyHash,\n        uint64 functionsSubscriptionId,\n        bytes32 functionsDonId,\n        address groth16VerifierAddress\n    ) VRFConsumerBaseV2Plus(vrfCoordinator) FunctionsClient(functionsRouter) {\n        s_subscriptionId = vrfSubscriptionId;\n        s_keyHash = vrfKeyHash;\n        s_functionsSubscriptionId = functionsSubscriptionId;\n        s_functionsDonId = functionsDonId;\n        groth16Verifier = Groth16Verifier(groth16VerifierAddress);\n        authorizedCallers[msg.sender] = true;\n        _owner = msg.sender;\n        lastUpkeepTimestamp = block.timestamp;\n    }\n\n    /**\n     * @dev Request proof verification for a specific chain state\n     * @param sourceChain The identifier of the source blockchain\n     * @param targetBlockNumber The block number to verify (0 for random selection)\n     */\n    function requestProofVerification(\n        string memory sourceChain,\n        uint256 targetBlockNumber\n    ) external returns (uint256 requestId) {\n        requestId = ++requestCounter;\n        \n        proofRequests[requestId] = ProofRequest({\n            requester: msg.sender,\n            timestamp: block.timestamp,\n            sourceChain: sourceChain,\n            blockNumber: targetBlockNumber,\n            stateRoot: bytes32(0),\n            isCompleted: false,\n            isValid: false\n        });\n\n        // If no specific block is requested, use VRF to select randomly\n        if (targetBlockNumber == 0) {\n            _requestRandomBlock(requestId);\n        } else {\n            _requestProofGeneration(requestId, targetBlockNumber);\n        }\n\n        emit ProofRequested(requestId, msg.sender, targetBlockNumber);\n        return requestId;\n    }\n\n    /**\n     * @dev Internal function to request random block selection via VRF\n     */\n    function _requestRandomBlock(uint256 proofRequestId) internal {\n        uint256 vrfRequestId = s_vrfCoordinator.requestRandomWords(\n            VRFV2PlusClient.RandomWordsRequest({\n                keyHash: s_keyHash,\n                subId: s_subscriptionId,\n                requestConfirmations: s_requestConfirmations,\n                callbackGasLimit: s_callbackGasLimit,\n                numWords: s_numWords,\n                extraArgs: VRFV2PlusClient._argsToBytes(\n                    VRFV2PlusClient.ExtraArgsV1({nativePayment: false})\n                )\n            })\n        );\n        \n        // Store mapping from VRF request to proof request\n        functionsRequestToProofId[bytes32(vrfRequestId)] = proofRequestId;\n    }\n\n    /**\n     * @dev Callback function for VRF randomness\n     */\n    function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal override {\n        uint256 proofRequestId = functionsRequestToProofId[bytes32(requestId)];\n        require(proofRequestId != 0, \"Invalid VRF request\");\n\n        // Select block within last 1000 blocks (adjust as needed)\n        uint256 selectedBlock = block.number - 1000 + (randomWords[0] % 1000);\n        \n        proofRequests[proofRequestId].blockNumber = selectedBlock;\n        \n        emit RandomnessReceived(requestId, randomWords[0], selectedBlock);\n        \n        // Now request proof generation for the selected block\n        _requestProofGeneration(proofRequestId, selectedBlock);\n    }\n\n    /**\n     * @dev Internal function to request proof generation via Chainlink Functions\n     */\n    function _requestProofGeneration(uint256 proofRequestId, uint256 blockNumber) internal {\n        ProofRequest storage request = proofRequests[proofRequestId];\n        \n        // Use JavaScript source code for Chainlink Functions\n        // This is a simplified version that matches our external JS file structure\n        string memory source = s_functionsSource;\n        if (bytes(source).length == 0) {\n            // Fallback minimal source\n            source = \"const chainId=parseInt(args[0]);const blockNumbers=JSON.parse(args[1]);const result={success:true,chainId,blockNumbers,validityHash:'0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef',metadata:{timestamp:Math.floor(Date.now()/1000)}};return Functions.encodeString(JSON.stringify(result));\";\n        }\n        \n        FunctionsRequest.Request memory req;\n        req.initializeRequestForInlineJavaScript(source);\n        \n        // Prepare arguments: chainId, blockNumbers, merkleDepth, targetChainId, proofServiceUrl\n        string[] memory args = new string[](5);\n        args[0] = uint256ToString(getChainId(request.sourceChain));\n        args[1] = string(abi.encodePacked(\"[\", uint256ToString(blockNumber), \"]\")); // Array format\n        args[2] = uint256ToString(merkleDepth);\n        args[3] = uint256ToString(block.chainid); // Current chain as target\n        args[4] = s_proofServiceUrl; // External proof generation service URL\n        req.setArgs(args);\n\n        bytes32 functionsRequestId = _sendRequest(\n            req.encodeCBOR(),\n            s_functionsSubscriptionId,\n            s_functionsGasLimit,\n            s_functionsDonId\n        );\n\n        functionsRequestToProofId[functionsRequestId] = proofRequestId;\n        \n        emit FunctionsRequestSent(functionsRequestId, request.sourceChain, blockNumber);\n    }\n\n    /**\n     * @dev Helper function to get chain ID from chain name\n     */\n    function getChainId(string memory chainName) internal pure returns (uint256) {\n        bytes32 chainHash = keccak256(abi.encodePacked(chainName));\n        \n        if (chainHash == keccak256(abi.encodePacked(\"ethereum\"))) return 1;\n        if (chainHash == keccak256(abi.encodePacked(\"arbitrum\"))) return 42161;\n        if (chainHash == keccak256(abi.encodePacked(\"optimism\"))) return 10;\n        if (chainHash == keccak256(abi.encodePacked(\"base\"))) return 8453;\n        if (chainHash == keccak256(abi.encodePacked(\"polygon\"))) return 137;\n        if (chainHash == keccak256(abi.encodePacked(\"avalanche\"))) return 43114;\n        \n        // Default to Ethereum if unknown\n        return 1;\n    }\n\n    /**\n     * @dev Callback function for Chainlink Functions response\n     */\n    function _fulfillRequest(\n        bytes32 requestId,\n        bytes memory response,\n        bytes memory err\n    ) internal virtual override {\n        uint256 proofRequestId = functionsRequestToProofId[requestId];\n        require(proofRequestId != 0, \"Invalid Functions request\");\n\n        if (err.length > 0) {\n            // Handle error\n            proofRequests[proofRequestId].isCompleted = true;\n            emit FunctionsRequestError(requestId, err);\n            return;\n        }\n\n        // Parse JSON response from Functions\n        string memory jsonResponse = string(response);\n        \n        // Extract the result from JSON (simplified parsing)\n        bool success = _parseJsonBool(jsonResponse, \"success\");\n        \n        ProofRequest storage request = proofRequests[proofRequestId];\n        request.isCompleted = true;\n        \n        if (success) {\n            // Check if we received a real ZK proof\n            bool hasRealProof = _parseJsonBool(jsonResponse, \"hasRealProof\");\n            \n            if (hasRealProof) {\n                // Extract and verify real ZK proof\n                string memory proofData = _parseJsonString(jsonResponse, \"proof\");\n                string memory publicSignalsData = _parseJsonString(jsonResponse, \"publicSignals\");\n                \n                if (bytes(proofData).length > 0 && bytes(publicSignalsData).length > 0) {\n                    // For now, we trust the external verification since we can't easily parse JSON to proof format in Solidity\n                    // In production, you'd want to extract the proof components and verify on-chain\n                    bytes32 proofHash = keccak256(abi.encodePacked(proofData, publicSignalsData));\n                    \n                    request.isValid = true;\n                    request.stateRoot = proofHash;\n                    verifiedProofs[proofHash] = true;\n                    \n                    emit ProofVerified(proofRequestId, true, proofHash);\n                } else {\n                    // Fallback to validity hash if proof data is missing\n                    string memory validityHash = _parseJsonString(jsonResponse, \"validityHash\");\n                    bytes32 stateRoot = keccak256(abi.encodePacked(validityHash, block.timestamp));\n                    \n                    request.isValid = true;\n                    request.stateRoot = stateRoot;\n                    verifiedProofs[stateRoot] = true;\n                    \n                    emit ProofVerified(proofRequestId, true, stateRoot);\n                }\n            } else {\n                // Handle prepared inputs case (no real proof generated)\n                string memory validityHash = _parseJsonString(jsonResponse, \"validityHash\");\n                bytes32 stateRoot = keccak256(abi.encodePacked(validityHash, block.timestamp));\n                \n                request.isValid = true;\n                request.stateRoot = stateRoot;\n                verifiedProofs[stateRoot] = true;\n                \n                emit ProofVerified(proofRequestId, true, stateRoot);\n            }\n        } else {\n            request.isValid = false;\n            emit ProofVerified(proofRequestId, false, bytes32(0));\n        }\n        \n        emit FunctionsResponseReceived(requestId, response, \"\");\n    }\n\n    /**\n     * @dev Simple JSON parser for boolean values\n     */\n    function _parseJsonBool(string memory json, string memory key) internal pure returns (bool) {\n        bytes memory jsonBytes = bytes(json);\n        bytes memory keyBytes = bytes(string(abi.encodePacked('\"', key, '\":true')));\n        \n        for (uint i = 0; i <= jsonBytes.length - keyBytes.length; i++) {\n            bool isMatch = true;\n            for (uint j = 0; j < keyBytes.length; j++) {\n                if (jsonBytes[i + j] != keyBytes[j]) {\n                    isMatch = false;\n                    break;\n                }\n            }\n            if (isMatch) return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev Simple JSON parser for string values\n     */\n    function _parseJsonString(string memory json, string memory key) internal pure returns (string memory) {\n        bytes memory jsonBytes = bytes(json);\n        bytes memory searchBytes = bytes(string(abi.encodePacked('\"', key, '\":\"')));\n        \n        for (uint i = 0; i <= jsonBytes.length - searchBytes.length; i++) {\n            bool isMatch = true;\n            for (uint j = 0; j < searchBytes.length; j++) {\n                if (jsonBytes[i + j] != searchBytes[j]) {\n                    isMatch = false;\n                    break;\n                }\n            }\n            if (isMatch) {\n                // Found the key, now extract the value\n                uint startIndex = i + searchBytes.length;\n                uint endIndex = startIndex;\n                \n                // Find the closing quote\n                while (endIndex < jsonBytes.length && jsonBytes[endIndex] != '\"') {\n                    endIndex++;\n                }\n                \n                if (endIndex > startIndex) {\n                    bytes memory valueBytes = new bytes(endIndex - startIndex);\n                    for (uint k = 0; k < endIndex - startIndex; k++) {\n                        valueBytes[k] = jsonBytes[startIndex + k];\n                    }\n                    return string(valueBytes);\n                }\n            }\n        }\n        return \"\";\n    }\n\n    /**\n     * @dev Verify ZK proof using simplified validation\n     * Since we're getting JSON data instead of raw proof bytes, we use hash verification\n     */\n    function _verifyZKProof(bytes memory proof, bytes memory publicInputs) internal view returns (bool) {\n        // For JSON-based responses, we validate the integrity of the data\n        if (proof.length == 0 || publicInputs.length == 0) return false;\n        \n        // Simple validation - in production would do more sophisticated verification\n        return true;\n    }\n\n    /**\n     * @dev Chainlink Automation upkeep check\n     */\n    function checkUpkeep(bytes calldata) external view override returns (bool upkeepNeeded, bytes memory) {\n        upkeepNeeded = (block.timestamp - lastUpkeepTimestamp) > upkeepInterval;\n        return (upkeepNeeded, \"\");\n    }\n\n    /**\n     * @dev Chainlink Automation upkeep perform\n     */\n    function performUpkeep(bytes calldata) external override {\n        require((block.timestamp - lastUpkeepTimestamp) > upkeepInterval, \"Upkeep not needed\");\n        \n        lastUpkeepTimestamp = block.timestamp;\n        \n        // Trigger periodic proof verification\n        this.requestProofVerification(\"ethereum\", 0); // Random block on Ethereum\n    }\n\n    /**\n     * @dev Check if a state root has been verified\n     */\n    function isStateVerified(bytes32 stateRoot) external view returns (bool) {\n        return verifiedProofs[stateRoot];\n    }\n\n    /**\n     * @dev Aggregate multiple ZK proofs into a single verification\n     * @param proofs Array of proof data to aggregate\n     * @param publicInputsArray Array of public inputs for each proof\n     * @return aggregatedHash The hash representing the aggregated proof\n     */\n    function aggregateProofs(\n        bytes[] calldata proofs,\n        bytes[] calldata publicInputsArray\n    ) external onlyAuthorized returns (bytes32 aggregatedHash) {\n        require(proofs.length == publicInputsArray.length && proofs.length > 0, \"Invalid input arrays\");\n        require(proofs.length <= 10, \"Too many proofs to aggregate\"); // Limit for gas efficiency\n        \n        bytes32[] memory proofHashes = new bytes32[](proofs.length);\n        \n        // Verify each individual proof and collect hashes\n        for (uint256 i = 0; i < proofs.length; i++) {\n            require(_verifyZKProof(proofs[i], publicInputsArray[i]), \"Invalid proof in aggregation\");\n            \n            bytes32 proofHash = keccak256(abi.encodePacked(proofs[i], publicInputsArray[i]));\n            require(!usedProofHashes[proofHash], \"Proof already used in aggregation\");\n            \n            proofHashes[i] = proofHash;\n            usedProofHashes[proofHash] = true;\n        }\n        \n        // Create aggregated hash\n        aggregatedHash = keccak256(abi.encodePacked(proofHashes, block.timestamp, msg.sender));\n        \n        // Store the aggregation\n        uint256 requestId = ++requestCounter;\n        aggregatedProofHashes[requestId] = proofHashes;\n        verifiedProofs[aggregatedHash] = true;\n        \n        emit ProofVerified(requestId, true, aggregatedHash);\n        \n        return aggregatedHash;\n    }\n\n    /**\n     * @dev Get proof request details\n     */\n    function getProofRequest(uint256 requestId) external view returns (ProofRequest memory) {\n        return proofRequests[requestId];\n    }\n\n    /**\n     * @dev Administrative functions\n     */\n    function setUpkeepInterval(uint256 newInterval) external onlyContractOwner {\n        upkeepInterval = newInterval;\n    }\n\n    function setAuthorizedCaller(address caller, bool authorized) external onlyContractOwner {\n        authorizedCallers[caller] = authorized;\n    }\n\n    function setVRFConfig(\n        uint256 subscriptionId,\n        bytes32 keyHash,\n        uint32 callbackGasLimit\n    ) external onlyContractOwner {\n        s_subscriptionId = subscriptionId;\n        s_keyHash = keyHash;\n        s_callbackGasLimit = callbackGasLimit;\n    }\n\n    function setFunctionsConfig(\n        uint64 subscriptionId,\n        uint32 gasLimit,\n        bytes32 donId\n    ) external onlyContractOwner {\n        s_functionsSubscriptionId = subscriptionId;\n        s_functionsGasLimit = gasLimit;\n        s_functionsDonId = donId;\n    }\n\n    function setFunctionsSource(string memory source) external onlyContractOwner {\n        s_functionsSource = source;\n    }\n\n    function setProofServiceUrl(string memory url) external onlyContractOwner {\n        s_proofServiceUrl = url;\n    }\n\n    /**\n     * @dev Utility function to convert uint to string\n     */\n    function uint256ToString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    function getSubscriptionId() public view returns (uint256) {\n        return s_subscriptionId;\n    }\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/ZKProofAggregator.sol:378:5:\n    |\n378 |     function _verifyZKProof(bytes memory proof, bytes memory publicInputs) internal view returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":15896,"file":"contracts/ZKProofAggregator.sol","start":15525},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","exportedSymbols":{"AutomationBase":[37]},"id":38,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationBase","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":37,"linearizedBaseContracts":[37],"name":"AutomationBase","nameLocation":"66:14:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"b60ac5db","id":3,"name":"OnlySimulatedBackend","nameLocation":"91:20:0","nodeType":"ErrorDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"111:2:0"},"src":"85:29:0"},{"body":{"id":27,"nodeType":"Block","src":"291:200:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"350:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"353:6:0","memberName":"origin","nodeType":"MemberAccess","src":"350:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"371:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"363:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:0","typeDescriptions":{}}},"id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"363:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"350:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":14,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"377:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"380:6:0","memberName":"origin","nodeType":"MemberAccess","src":"377:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307831313131313131313131313131313131313131313131313131313131313131313131313131313131","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"398:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1111111111111111111111111111111111111111"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"390:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:0","typeDescriptions":{}}},"id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"390:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"377:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"350:91:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26,"nodeType":"IfStatement","src":"346:141:0","trueBody":{"id":25,"nodeType":"Block","src":"443:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"OnlySimulatedBackend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"458:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"458:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"RevertStatement","src":"451:29:0"}]}}]},"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"118:127:0","text":" @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."},"id":28,"implemented":true,"kind":"function","modifiers":[],"name":"_preventExecution","nameLocation":"257:17:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"274:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"291:0:0"},"scope":37,"src":"248:243:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":35,"nodeType":"Block","src":"652:37:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":31,"name":"_preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"658:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"658:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":33,"nodeType":"ExpressionStatement","src":"658:19:0"},{"id":34,"nodeType":"PlaceholderStatement","src":"683:1:0"}]},"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"495:129:0","text":" @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."},"id":36,"name":"cannotExecute","nameLocation":"636:13:0","nodeType":"ModifierDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"649:2:0"},"src":"627:62:0","virtual":false,"visibility":"internal"}],"scope":38,"src":"57:634:0","usedErrors":[3],"usedEvents":[]}],"src":"32:660:0"},"id":0},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","exportedSymbols":{"AutomationBase":[37],"AutomationCompatible":[48],"AutomationCompatibleInterface":[67]},"id":49,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":39,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","file":"./AutomationBase.sol","id":41,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":38,"src":"57:52:1","symbolAliases":[{"foreign":{"id":40,"name":"AutomationBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"65:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"./interfaces/AutomationCompatibleInterface.sol","id":43,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":68,"src":"110:93:1","symbolAliases":[{"foreign":{"id":42,"name":"AutomationCompatibleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"118:29:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":44,"name":"AutomationBase","nameLocations":["247:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"247:14:1"},"id":45,"nodeType":"InheritanceSpecifier","src":"247:14:1"},{"baseName":{"id":46,"name":"AutomationCompatibleInterface","nameLocations":["263:29:1"],"nodeType":"IdentifierPath","referencedDeclaration":67,"src":"263:29:1"},"id":47,"nodeType":"InheritanceSpecifier","src":"263:29:1"}],"canonicalName":"AutomationCompatible","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":48,"linearizedBaseContracts":[48,67,37],"name":"AutomationCompatible","nameLocation":"223:20:1","nodeType":"ContractDefinition","nodes":[],"scope":49,"src":"205:90:1","usedErrors":[3],"usedEvents":[]}],"src":"32:264:1"},"id":1},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[67]},"id":68,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":50,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":67,"linearizedBaseContracts":[67],"name":"AutomationCompatibleInterface","nameLocation":"120:29:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"154:985:2","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1151:11:2","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"checkData","nameLocation":"1178:9:2","nodeType":"VariableDeclaration","scope":60,"src":"1163:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52,"name":"bytes","nodeType":"ElementaryTypeName","src":"1163:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1162:26:2"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1212:12:2","nodeType":"VariableDeclaration","scope":60,"src":"1207:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"1207:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"performData","nameLocation":"1239:11:2","nodeType":"VariableDeclaration","scope":60,"src":"1226:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":57,"name":"bytes","nodeType":"ElementaryTypeName","src":"1226:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1206:45:2"},"scope":67,"src":"1142:110:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1256:1003:2","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":66,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2271:13:2","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"performData","nameLocation":"2300:11:2","nodeType":"VariableDeclaration","scope":66,"src":"2285:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":62,"name":"bytes","nodeType":"ElementaryTypeName","src":"2285:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2284:28:2"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"2321:0:2"},"scope":67,"src":"2262:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":68,"src":"110:2214:2","usedErrors":[],"usedEvents":[]}],"src":"32:2293:2"},"id":2},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol","exportedSymbols":{"IFunctionsClient":[81]},"id":82,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":69,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IFunctionsClient","contractDependencies":[],"contractKind":"interface","documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"58:49:3","text":"@title Chainlink Functions client interface."},"fullyImplemented":false,"id":81,"linearizedBaseContracts":[81],"name":"IFunctionsClient","nameLocation":"117:16:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"138:490:3","text":"@notice Chainlink Functions response handler called by the Functions Router\n during fullilment from the designated transmitter node in an OCR round.\n @param requestId The requestId returned by FunctionsClient.sendRequest().\n @param response Aggregated response from the request's source code.\n @param err Aggregated error either from the request's source code or from the execution pipeline.\n @dev Either response or error parameter will be set, but never both."},"functionSelector":"0ca76175","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"handleOracleFulfillment","nameLocation":"640:23:3","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"requestId","nameLocation":"672:9:3","nodeType":"VariableDeclaration","scope":80,"src":"664:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":72,"name":"bytes32","nodeType":"ElementaryTypeName","src":"664:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"response","nameLocation":"696:8:3","nodeType":"VariableDeclaration","scope":80,"src":"683:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":74,"name":"bytes","nodeType":"ElementaryTypeName","src":"683:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"err","nameLocation":"719:3:3","nodeType":"VariableDeclaration","scope":80,"src":"706:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":76,"name":"bytes","nodeType":"ElementaryTypeName","src":"706:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"663:60:3"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"732:0:3"},"scope":81,"src":"631:102:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":82,"src":"107:628:3","usedErrors":[],"usedEvents":[]}],"src":"32:704:3"},"id":3},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol","exportedSymbols":{"FunctionsResponse":[736],"IFunctionsRouter":[215]},"id":216,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":83,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol","file":"../libraries/FunctionsResponse.sol","id":85,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":216,"sourceUnit":737,"src":"58:69:4","symbolAliases":[{"foreign":{"id":84,"name":"FunctionsResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"66:17:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IFunctionsRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":86,"nodeType":"StructuredDocumentation","src":"129:49:4","text":"@title Chainlink Functions Router interface."},"fullyImplemented":false,"id":215,"linearizedBaseContracts":[215],"name":"IFunctionsRouter","nameLocation":"188:16:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"209:265:4","text":"@notice The identifier of the route to retrieve the address of the access control contract\n The access control contract controls which accounts can manage subscriptions\n @return id - bytes32 id that can be passed to the \"getContractById\" of the Router"},"functionSelector":"aab396bd","id":92,"implemented":false,"kind":"function","modifiers":[],"name":"getAllowListId","nameLocation":"486:14:4","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"500:2:4"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":92,"src":"526:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":89,"name":"bytes32","nodeType":"ElementaryTypeName","src":"526:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"525:9:4"},"scope":215,"src":"477:58:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"539:181:4","text":"@notice Set the identifier of the route to retrieve the address of the access control contract\n The access control contract controls which accounts can manage subscriptions"},"functionSelector":"ea320e0b","id":98,"implemented":false,"kind":"function","modifiers":[],"name":"setAllowListId","nameLocation":"732:14:4","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"allowListId","nameLocation":"755:11:4","nodeType":"VariableDeclaration","scope":98,"src":"747:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"747:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"746:21:4"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[],"src":"776:0:4"},"scope":215,"src":"723:54:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"781:137:4","text":"@notice Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\n @return adminFee"},"functionSelector":"2a905ccc","id":104,"implemented":false,"kind":"function","modifiers":[],"name":"getAdminFee","nameLocation":"930:11:4","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"941:2:4"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"adminFee","nameLocation":"974:8:4","nodeType":"VariableDeclaration","scope":104,"src":"967:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":101,"name":"uint72","nodeType":"ElementaryTypeName","src":"967:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"966:17:4"},"scope":215,"src":"921:63:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"988:630:4","text":"@notice Sends a request using the provided subscriptionId\n @param subscriptionId - A unique subscription ID allocated by billing system,\n a client can make requests from different contracts referencing the same subscription\n @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n @param dataVersion - Gas limit for the fulfillment callback\n @param callbackGasLimit - Gas limit for the fulfillment callback\n @param donId - An identifier used to determine which route to send the request along\n @return requestId - A unique request identifier"},"functionSelector":"461d2762","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"sendRequest","nameLocation":"1630:11:4","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"subscriptionId","nameLocation":"1654:14:4","nodeType":"VariableDeclaration","scope":120,"src":"1647:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":106,"name":"uint64","nodeType":"ElementaryTypeName","src":"1647:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"data","nameLocation":"1689:4:4","nodeType":"VariableDeclaration","scope":120,"src":"1674:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":108,"name":"bytes","nodeType":"ElementaryTypeName","src":"1674:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"dataVersion","nameLocation":"1706:11:4","nodeType":"VariableDeclaration","scope":120,"src":"1699:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":110,"name":"uint16","nodeType":"ElementaryTypeName","src":"1699:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1730:16:4","nodeType":"VariableDeclaration","scope":120,"src":"1723:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":112,"name":"uint32","nodeType":"ElementaryTypeName","src":"1723:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"donId","nameLocation":"1760:5:4","nodeType":"VariableDeclaration","scope":120,"src":"1752:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1641:128:4"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":120,"src":"1788:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1788:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1787:9:4"},"scope":215,"src":"1621:176:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"1801:622:4","text":"@notice Sends a request to the proposed contracts\n @param subscriptionId - A unique subscription ID allocated by billing system,\n a client can make requests from different contracts referencing the same subscription\n @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n @param dataVersion - Gas limit for the fulfillment callback\n @param callbackGasLimit - Gas limit for the fulfillment callback\n @param donId - An identifier used to determine which route to send the request along\n @return requestId - A unique request identifier"},"functionSelector":"41db4ca3","id":136,"implemented":false,"kind":"function","modifiers":[],"name":"sendRequestToProposed","nameLocation":"2435:21:4","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"subscriptionId","nameLocation":"2469:14:4","nodeType":"VariableDeclaration","scope":136,"src":"2462:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":122,"name":"uint64","nodeType":"ElementaryTypeName","src":"2462:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"data","nameLocation":"2504:4:4","nodeType":"VariableDeclaration","scope":136,"src":"2489:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":124,"name":"bytes","nodeType":"ElementaryTypeName","src":"2489:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"dataVersion","nameLocation":"2521:11:4","nodeType":"VariableDeclaration","scope":136,"src":"2514:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":126,"name":"uint16","nodeType":"ElementaryTypeName","src":"2514:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2545:16:4","nodeType":"VariableDeclaration","scope":136,"src":"2538:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":128,"name":"uint32","nodeType":"ElementaryTypeName","src":"2538:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"donId","nameLocation":"2575:5:4","nodeType":"VariableDeclaration","scope":136,"src":"2567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2567:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2456:128:4"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":136,"src":"2603:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2603:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2602:9:4"},"scope":215,"src":"2426:186:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"2616:763:4","text":"@notice Fulfill the request by:\n - calling back the data that the Oracle returned to the client contract\n - pay the DON for processing the request\n @dev Only callable by the Coordinator contract that is saved in the commitment\n @param response response data from DON consensus\n @param err error from DON consensus\n @param juelsPerGas - current rate of juels/gas\n @param costWithoutFulfillment - The cost of processing the request (in Juels of LINK ), without fulfillment\n @param transmitter - The Node that transmitted the OCR report\n @param commitment - The parameters of the request that must be held consistent between request and response time\n @return fulfillResult -\n @return callbackGasCostJuels -"},"functionSelector":"33060529","id":158,"implemented":false,"kind":"function","modifiers":[],"name":"fulfill","nameLocation":"3391:7:4","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"response","nameLocation":"3417:8:4","nodeType":"VariableDeclaration","scope":158,"src":"3404:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":138,"name":"bytes","nodeType":"ElementaryTypeName","src":"3404:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"err","nameLocation":"3444:3:4","nodeType":"VariableDeclaration","scope":158,"src":"3431:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":140,"name":"bytes","nodeType":"ElementaryTypeName","src":"3431:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"juelsPerGas","nameLocation":"3460:11:4","nodeType":"VariableDeclaration","scope":158,"src":"3453:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":142,"name":"uint96","nodeType":"ElementaryTypeName","src":"3453:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"costWithoutFulfillment","nameLocation":"3484:22:4","nodeType":"VariableDeclaration","scope":158,"src":"3477:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":144,"name":"uint96","nodeType":"ElementaryTypeName","src":"3477:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"transmitter","nameLocation":"3520:11:4","nodeType":"VariableDeclaration","scope":158,"src":"3512:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":146,"name":"address","nodeType":"ElementaryTypeName","src":"3512:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"commitment","nameLocation":"3573:10:4","nodeType":"VariableDeclaration","scope":158,"src":"3537:46:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$735_memory_ptr","typeString":"struct FunctionsResponse.Commitment"},"typeName":{"id":149,"nodeType":"UserDefinedTypeName","pathNode":{"id":148,"name":"FunctionsResponse.Commitment","nameLocations":["3537:17:4","3555:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":735,"src":"3537:28:4"},"referencedDeclaration":735,"src":"3537:28:4","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$735_storage_ptr","typeString":"struct FunctionsResponse.Commitment"}},"visibility":"internal"}],"src":"3398:189:4"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"3606:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FulfillResult_$712","typeString":"enum FunctionsResponse.FulfillResult"},"typeName":{"id":153,"nodeType":"UserDefinedTypeName","pathNode":{"id":152,"name":"FunctionsResponse.FulfillResult","nameLocations":["3606:17:4","3624:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":712,"src":"3606:31:4"},"referencedDeclaration":712,"src":"3606:31:4","typeDescriptions":{"typeIdentifier":"t_enum$_FulfillResult_$712","typeString":"enum FunctionsResponse.FulfillResult"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"3639:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":155,"name":"uint96","nodeType":"ElementaryTypeName","src":"3639:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3605:41:4"},"scope":215,"src":"3382:265:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"3651:172:4","text":"@notice Validate requested gas limit is below the subscription max.\n @param subscriptionId subscription ID\n @param callbackGasLimit desired callback gas limit"},"functionSelector":"10fc49c1","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"isValidCallbackGasLimit","nameLocation":"3835:23:4","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"subscriptionId","nameLocation":"3866:14:4","nodeType":"VariableDeclaration","scope":166,"src":"3859:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":160,"name":"uint64","nodeType":"ElementaryTypeName","src":"3859:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"3889:16:4","nodeType":"VariableDeclaration","scope":166,"src":"3882:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":162,"name":"uint32","nodeType":"ElementaryTypeName","src":"3882:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3858:48:4"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[],"src":"3920:0:4"},"scope":215,"src":"3826:95:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"3925:151:4","text":"@notice Get the current contract given an ID\n @param id A bytes32 identifier for the route\n @return contract The current contract address"},"functionSelector":"a9c9a918","id":174,"implemented":false,"kind":"function","modifiers":[],"name":"getContractById","nameLocation":"4088:15:4","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"id","nameLocation":"4112:2:4","nodeType":"VariableDeclaration","scope":174,"src":"4104:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4104:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4103:12:4"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":174,"src":"4139:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4138:9:4"},"scope":215,"src":"4079:69:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"4152:169:4","text":"@notice Get the proposed next contract given an ID\n @param id A bytes32 identifier for the route\n @return contract The current or proposed contract address"},"functionSelector":"6a2215de","id":182,"implemented":false,"kind":"function","modifiers":[],"name":"getProposedContractById","nameLocation":"4333:23:4","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"id","nameLocation":"4365:2:4","nodeType":"VariableDeclaration","scope":182,"src":"4357:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4357:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4356:12:4"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"4392:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"4392:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4391:9:4"},"scope":215,"src":"4324:77:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"4405:176:4","text":"@notice Return the latest proprosal set\n @return ids The identifiers of the contracts to update\n @return to The addresses of the contracts that will be updated to"},"functionSelector":"badc3eb6","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"getProposedContractSet","nameLocation":"4593:22:4","nodeType":"FunctionDefinition","parameters":{"id":184,"nodeType":"ParameterList","parameters":[],"src":"4615:2:4"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"4641:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4641:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":186,"nodeType":"ArrayTypeName","src":"4641:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"4659:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"4659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":189,"nodeType":"ArrayTypeName","src":"4659:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4640:36:4"},"scope":215,"src":"4584:93:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"4681:97:4","text":"@notice Proposes one or more updates to the contract routes\n @dev Only callable by owner"},"functionSelector":"3e871e4d","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"proposeContractsUpdate","nameLocation":"4790:22:4","nodeType":"FunctionDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"proposalSetIds","nameLocation":"4830:14:4","nodeType":"VariableDeclaration","scope":202,"src":"4813:31:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4813:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":195,"nodeType":"ArrayTypeName","src":"4813:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"proposalSetAddresses","nameLocation":"4863:20:4","nodeType":"VariableDeclaration","scope":202,"src":"4846:37:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"4846:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":198,"nodeType":"ArrayTypeName","src":"4846:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4812:72:4"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"4893:0:4"},"scope":215,"src":"4781:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"4898:107:4","text":"@notice Updates the current contract routes to the proposed contracts\n @dev Only callable by owner"},"functionSelector":"b734c0f4","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"updateContracts","nameLocation":"5017:15:4","nodeType":"FunctionDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"5032:2:4"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"5043:0:4"},"scope":215,"src":"5008:36:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"5048:91:4","text":"@dev Puts the system into an emergency stopped state.\n @dev Only callable by owner"},"functionSelector":"8456cb59","id":210,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"5151:5:4","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"5156:2:4"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"5167:0:4"},"scope":215,"src":"5142:26:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"5172:94:4","text":"@dev Takes the system out of an emergency stopped state.\n @dev Only callable by owner"},"functionSelector":"3f4ba83a","id":214,"implemented":false,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"5278:7:4","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"5285:2:4"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"5296:0:4"},"scope":215,"src":"5269:28:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":216,"src":"178:5121:4","usedErrors":[],"usedEvents":[]}],"src":"32:5268:4"},"id":4},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","exportedSymbols":{"CBOR":[2381],"FunctionsRequest":[678]},"id":679,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":217,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol","file":"../../../vendor/solidity-cborutils/v2.0.0/CBOR.sol","id":219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":679,"sourceUnit":2382,"src":"58:72:5","symbolAliases":[{"foreign":{"id":218,"name":"CBOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"66:4:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"FunctionsRequest","contractDependencies":[],"contractKind":"library","documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"132:80:5","text":"@title Library for encoding the input data of a Functions request into CBOR"},"fullyImplemented":true,"id":678,"linearizedBaseContracts":[678],"name":"FunctionsRequest","nameLocation":"220:16:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":224,"libraryName":{"id":221,"name":"CBOR","nameLocations":["247:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":2381,"src":"247:4:5"},"nodeType":"UsingForDirective","src":"241:31:5","typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"CBOR.CBORBuffer","nameLocations":["256:4:5","261:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"256:15:5"},"referencedDeclaration":1536,"src":"256:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}}},{"constant":true,"functionSelector":"5d641dfc","id":227,"mutability":"constant","name":"REQUEST_DATA_VERSION","nameLocation":"299:20:5","nodeType":"VariableDeclaration","scope":678,"src":"276:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":225,"name":"uint16","nodeType":"ElementaryTypeName","src":"276:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"31","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"322:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"id":230,"mutability":"constant","name":"DEFAULT_BUFFER_SIZE","nameLocation":"353:19:5","nodeType":"VariableDeclaration","scope":678,"src":"327:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"327:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323536","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"visibility":"internal"},{"canonicalName":"FunctionsRequest.Location","id":234,"members":[{"id":231,"name":"Inline","nameLocation":"403:6:5","nodeType":"EnumValue","src":"403:6:5"},{"id":232,"name":"Remote","nameLocation":"446:6:5","nodeType":"EnumValue","src":"446:6:5"},{"id":233,"name":"DONHosted","nameLocation":"536:9:5","nodeType":"EnumValue","src":"536:9:5"}],"name":"Location","nameLocation":"388:8:5","nodeType":"EnumDefinition","src":"383:197:5"},{"canonicalName":"FunctionsRequest.CodeLanguage","id":236,"members":[{"id":235,"name":"JavaScript","nameLocation":"608:10:5","nodeType":"EnumValue","src":"608:10:5"}],"name":"CodeLanguage","nameLocation":"589:12:5","nodeType":"EnumDefinition","src":"584:90:5"},{"canonicalName":"FunctionsRequest.Request","id":256,"members":[{"constant":false,"id":239,"mutability":"mutable","name":"codeLocation","nameLocation":"708:12:5","nodeType":"VariableDeclaration","scope":256,"src":"699:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"},"typeName":{"id":238,"nodeType":"UserDefinedTypeName","pathNode":{"id":237,"name":"Location","nameLocations":["699:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":234,"src":"699:8:5"},"referencedDeclaration":234,"src":"699:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"secretsLocation","nameLocation":"856:15:5","nodeType":"VariableDeclaration","scope":256,"src":"847:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"Location","nameLocations":["847:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":234,"src":"847:8:5"},"referencedDeclaration":234,"src":"847:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"language","nameLocation":"1025:8:5","nodeType":"VariableDeclaration","scope":256,"src":"1012:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$236","typeString":"enum FunctionsRequest.CodeLanguage"},"typeName":{"id":244,"nodeType":"UserDefinedTypeName","pathNode":{"id":243,"name":"CodeLanguage","nameLocations":["1012:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":236,"src":"1012:12:5"},"referencedDeclaration":236,"src":"1012:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$236","typeString":"enum FunctionsRequest.CodeLanguage"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"source","nameLocation":"1144:6:5","nodeType":"VariableDeclaration","scope":256,"src":"1137:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":246,"name":"string","nodeType":"ElementaryTypeName","src":"1137:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"encryptedSecretsReference","nameLocation":"1409:25:5","nodeType":"VariableDeclaration","scope":256,"src":"1403:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":248,"name":"bytes","nodeType":"ElementaryTypeName","src":"1403:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"args","nameLocation":"1662:4:5","nodeType":"VariableDeclaration","scope":256,"src":"1653:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":250,"name":"string","nodeType":"ElementaryTypeName","src":"1653:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":251,"nodeType":"ArrayTypeName","src":"1653:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"bytesArgs","nameLocation":"1805:9:5","nodeType":"VariableDeclaration","scope":256,"src":"1797:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":253,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":254,"nodeType":"ArrayTypeName","src":"1797:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"name":"Request","nameLocation":"685:7:5","nodeType":"StructDefinition","scope":678,"src":"678:1253:5","visibility":"public"},{"errorSelector":"22ce3edd","id":258,"name":"EmptySource","nameLocation":"1941:11:5","nodeType":"ErrorDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"1952:2:5"},"src":"1935:20:5"},{"errorSelector":"e889636f","id":260,"name":"EmptySecrets","nameLocation":"1964:12:5","nodeType":"ErrorDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"1976:2:5"},"src":"1958:21:5"},{"errorSelector":"fe936cb7","id":262,"name":"EmptyArgs","nameLocation":"1988:9:5","nodeType":"ErrorDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"1997:2:5"},"src":"1982:18:5"},{"errorSelector":"a80d31f7","id":264,"name":"NoInlineSecrets","nameLocation":"2009:15:5","nodeType":"ErrorDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"2024:2:5"},"src":"2003:24:5"},{"body":{"id":470,"nodeType":"Block","src":"2236:1192:5","statements":[{"assignments":[277],"declarations":[{"constant":false,"id":277,"mutability":"mutable","name":"buffer","nameLocation":"2265:6:5","nodeType":"VariableDeclaration","scope":470,"src":"2242:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":276,"nodeType":"UserDefinedTypeName","pathNode":{"id":275,"name":"CBOR.CBORBuffer","nameLocations":["2242:4:5","2247:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"2242:15:5"},"referencedDeclaration":1536,"src":"2242:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"id":282,"initialValue":{"arguments":[{"id":280,"name":"DEFAULT_BUFFER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"2286:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":278,"name":"CBOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"2274:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CBOR_$2381_$","typeString":"type(library CBOR)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:5","memberName":"create","nodeType":"MemberAccess","referencedDeclaration":1603,"src":"2274:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (uint256) pure returns (struct CBOR.CBORBuffer memory)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"nodeType":"VariableDeclarationStatement","src":"2242:64:5"},{"expression":{"arguments":[{"hexValue":"636f64654c6f636174696f6e","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2332:14:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_82e791741c7274b123c7599c398a59441cc81a8ed229387daff72172292ba931","typeString":"literal_string \"codeLocation\""},"value":"codeLocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_82e791741c7274b123c7599c398a59441cc81a8ed229387daff72172292ba931","typeString":"literal_string \"codeLocation\""}],"expression":{"id":283,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2313:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2320:11:5","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"2313:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2313:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"2313:34:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":294,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2381:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2386:12:5","memberName":"codeLocation","nodeType":"MemberAccess","referencedDeclaration":239,"src":"2381:17:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}],"id":293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2373:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:5","typeDescriptions":{}}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":289,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2353:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2360:12:5","memberName":"writeUInt256","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"2353:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2353:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"2353:47:5"},{"expression":{"arguments":[{"hexValue":"6c616e6775616765","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:10:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_829231cb167e02f32beea96e7533af0ebdf9e1f7ccf9a7270e717c48fe6f0e8e","typeString":"literal_string \"language\""},"value":"language"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_829231cb167e02f32beea96e7533af0ebdf9e1f7ccf9a7270e717c48fe6f0e8e","typeString":"literal_string \"language\""}],"expression":{"id":299,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2407:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2414:11:5","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"2407:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"2407:30:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":310,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2471:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2476:8:5","memberName":"language","nodeType":"MemberAccess","referencedDeclaration":245,"src":"2471:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$236","typeString":"enum FunctionsRequest.CodeLanguage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_CodeLanguage_$236","typeString":"enum FunctionsRequest.CodeLanguage"}],"id":309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2463:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:5","typeDescriptions":{}}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2463:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":305,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2443:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:5","memberName":"writeUInt256","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"2443:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"ExpressionStatement","src":"2443:43:5"},{"expression":{"arguments":[{"hexValue":"736f75726365","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2512:8:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7e3126f87228afb82c9b18537eed25aaeb8171a78814781c26ed2cfeff27e69","typeString":"literal_string \"source\""},"value":"source"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f7e3126f87228afb82c9b18537eed25aaeb8171a78814781c26ed2cfeff27e69","typeString":"literal_string \"source\""}],"expression":{"id":315,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2493:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2500:11:5","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"2493:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":320,"nodeType":"ExpressionStatement","src":"2493:28:5"},{"expression":{"arguments":[{"expression":{"id":324,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2546:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2551:6:5","memberName":"source","nodeType":"MemberAccess","referencedDeclaration":247,"src":"2546:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":321,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2527:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2534:11:5","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"2527:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2527:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":327,"nodeType":"ExpressionStatement","src":"2527:31:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":328,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2569:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2574:4:5","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":252,"src":"2569:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:6:5","memberName":"length","nodeType":"MemberAccess","src":"2569:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2588:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2569:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"2565:227:5","trueBody":{"id":372,"nodeType":"Block","src":"2591:201:5","statements":[{"expression":{"arguments":[{"hexValue":"61726773","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2618:6:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5edaa566e23eea054bbd292b7924839b5627321873e67e30cd0052468eaf099","typeString":"literal_string \"args\""},"value":"args"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5edaa566e23eea054bbd292b7924839b5627321873e67e30cd0052468eaf099","typeString":"literal_string \"args\""}],"expression":{"id":333,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2599:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2606:11:5","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"2599:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"ExpressionStatement","src":"2599:26:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":339,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2633:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2640:10:5","memberName":"startArray","nodeType":"MemberAccess","referencedDeclaration":1880,"src":"2633:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"2633:19:5"},{"body":{"id":365,"nodeType":"Block","src":"2707:51:5","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":359,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2736:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2741:4:5","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":252,"src":"2736:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":362,"indexExpression":{"id":361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2746:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2736:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":356,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2717:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2724:11:5","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"2717:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":364,"nodeType":"ExpressionStatement","src":"2717:32:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2680:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":349,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2684:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2689:4:5","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":252,"src":"2684:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2694:6:5","memberName":"length","nodeType":"MemberAccess","src":"2684:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2680:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":366,"initializationExpression":{"assignments":[345],"declarations":[{"constant":false,"id":345,"mutability":"mutable","name":"i","nameLocation":"2673:1:5","nodeType":"VariableDeclaration","scope":366,"src":"2665:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":347,"initialValue":{"hexValue":"30","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2677:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2665:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2702:3:5","subExpression":{"id":353,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2704:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":355,"nodeType":"ExpressionStatement","src":"2702:3:5"},"nodeType":"ForStatement","src":"2660:98:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":367,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2765:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2772:11:5","memberName":"endSequence","nodeType":"MemberAccess","referencedDeclaration":1946,"src":"2765:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"ExpressionStatement","src":"2765:20:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":374,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2802:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2807:25:5","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":249,"src":"2802:30:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2833:6:5","memberName":"length","nodeType":"MemberAccess","src":"2802:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2842:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2802:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":419,"nodeType":"IfStatement","src":"2798:346:5","trueBody":{"id":418,"nodeType":"Block","src":"2845:299:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":379,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2857:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2862:15:5","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":242,"src":"2857:20:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":381,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2881:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$234_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2890:6:5","memberName":"Inline","nodeType":"MemberAccess","referencedDeclaration":231,"src":"2881:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"src":"2857:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":388,"nodeType":"IfStatement","src":"2853:88:5","trueBody":{"id":387,"nodeType":"Block","src":"2898:43:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":384,"name":"NoInlineSecrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2915:15:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2915:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"RevertStatement","src":"2908:24:5"}]}},{"expression":{"arguments":[{"hexValue":"736563726574734c6f636174696f6e","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2967:17:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc4236fa30b862c671ead413b1a0f61e653ce5b99e29091ee0dc6fc114ee9cc8","typeString":"literal_string \"secretsLocation\""},"value":"secretsLocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fc4236fa30b862c671ead413b1a0f61e653ce5b99e29091ee0dc6fc114ee9cc8","typeString":"literal_string \"secretsLocation\""}],"expression":{"id":389,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2948:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2955:11:5","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"2948:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":394,"nodeType":"ExpressionStatement","src":"2948:37:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":400,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"3021:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3026:15:5","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":242,"src":"3021:20:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}],"id":399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3013:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3013:7:5","typeDescriptions":{}}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3013:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":395,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2993:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3000:12:5","memberName":"writeUInt256","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"2993:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2993:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":404,"nodeType":"ExpressionStatement","src":"2993:50:5"},{"expression":{"arguments":[{"hexValue":"73656372657473","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3070:9:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d66480a2fe9622f21e4ac7cf8871545e676a686cade1079d79e2fb1df6a4f3ac","typeString":"literal_string \"secrets\""},"value":"secrets"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d66480a2fe9622f21e4ac7cf8871545e676a686cade1079d79e2fb1df6a4f3ac","typeString":"literal_string \"secrets\""}],"expression":{"id":405,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3051:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3058:11:5","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"3051:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3051:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"3051:29:5"},{"expression":{"arguments":[{"expression":{"id":414,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"3106:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3111:25:5","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":249,"src":"3106:30:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":411,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3088:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3095:10:5","memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":1788,"src":"3088:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3088:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"3088:49:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":420,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"3154:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3159:9:5","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":255,"src":"3154:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3169:6:5","memberName":"length","nodeType":"MemberAccess","src":"3154:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3178:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3154:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":465,"nodeType":"IfStatement","src":"3150:246:5","trueBody":{"id":464,"nodeType":"Block","src":"3181:215:5","statements":[{"expression":{"arguments":[{"hexValue":"627974657341726773","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3208:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3549a38a23cb1774056dbdf96dbc8ece30f733b8dd04641913d46a279936ce0b","typeString":"literal_string \"bytesArgs\""},"value":"bytesArgs"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3549a38a23cb1774056dbdf96dbc8ece30f733b8dd04641913d46a279936ce0b","typeString":"literal_string \"bytesArgs\""}],"expression":{"id":425,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3189:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3196:11:5","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"3189:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3189:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"3189:31:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":431,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3228:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3235:10:5","memberName":"startArray","nodeType":"MemberAccess","referencedDeclaration":1880,"src":"3228:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3228:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"3228:19:5"},{"body":{"id":457,"nodeType":"Block","src":"3307:55:5","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":451,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"3335:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3340:9:5","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":255,"src":"3335:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":454,"indexExpression":{"id":453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3350:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3335:17:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":448,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3317:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3324:10:5","memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":1788,"src":"3317:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"ExpressionStatement","src":"3317:36:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3275:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":441,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"3279:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3284:9:5","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":255,"src":"3279:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3294:6:5","memberName":"length","nodeType":"MemberAccess","src":"3279:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3275:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":458,"initializationExpression":{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"i","nameLocation":"3268:1:5","nodeType":"VariableDeclaration","scope":458,"src":"3260:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":439,"initialValue":{"hexValue":"30","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3272:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3260:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3302:3:5","subExpression":{"id":445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3304:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"3302:3:5"},"nodeType":"ForStatement","src":"3255:107:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":459,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3369:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3376:11:5","memberName":"endSequence","nodeType":"MemberAccess","referencedDeclaration":1946,"src":"3369:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3369:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":463,"nodeType":"ExpressionStatement","src":"3369:20:5"}]}},{"expression":{"expression":{"expression":{"id":466,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3409:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3416:3:5","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"3409:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3420:3:5","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"3409:14:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":272,"id":469,"nodeType":"Return","src":"3402:21:5"}]},"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"2031:124:5","text":"@notice Encodes a Request to CBOR encoded bytes\n @param self The request to encode\n @return CBOR encoded bytes"},"id":471,"implemented":true,"kind":"function","modifiers":[],"name":"encodeCBOR","nameLocation":"2167:10:5","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"self","nameLocation":"2193:4:5","nodeType":"VariableDeclaration","scope":471,"src":"2178:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":267,"nodeType":"UserDefinedTypeName","pathNode":{"id":266,"name":"Request","nameLocations":["2178:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"2178:7:5"},"referencedDeclaration":256,"src":"2178:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"}],"src":"2177:21:5"},"returnParameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":471,"src":"2222:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":270,"name":"bytes","nodeType":"ElementaryTypeName","src":"2222:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2221:14:5"},"scope":678,"src":"2158:1270:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"3927:157:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":488,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"3943:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3937:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":486,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:5","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3937:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3951:6:5","memberName":"length","nodeType":"MemberAccess","src":"3937:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3961:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3937:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":496,"nodeType":"IfStatement","src":"3933:51:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":493,"name":"EmptySource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3971:11:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"RevertStatement","src":"3964:20:5"}},{"expression":{"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":497,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"3991:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3996:12:5","memberName":"codeLocation","nodeType":"MemberAccess","referencedDeclaration":239,"src":"3991:17:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":500,"name":"codeLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4011:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"src":"3991:32:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"id":502,"nodeType":"ExpressionStatement","src":"3991:32:5"},{"expression":{"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":503,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4029:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4034:8:5","memberName":"language","nodeType":"MemberAccess","referencedDeclaration":245,"src":"4029:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$236","typeString":"enum FunctionsRequest.CodeLanguage"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":506,"name":"language","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4045:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$236","typeString":"enum FunctionsRequest.CodeLanguage"}},"src":"4029:24:5","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$236","typeString":"enum FunctionsRequest.CodeLanguage"}},"id":508,"nodeType":"ExpressionStatement","src":"4029:24:5"},{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":509,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4059:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4064:6:5","memberName":"source","nodeType":"MemberAccess","referencedDeclaration":247,"src":"4059:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":512,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"4073:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4059:20:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":514,"nodeType":"ExpressionStatement","src":"4059:20:5"}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"3432:342:5","text":"@notice Initializes a Chainlink Functions Request\n @dev Sets the codeLocation and code on the request\n @param self The uninitialized request\n @param codeLocation The user provided source code location\n @param language The programming language of the user code\n @param source The user provided source code or a url"},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"initializeRequest","nameLocation":"3786:17:5","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"self","nameLocation":"3824:4:5","nodeType":"VariableDeclaration","scope":516,"src":"3809:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":474,"nodeType":"UserDefinedTypeName","pathNode":{"id":473,"name":"Request","nameLocations":["3809:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"3809:7:5"},"referencedDeclaration":256,"src":"3809:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"codeLocation","nameLocation":"3843:12:5","nodeType":"VariableDeclaration","scope":516,"src":"3834:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"},"typeName":{"id":477,"nodeType":"UserDefinedTypeName","pathNode":{"id":476,"name":"Location","nameLocations":["3834:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":234,"src":"3834:8:5"},"referencedDeclaration":234,"src":"3834:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"language","nameLocation":"3874:8:5","nodeType":"VariableDeclaration","scope":516,"src":"3861:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$236","typeString":"enum FunctionsRequest.CodeLanguage"},"typeName":{"id":480,"nodeType":"UserDefinedTypeName","pathNode":{"id":479,"name":"CodeLanguage","nameLocations":["3861:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":236,"src":"3861:12:5"},"referencedDeclaration":236,"src":"3861:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$236","typeString":"enum FunctionsRequest.CodeLanguage"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"source","nameLocation":"3902:6:5","nodeType":"VariableDeclaration","scope":516,"src":"3888:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":482,"name":"string","nodeType":"ElementaryTypeName","src":"3888:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3803:109:5"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"3927:0:5"},"scope":678,"src":"3777:307:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":534,"nodeType":"Block","src":"4436:94:5","statements":[{"expression":{"arguments":[{"id":526,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4460:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},{"expression":{"id":527,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"4466:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$234_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4475:6:5","memberName":"Inline","nodeType":"MemberAccess","referencedDeclaration":231,"src":"4466:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},{"expression":{"id":529,"name":"CodeLanguage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4483:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CodeLanguage_$236_$","typeString":"type(enum FunctionsRequest.CodeLanguage)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4496:10:5","memberName":"JavaScript","nodeType":"MemberAccess","referencedDeclaration":235,"src":"4483:23:5","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$236","typeString":"enum FunctionsRequest.CodeLanguage"}},{"id":531,"name":"javaScriptSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"4508:16:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"},{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"},{"typeIdentifier":"t_enum$_CodeLanguage_$236","typeString":"enum FunctionsRequest.CodeLanguage"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":525,"name":"initializeRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"4442:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$256_memory_ptr_$_t_enum$_Location_$234_$_t_enum$_CodeLanguage_$236_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct FunctionsRequest.Request memory,enum FunctionsRequest.Location,enum FunctionsRequest.CodeLanguage,string memory) pure"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4442:83:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4442:83:5"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"4088:232:5","text":"@notice Initializes a Chainlink Functions Request\n @dev Simplified version of initializeRequest for PoC\n @param self The uninitialized request\n @param javaScriptSource The user provided JS code (must not be empty)"},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"initializeRequestForInlineJavaScript","nameLocation":"4332:36:5","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"self","nameLocation":"4384:4:5","nodeType":"VariableDeclaration","scope":535,"src":"4369:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":519,"nodeType":"UserDefinedTypeName","pathNode":{"id":518,"name":"Request","nameLocations":["4369:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"4369:7:5"},"referencedDeclaration":256,"src":"4369:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"javaScriptSource","nameLocation":"4404:16:5","nodeType":"VariableDeclaration","scope":535,"src":"4390:30:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":521,"name":"string","nodeType":"ElementaryTypeName","src":"4390:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4368:53:5"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"4436:0:5"},"scope":678,"src":"4323:207:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":565,"nodeType":"Block","src":"4852:184:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":544,"name":"encryptedSecretsReference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"4862:25:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4888:6:5","memberName":"length","nodeType":"MemberAccess","src":"4862:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4862:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":551,"nodeType":"IfStatement","src":"4858:64:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":548,"name":"EmptySecrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"4908:12:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"RevertStatement","src":"4901:21:5"}},{"expression":{"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":552,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4929:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4934:15:5","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":242,"src":"4929:20:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":555,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"4952:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$234_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4961:6:5","memberName":"Remote","nodeType":"MemberAccess","referencedDeclaration":232,"src":"4952:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"src":"4929:38:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"id":558,"nodeType":"ExpressionStatement","src":"4929:38:5"},{"expression":{"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":559,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4973:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4978:25:5","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":249,"src":"4973:30:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":562,"name":"encryptedSecretsReference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"5006:25:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4973:58:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":564,"nodeType":"ExpressionStatement","src":"4973:58:5"}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"4534:211:5","text":"@notice Adds Remote user encrypted secrets to a Request\n @param self The initialized request\n @param encryptedSecretsReference Encrypted comma-separated string of URLs pointing to off-chain secrets"},"id":566,"implemented":true,"kind":"function","modifiers":[],"name":"addSecretsReference","nameLocation":"4757:19:5","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"self","nameLocation":"4792:4:5","nodeType":"VariableDeclaration","scope":566,"src":"4777:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":538,"nodeType":"UserDefinedTypeName","pathNode":{"id":537,"name":"Request","nameLocations":["4777:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"4777:7:5"},"referencedDeclaration":256,"src":"4777:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"encryptedSecretsReference","nameLocation":"4811:25:5","nodeType":"VariableDeclaration","scope":566,"src":"4798:38:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":540,"name":"bytes","nodeType":"ElementaryTypeName","src":"4798:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4776:61:5"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4852:0:5"},"scope":678,"src":"4748:288:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":626,"nodeType":"Block","src":"5357:311:5","statements":[{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"buffer","nameLocation":"5386:6:5","nodeType":"VariableDeclaration","scope":626,"src":"5363:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":580,"nodeType":"UserDefinedTypeName","pathNode":{"id":579,"name":"CBOR.CBORBuffer","nameLocations":["5363:4:5","5368:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"5363:15:5"},"referencedDeclaration":1536,"src":"5363:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"id":586,"initialValue":{"arguments":[{"id":584,"name":"DEFAULT_BUFFER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5407:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":582,"name":"CBOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"5395:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CBOR_$2381_$","typeString":"type(library CBOR)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5400:6:5","memberName":"create","nodeType":"MemberAccess","referencedDeclaration":1603,"src":"5395:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (uint256) pure returns (struct CBOR.CBORBuffer memory)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5395:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"nodeType":"VariableDeclarationStatement","src":"5363:64:5"},{"expression":{"arguments":[{"hexValue":"736c6f744944","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5453:8:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5aaf47ebef83f4d962805dda4c452b2732f648f22dd85d8c0d1bc70bede536f","typeString":"literal_string \"slotID\""},"value":"slotID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5aaf47ebef83f4d962805dda4c452b2732f648f22dd85d8c0d1bc70bede536f","typeString":"literal_string \"slotID\""}],"expression":{"id":587,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"5434:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5441:11:5","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"5434:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5434:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":592,"nodeType":"ExpressionStatement","src":"5434:28:5"},{"expression":{"arguments":[{"id":596,"name":"slotID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"5487:6:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":593,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"5468:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5475:11:5","memberName":"writeUInt64","nodeType":"MemberAccess","referencedDeclaration":1725,"src":"5468:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint64_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint64) pure"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"ExpressionStatement","src":"5468:26:5"},{"expression":{"arguments":[{"hexValue":"76657273696f6e","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5519:9:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba1b4dd49a85c82b73f138b112d5135149203ed36c1ec80c46f8c572daa7c5ec","typeString":"literal_string \"version\""},"value":"version"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ba1b4dd49a85c82b73f138b112d5135149203ed36c1ec80c46f8c572daa7c5ec","typeString":"literal_string \"version\""}],"expression":{"id":599,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"5500:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5507:11:5","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"5500:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"ExpressionStatement","src":"5500:29:5"},{"expression":{"arguments":[{"id":608,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"5554:7:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":605,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"5535:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5542:11:5","memberName":"writeUInt64","nodeType":"MemberAccess","referencedDeclaration":1725,"src":"5535:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint64_$returns$__$attached_to$_t_struct$_CBORBuffer_$1536_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint64) pure"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":610,"nodeType":"ExpressionStatement","src":"5535:27:5"},{"expression":{"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":611,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"5569:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5574:15:5","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":242,"src":"5569:20:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":614,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"5592:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$234_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5601:9:5","memberName":"DONHosted","nodeType":"MemberAccess","referencedDeclaration":233,"src":"5592:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"src":"5569:41:5","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$234","typeString":"enum FunctionsRequest.Location"}},"id":617,"nodeType":"ExpressionStatement","src":"5569:41:5"},{"expression":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":618,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"5616:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5621:25:5","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":249,"src":"5616:30:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":621,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"5649:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5656:3:5","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"5649:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5660:3:5","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"5649:14:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5616:47:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":625,"nodeType":"ExpressionStatement","src":"5616:47:5"}]},"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"5040:220:5","text":"@notice Adds DON-hosted secrets reference to a Request\n @param self The initialized request\n @param slotID Slot ID of the user's secrets hosted on DON\n @param version User data version (for the slotID)"},"id":627,"implemented":true,"kind":"function","modifiers":[],"name":"addDONHostedSecrets","nameLocation":"5272:19:5","nodeType":"FunctionDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"self","nameLocation":"5307:4:5","nodeType":"VariableDeclaration","scope":627,"src":"5292:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":569,"nodeType":"UserDefinedTypeName","pathNode":{"id":568,"name":"Request","nameLocations":["5292:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"5292:7:5"},"referencedDeclaration":256,"src":"5292:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"slotID","nameLocation":"5319:6:5","nodeType":"VariableDeclaration","scope":627,"src":"5313:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":571,"name":"uint8","nodeType":"ElementaryTypeName","src":"5313:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"version","nameLocation":"5334:7:5","nodeType":"VariableDeclaration","scope":627,"src":"5327:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":573,"name":"uint64","nodeType":"ElementaryTypeName","src":"5327:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5291:51:5"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"5357:0:5"},"scope":678,"src":"5263:405:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":651,"nodeType":"Block","src":"5901:74:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":637,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"5911:4:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5916:6:5","memberName":"length","nodeType":"MemberAccess","src":"5911:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5926:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5911:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":644,"nodeType":"IfStatement","src":"5907:40:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":641,"name":"EmptyArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"5936:9:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5936:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"RevertStatement","src":"5929:18:5"}},{"expression":{"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":645,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5954:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5959:4:5","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":252,"src":"5954:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":648,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"5966:4:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"5954:16:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":650,"nodeType":"ExpressionStatement","src":"5954:16:5"}]},"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"5672:152:5","text":"@notice Sets args for the user run function\n @param self The initialized request\n @param args The array of string args (must not be empty)"},"id":652,"implemented":true,"kind":"function","modifiers":[],"name":"setArgs","nameLocation":"5836:7:5","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"self","nameLocation":"5859:4:5","nodeType":"VariableDeclaration","scope":652,"src":"5844:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":630,"nodeType":"UserDefinedTypeName","pathNode":{"id":629,"name":"Request","nameLocations":["5844:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"5844:7:5"},"referencedDeclaration":256,"src":"5844:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"args","nameLocation":"5881:4:5","nodeType":"VariableDeclaration","scope":652,"src":"5865:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":632,"name":"string","nodeType":"ElementaryTypeName","src":"5865:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":633,"nodeType":"ArrayTypeName","src":"5865:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5843:43:5"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"5901:0:5"},"scope":678,"src":"5827:148:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":676,"nodeType":"Block","src":"6217:79:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":662,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"6227:4:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6232:6:5","memberName":"length","nodeType":"MemberAccess","src":"6227:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6242:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6227:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":669,"nodeType":"IfStatement","src":"6223:40:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":666,"name":"EmptyArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6252:9:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6252:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"RevertStatement","src":"6245:18:5"}},{"expression":{"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":670,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"6270:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6275:9:5","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":255,"src":"6270:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":673,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"6287:4:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"6270:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":675,"nodeType":"ExpressionStatement","src":"6270:21:5"}]},"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"5979:157:5","text":"@notice Sets bytes args for the user run function\n @param self The initialized request\n @param args The array of bytes args (must not be empty)"},"id":677,"implemented":true,"kind":"function","modifiers":[],"name":"setBytesArgs","nameLocation":"6148:12:5","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"self","nameLocation":"6176:4:5","nodeType":"VariableDeclaration","scope":677,"src":"6161:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":655,"nodeType":"UserDefinedTypeName","pathNode":{"id":654,"name":"Request","nameLocations":["6161:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"6161:7:5"},"referencedDeclaration":256,"src":"6161:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"args","nameLocation":"6197:4:5","nodeType":"VariableDeclaration","scope":677,"src":"6182:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":657,"name":"bytes","nodeType":"ElementaryTypeName","src":"6182:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":658,"nodeType":"ArrayTypeName","src":"6182:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6160:42:5"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[],"src":"6217:0:5"},"scope":678,"src":"6139:157:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":679,"src":"212:6086:5","usedErrors":[258,260,262,264],"usedEvents":[]}],"src":"32:6267:5"},"id":5},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol","exportedSymbols":{"FunctionsResponse":[736]},"id":737,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":680,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"FunctionsResponse","contractDependencies":[],"contractKind":"library","documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"58:81:6","text":"@title Library of types that are used for fulfillment of a Functions request"},"fullyImplemented":true,"id":736,"linearizedBaseContracts":[736],"name":"FunctionsResponse","nameLocation":"147:17:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"FunctionsResponse.RequestMeta","id":704,"members":[{"constant":false,"id":683,"mutability":"mutable","name":"data","nameLocation":"273:4:6","nodeType":"VariableDeclaration","scope":704,"src":"267:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":682,"name":"bytes","nodeType":"ElementaryTypeName","src":"267:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"flags","nameLocation":"448:5:6","nodeType":"VariableDeclaration","scope":704,"src":"440:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"440:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"requestingContract","nameLocation":"542:18:6","nodeType":"VariableDeclaration","scope":704,"src":"534:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"availableBalance","nameLocation":"634:16:6","nodeType":"VariableDeclaration","scope":704,"src":"627:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":688,"name":"uint96","nodeType":"ElementaryTypeName","src":"627:6:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"adminFee","nameLocation":"796:8:6","nodeType":"VariableDeclaration","scope":704,"src":"789:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":690,"name":"uint72","nodeType":"ElementaryTypeName","src":"789:6:6","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"subscriptionId","nameLocation":"958:14:6","nodeType":"VariableDeclaration","scope":704,"src":"951:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":692,"name":"uint64","nodeType":"ElementaryTypeName","src":"951:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"initiatedRequests","nameLocation":"1075:17:6","nodeType":"VariableDeclaration","scope":704,"src":"1068:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":694,"name":"uint64","nodeType":"ElementaryTypeName","src":"1068:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1162:16:6","nodeType":"VariableDeclaration","scope":704,"src":"1155:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":696,"name":"uint32","nodeType":"ElementaryTypeName","src":"1155:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"dataVersion","nameLocation":"1279:11:6","nodeType":"VariableDeclaration","scope":704,"src":"1272:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":698,"name":"uint16","nodeType":"ElementaryTypeName","src":"1272:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"completedRequests","nameLocation":"1402:17:6","nodeType":"VariableDeclaration","scope":704,"src":"1395:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":700,"name":"uint64","nodeType":"ElementaryTypeName","src":"1395:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"subscriptionOwner","nameLocation":"1521:17:6","nodeType":"VariableDeclaration","scope":704,"src":"1513:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"1513:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"RequestMeta","nameLocation":"249:11:6","nodeType":"StructDefinition","scope":736,"src":"242:1355:6","visibility":"public"},{"canonicalName":"FunctionsResponse.FulfillResult","id":712,"members":[{"id":705,"name":"FULFILLED","nameLocation":"1626:9:6","nodeType":"EnumValue","src":"1626:9:6"},{"id":706,"name":"USER_CALLBACK_ERROR","nameLocation":"1646:19:6","nodeType":"EnumValue","src":"1646:19:6"},{"id":707,"name":"INVALID_REQUEST_ID","nameLocation":"1676:18:6","nodeType":"EnumValue","src":"1676:18:6"},{"id":708,"name":"COST_EXCEEDS_COMMITMENT","nameLocation":"1705:23:6","nodeType":"EnumValue","src":"1705:23:6"},{"id":709,"name":"INSUFFICIENT_GAS_PROVIDED","nameLocation":"1739:25:6","nodeType":"EnumValue","src":"1739:25:6"},{"id":710,"name":"SUBSCRIPTION_BALANCE_INVARIANT_VIOLATION","nameLocation":"1775:40:6","nodeType":"EnumValue","src":"1775:40:6"},{"id":711,"name":"INVALID_COMMITMENT","nameLocation":"1826:18:6","nodeType":"EnumValue","src":"1826:18:6"}],"name":"FulfillResult","nameLocation":"1606:13:6","nodeType":"EnumDefinition","src":"1601:252:6"},{"canonicalName":"FunctionsResponse.Commitment","id":735,"members":[{"constant":false,"id":714,"mutability":"mutable","name":"requestId","nameLocation":"1889:9:6","nodeType":"VariableDeclaration","scope":735,"src":"1881:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1881:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"coordinator","nameLocation":"2024:11:6","nodeType":"VariableDeclaration","scope":735,"src":"2016:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"estimatedTotalCostJuels","nameLocation":"2174:23:6","nodeType":"VariableDeclaration","scope":735,"src":"2167:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":717,"name":"uint96","nodeType":"ElementaryTypeName","src":"2167:6:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"client","nameLocation":"2313:6:6","nodeType":"VariableDeclaration","scope":735,"src":"2305:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"2305:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"subscriptionId","nameLocation":"2441:14:6","nodeType":"VariableDeclaration","scope":735,"src":"2434:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":721,"name":"uint64","nodeType":"ElementaryTypeName","src":"2434:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2564:16:6","nodeType":"VariableDeclaration","scope":735,"src":"2557:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":723,"name":"uint32","nodeType":"ElementaryTypeName","src":"2557:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"adminFee","nameLocation":"2709:8:6","nodeType":"VariableDeclaration","scope":735,"src":"2702:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":725,"name":"uint72","nodeType":"ElementaryTypeName","src":"2702:6:6","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"donFee","nameLocation":"2889:6:6","nodeType":"VariableDeclaration","scope":735,"src":"2882:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":727,"name":"uint72","nodeType":"ElementaryTypeName","src":"2882:6:6","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"gasOverheadBeforeCallback","nameLocation":"3025:25:6","nodeType":"VariableDeclaration","scope":735,"src":"3018:32:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":729,"name":"uint40","nodeType":"ElementaryTypeName","src":"3018:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":732,"mutability":"mutable","name":"gasOverheadAfterCallback","nameLocation":"3147:24:6","nodeType":"VariableDeclaration","scope":735,"src":"3140:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":731,"name":"uint40","nodeType":"ElementaryTypeName","src":"3140:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"timeoutTimestamp","nameLocation":"3268:16:6","nodeType":"VariableDeclaration","scope":735,"src":"3261:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":733,"name":"uint32","nodeType":"ElementaryTypeName","src":"3261:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Commitment","nameLocation":"1864:10:6","nodeType":"StructDefinition","scope":736,"src":"1857:1538:6","visibility":"public"}],"scope":737,"src":"139:3258:6","usedErrors":[],"usedEvents":[]}],"src":"32:3366:6"},"id":6},"@chainlink/contracts/src/v0.8/functions/v1_3_0/FunctionsClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_3_0/FunctionsClient.sol","exportedSymbols":{"FunctionsClient":[854],"FunctionsRequest":[678],"IFunctionsClient":[81],"IFunctionsRouter":[215]},"id":855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":738,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:7"},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol","file":"../v1_0_0/interfaces/IFunctionsRouter.sol","id":740,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":855,"sourceUnit":216,"src":"58:75:7","symbolAliases":[{"foreign":{"id":739,"name":"IFunctionsRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"66:16:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol","file":"../v1_0_0/interfaces/IFunctionsClient.sol","id":742,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":855,"sourceUnit":82,"src":"134:75:7","symbolAliases":[{"foreign":{"id":741,"name":"IFunctionsClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"142:16:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","file":"../v1_0_0/libraries/FunctionsRequest.sol","id":744,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":855,"sourceUnit":679,"src":"211:74:7","symbolAliases":[{"foreign":{"id":743,"name":"FunctionsRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"219:16:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":746,"name":"IFunctionsClient","nameLocations":["479:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"479:16:7"},"id":747,"nodeType":"InheritanceSpecifier","src":"479:16:7"}],"canonicalName":"FunctionsClient","contractDependencies":[],"contractKind":"contract","documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"287:155:7","text":"@title The Chainlink Functions client contract\n @notice Contract developers can inherit this contract in order to make Chainlink Functions requests"},"fullyImplemented":false,"id":854,"linearizedBaseContracts":[854,81],"name":"FunctionsClient","nameLocation":"460:15:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":751,"libraryName":{"id":748,"name":"FunctionsRequest","nameLocations":["506:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":678,"src":"506:16:7"},"nodeType":"UsingForDirective","src":"500:52:7","typeName":{"id":750,"nodeType":"UserDefinedTypeName","pathNode":{"id":749,"name":"FunctionsRequest.Request","nameLocations":["527:16:7","544:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"527:24:7"},"referencedDeclaration":256,"src":"527:24:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}}},{"constant":false,"id":754,"mutability":"immutable","name":"i_functionsRouter","nameLocation":"592:17:7","nodeType":"VariableDeclaration","scope":854,"src":"556:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$215","typeString":"contract IFunctionsRouter"},"typeName":{"id":753,"nodeType":"UserDefinedTypeName","pathNode":{"id":752,"name":"IFunctionsRouter","nameLocations":["556:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":215,"src":"556:16:7"},"referencedDeclaration":215,"src":"556:16:7","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$215","typeString":"contract IFunctionsRouter"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db8","id":758,"name":"RequestSent","nameLocation":"620:11:7","nodeType":"EventDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"648:2:7","nodeType":"VariableDeclaration","scope":758,"src":"632:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"632:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"631:20:7"},"src":"614:38:7"},{"anonymous":false,"eventSelector":"85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e6","id":762,"name":"RequestFulfilled","nameLocation":"661:16:7","nodeType":"EventDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"694:2:7","nodeType":"VariableDeclaration","scope":762,"src":"678:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"678:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"677:20:7"},"src":"655:43:7"},{"errorSelector":"c6829f83","id":764,"name":"OnlyRouterCanFulfill","nameLocation":"708:20:7","nodeType":"ErrorDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[],"src":"728:2:7"},"src":"702:29:7"},{"body":{"id":775,"nodeType":"Block","src":"763:55:7","statements":[{"expression":{"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":769,"name":"i_functionsRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"769:17:7","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$215","typeString":"contract IFunctionsRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":771,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"806:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":770,"name":"IFunctionsRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"789:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFunctionsRouter_$215_$","typeString":"type(contract IFunctionsRouter)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"789:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$215","typeString":"contract IFunctionsRouter"}},"src":"769:44:7","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$215","typeString":"contract IFunctionsRouter"}},"id":774,"nodeType":"ExpressionStatement","src":"769:44:7"}]},"id":776,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"router","nameLocation":"755:6:7","nodeType":"VariableDeclaration","scope":776,"src":"747:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"746:16:7"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"763:0:7"},"scope":854,"src":"735:83:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":808,"nodeType":"Block","src":"1351:237:7","statements":[{"assignments":[791],"declarations":[{"constant":false,"id":791,"mutability":"mutable","name":"requestId","nameLocation":"1365:9:7","nodeType":"VariableDeclaration","scope":808,"src":"1357:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1357:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"id":794,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1414:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":795,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"1436:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":796,"name":"FunctionsRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"1448:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FunctionsRequest_$678_$","typeString":"type(library FunctionsRequest)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1465:20:7","memberName":"REQUEST_DATA_VERSION","nodeType":"MemberAccess","referencedDeclaration":227,"src":"1448:37:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":798,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"1493:16:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":799,"name":"donId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"1517:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":792,"name":"i_functionsRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"1377:17:7","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$215","typeString":"contract IFunctionsRouter"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1395:11:7","memberName":"sendRequest","nodeType":"MemberAccess","referencedDeclaration":120,"src":"1377:29:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint64_$_t_bytes_memory_ptr_$_t_uint16_$_t_uint32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (uint64,bytes memory,uint16,uint32,bytes32) external returns (bytes32)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1377:151:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1357:171:7"},{"eventCall":{"arguments":[{"id":803,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1551:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":802,"name":"RequestSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1539:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1539:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":805,"nodeType":"EmitStatement","src":"1534:27:7"},{"expression":{"id":806,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1574:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":789,"id":807,"nodeType":"Return","src":"1567:16:7"}]},"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"822:375:7","text":"@notice Sends a Chainlink Functions request\n @param data The CBOR encoded bytes data for a Functions request\n @param subscriptionId The subscription ID that will be charged to service the request\n @param callbackGasLimit the amount of gas that will be available for the fulfillment callback\n @return requestId The generated request ID for this request"},"id":809,"implemented":true,"kind":"function","modifiers":[],"name":"_sendRequest","nameLocation":"1209:12:7","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"data","nameLocation":"1240:4:7","nodeType":"VariableDeclaration","scope":809,"src":"1227:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":778,"name":"bytes","nodeType":"ElementaryTypeName","src":"1227:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"subscriptionId","nameLocation":"1257:14:7","nodeType":"VariableDeclaration","scope":809,"src":"1250:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":780,"name":"uint64","nodeType":"ElementaryTypeName","src":"1250:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1284:16:7","nodeType":"VariableDeclaration","scope":809,"src":"1277:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":782,"name":"uint32","nodeType":"ElementaryTypeName","src":"1277:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"donId","nameLocation":"1314:5:7","nodeType":"VariableDeclaration","scope":809,"src":"1306:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1306:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1221:102:7"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":809,"src":"1342:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1342:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1341:9:7"},"scope":854,"src":"1200:388:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"1592:394:7","text":"@notice User defined function to handle a response from the DON\n @param requestId The request ID, returned by sendRequest()\n @param response Aggregated response from the execution of the user's source code\n @param err Aggregated error from the execution of the user code or from the execution pipeline\n @dev Either response or error parameter will be set, but never both"},"id":819,"implemented":false,"kind":"function","modifiers":[],"name":"_fulfillRequest","nameLocation":"1998:15:7","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"requestId","nameLocation":"2022:9:7","nodeType":"VariableDeclaration","scope":819,"src":"2014:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2014:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"response","nameLocation":"2046:8:7","nodeType":"VariableDeclaration","scope":819,"src":"2033:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":813,"name":"bytes","nodeType":"ElementaryTypeName","src":"2033:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"err","nameLocation":"2069:3:7","nodeType":"VariableDeclaration","scope":819,"src":"2056:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":815,"name":"bytes","nodeType":"ElementaryTypeName","src":"2056:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2013:60:7"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[],"src":"2090:0:7"},"scope":854,"src":"1989:102:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[80],"body":{"id":852,"nodeType":"Block","src":"2241:185:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2251:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2255:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2251:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":834,"name":"i_functionsRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2273:17:7","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$215","typeString":"contract IFunctionsRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IFunctionsRouter_$215","typeString":"contract IFunctionsRouter"}],"id":833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2265:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"2265:7:7","typeDescriptions":{}}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2251:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":841,"nodeType":"IfStatement","src":"2247:90:7","trueBody":{"id":840,"nodeType":"Block","src":"2293:44:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":837,"name":"OnlyRouterCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"2308:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"RevertStatement","src":"2301:29:7"}]}},{"expression":{"arguments":[{"id":843,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"2358:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":844,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2369:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":845,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2379:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":842,"name":"_fulfillRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"2342:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory,bytes memory)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2342:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":847,"nodeType":"ExpressionStatement","src":"2342:41:7"},{"eventCall":{"arguments":[{"id":849,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"2411:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":848,"name":"RequestFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2394:16:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":851,"nodeType":"EmitStatement","src":"2389:32:7"}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"2095:32:7","text":"@inheritdoc IFunctionsClient"},"functionSelector":"0ca76175","id":853,"implemented":true,"kind":"function","modifiers":[],"name":"handleOracleFulfillment","nameLocation":"2139:23:7","nodeType":"FunctionDefinition","overrides":{"id":828,"nodeType":"OverrideSpecifier","overrides":[],"src":"2232:8:7"},"parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"requestId","nameLocation":"2171:9:7","nodeType":"VariableDeclaration","scope":853,"src":"2163:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2163:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"response","nameLocation":"2195:8:7","nodeType":"VariableDeclaration","scope":853,"src":"2182:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":823,"name":"bytes","nodeType":"ElementaryTypeName","src":"2182:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"err","nameLocation":"2218:3:7","nodeType":"VariableDeclaration","scope":853,"src":"2205:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":825,"name":"bytes","nodeType":"ElementaryTypeName","src":"2205:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2162:60:7"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[],"src":"2241:0:7"},"scope":854,"src":"2130:296:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":855,"src":"442:1986:7","usedErrors":[764],"usedEvents":[758,762]}],"src":"32:2397:7"},"id":7},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","exportedSymbols":{"ConfirmedOwner":[875],"ConfirmedOwnerWithProposal":[1038]},"id":876,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":856,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:8"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","file":"./ConfirmedOwnerWithProposal.sol","id":858,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":876,"sourceUnit":1039,"src":"57:76:8","symbolAliases":[{"foreign":{"id":857,"name":"ConfirmedOwnerWithProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"65:26:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":860,"name":"ConfirmedOwnerWithProposal","nameLocations":["267:26:8"],"nodeType":"IdentifierPath","referencedDeclaration":1038,"src":"267:26:8"},"id":861,"nodeType":"InheritanceSpecifier","src":"267:26:8"}],"canonicalName":"ConfirmedOwner","contractDependencies":[],"contractKind":"contract","documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"135:105:8","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":875,"linearizedBaseContracts":[875,1038,1100],"name":"ConfirmedOwner","nameLocation":"249:14:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":873,"nodeType":"Block","src":"377:2:8","statements":[]},"id":874,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":866,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"355:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"373:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"365:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:8","typeDescriptions":{}}},"id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"365:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":871,"kind":"baseConstructorSpecifier","modifierName":{"id":865,"name":"ConfirmedOwnerWithProposal","nameLocations":["328:26:8"],"nodeType":"IdentifierPath","referencedDeclaration":1038,"src":"328:26:8"},"nodeType":"ModifierInvocation","src":"328:48:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"newOwner","nameLocation":"318:8:8","nodeType":"VariableDeclaration","scope":874,"src":"310:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"310:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"309:18:8"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"377:0:8"},"scope":875,"src":"298:81:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":876,"src":"240:141:8","usedErrors":[],"usedEvents":[892,898]}],"src":"32:350:8"},"id":8},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","exportedSymbols":{"ConfirmedOwnerWithProposal":[1038],"IOwnable":[1100]},"id":1039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":877,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","file":"../interfaces/IOwnable.sol","id":879,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1039,"sourceUnit":1101,"src":"57:52:9","symbolAliases":[{"foreign":{"id":878,"name":"IOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"65:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":881,"name":"IOwnable","nameLocations":["255:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1100,"src":"255:8:9"},"id":882,"nodeType":"InheritanceSpecifier","src":"255:8:9"}],"canonicalName":"ConfirmedOwnerWithProposal","contractDependencies":[],"contractKind":"contract","documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"111:105:9","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":1038,"linearizedBaseContracts":[1038,1100],"name":"ConfirmedOwnerWithProposal","nameLocation":"225:26:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":884,"mutability":"mutable","name":"s_owner","nameLocation":"284:7:9","nodeType":"VariableDeclaration","scope":1038,"src":"268:23:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":886,"mutability":"mutable","name":"s_pendingOwner","nameLocation":"311:14:9","nodeType":"VariableDeclaration","scope":1038,"src":"295:30:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"295:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278","id":892,"name":"OwnershipTransferRequested","nameLocation":"336:26:9","nodeType":"EventDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"379:4:9","nodeType":"VariableDeclaration","scope":892,"src":"363:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":890,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"401:2:9","nodeType":"VariableDeclaration","scope":892,"src":"385:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"362:42:9"},"src":"330:75:9"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":898,"name":"OwnershipTransferred","nameLocation":"414:20:9","nodeType":"EventDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"451:4:9","nodeType":"VariableDeclaration","scope":898,"src":"435:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"473:2:9","nodeType":"VariableDeclaration","scope":898,"src":"457:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"434:42:9"},"src":"408:69:9"},{"body":{"id":931,"nodeType":"Block","src":"533:230:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":906,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"598:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"618:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"610:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:9","typeDescriptions":{}}},"id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"610:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"598:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"622:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""},"value":"Cannot set owner to zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""}],"id":905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"590:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"590:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"590:59:9"},{"expression":{"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":915,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"656:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":916,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"666:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"656:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":918,"nodeType":"ExpressionStatement","src":"656:18:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":919,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"684:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"708:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"700:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:9","typeDescriptions":{}}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"700:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"684:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":930,"nodeType":"IfStatement","src":"680:79:9","trueBody":{"id":929,"nodeType":"Block","src":"712:47:9","statements":[{"expression":{"arguments":[{"id":926,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"739:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":925,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"720:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"720:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"720:32:9"}]}}]},"id":932,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"newOwner","nameLocation":"501:8:9","nodeType":"VariableDeclaration","scope":932,"src":"493:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"pendingOwner","nameLocation":"519:12:9","nodeType":"VariableDeclaration","scope":932,"src":"511:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"511:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"492:40:9"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"533:0:9"},"scope":1038,"src":"481:282:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1096],"body":{"id":945,"nodeType":"Block","src":"912:33:9","statements":[{"expression":{"arguments":[{"id":942,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"937:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":941,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"918:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"918:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"918:22:9"}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"767:77:9","text":"@notice Allows an owner to begin transferring ownership to a new address."},"functionSelector":"f2fde38b","id":946,"implemented":true,"kind":"function","modifiers":[{"id":939,"kind":"modifierInvocation","modifierName":{"id":938,"name":"onlyOwner","nameLocations":["902:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1037,"src":"902:9:9"},"nodeType":"ModifierInvocation","src":"902:9:9"}],"name":"transferOwnership","nameLocation":"856:17:9","nodeType":"FunctionDefinition","overrides":{"id":937,"nodeType":"OverrideSpecifier","overrides":[],"src":"893:8:9"},"parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"to","nameLocation":"882:2:9","nodeType":"VariableDeclaration","scope":946,"src":"874:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"873:12:9"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"912:0:9"},"scope":1038,"src":"847:98:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1099],"body":{"id":981,"nodeType":"Block","src":"1071:271:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":952,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1136:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1140:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1136:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":954,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"1150:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1136:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1166:24:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""},"value":"Must be proposed owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""}],"id":951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1128:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1128:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":958,"nodeType":"ExpressionStatement","src":"1128:63:9"},{"assignments":[960],"declarations":[{"constant":false,"id":960,"mutability":"mutable","name":"oldOwner","nameLocation":"1206:8:9","nodeType":"VariableDeclaration","scope":981,"src":"1198:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"1198:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":962,"initialValue":{"id":961,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"1217:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1198:26:9"},{"expression":{"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":963,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"1230:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":964,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1240:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1244:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1240:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1230:20:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":967,"nodeType":"ExpressionStatement","src":"1230:20:9"},{"expression":{"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":968,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"1256:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1281:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1273:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:9","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1273:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1256:27:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":974,"nodeType":"ExpressionStatement","src":"1256:27:9"},{"eventCall":{"arguments":[{"id":976,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1316:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1326:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1330:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1326:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":975,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"1295:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1295:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"EmitStatement","src":"1290:47:9"}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"949:74:9","text":"@notice Allows an ownership transfer to be completed by the recipient."},"functionSelector":"79ba5097","id":982,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1035:15:9","nodeType":"FunctionDefinition","overrides":{"id":949,"nodeType":"OverrideSpecifier","overrides":[],"src":"1062:8:9"},"parameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"1050:2:9"},"returnParameters":{"id":950,"nodeType":"ParameterList","parameters":[],"src":"1071:0:9"},"scope":1038,"src":"1026:316:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1091],"body":{"id":991,"nodeType":"Block","src":"1438:25:9","statements":[{"expression":{"id":989,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"1451:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":988,"id":990,"nodeType":"Return","src":"1444:14:9"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"1346:33:9","text":"@notice Get the current owner"},"functionSelector":"8da5cb5b","id":992,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1391:5:9","nodeType":"FunctionDefinition","overrides":{"id":985,"nodeType":"OverrideSpecifier","overrides":[],"src":"1411:8:9"},"parameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"1396:2:9"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"1429:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"1429:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1428:9:9"},"scope":1038,"src":"1382:81:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1015,"nodeType":"Block","src":"1584:191:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":999,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"1649:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1000,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1655:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1659:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1655:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1649:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1667:25:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""},"value":"Cannot transfer to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""}],"id":998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1641:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1005,"nodeType":"ExpressionStatement","src":"1641:52:9"},{"expression":{"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1006,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"1700:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"1717:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1700:19:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1009,"nodeType":"ExpressionStatement","src":"1700:19:9"},{"eventCall":{"arguments":[{"id":1011,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"1758:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1012,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"1767:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1010,"name":"OwnershipTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"1731:26:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"EmitStatement","src":"1726:44:9"}]},"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"1467:66:9","text":"@notice validate, transfer ownership, and emit relevant events"},"id":1016,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1545:18:9","nodeType":"FunctionDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"to","nameLocation":"1572:2:9","nodeType":"VariableDeclaration","scope":1016,"src":"1564:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1563:12:9"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[],"src":"1584:0:9"},"scope":1038,"src":"1536:239:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1028,"nodeType":"Block","src":"1853:118:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1021,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1918:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1922:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1918:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1023,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"1932:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1918:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1941:24:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""},"value":"Only callable by owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""}],"id":1020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1910:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1910:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1027,"nodeType":"ExpressionStatement","src":"1910:56:9"}]},"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"1779:27:9","text":"@notice validate access"},"id":1029,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOwnership","nameLocation":"1818:18:9","nodeType":"FunctionDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"1836:2:9"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"1853:0:9"},"scope":1038,"src":"1809:162:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1036,"nodeType":"Block","src":"2069:38:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1032,"name":"_validateOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"2075:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2075:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1034,"nodeType":"ExpressionStatement","src":"2075:20:9"},{"id":1035,"nodeType":"PlaceholderStatement","src":"2101:1:9"}]},"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"1975:70:9","text":"@notice Reverts if called by anyone other than the contract owner."},"id":1037,"name":"onlyOwner","nameLocation":"2057:9:9","nodeType":"ModifierDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"2066:2:9"},"src":"2048:59:9","virtual":false,"visibility":"internal"}],"scope":1039,"src":"216:1893:9","usedErrors":[],"usedEvents":[892,898]}],"src":"32:2078:9"},"id":9},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[1084]},"id":1085,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1040,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1084,"linearizedBaseContracts":[1084],"name":"AggregatorV3Interface","nameLocation":"120:21:10","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":1045,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"155:8:10","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"163:2:10"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"189:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1042,"name":"uint8","nodeType":"ElementaryTypeName","src":"189:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"188:7:10"},"scope":1084,"src":"146:50:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":1050,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"209:11:10","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"220:2:10"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1050,"src":"246:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1047,"name":"string","nodeType":"ElementaryTypeName","src":"246:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"245:15:10"},"scope":1084,"src":"200:61:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":1055,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"274:7:10","nodeType":"FunctionDefinition","parameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"281:2:10"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1055,"src":"307:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"306:9:10"},"scope":1084,"src":"265:51:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":1070,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"329:12:10","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"_roundId","nameLocation":"354:8:10","nodeType":"VariableDeclaration","scope":1070,"src":"347:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1056,"name":"uint80","nodeType":"ElementaryTypeName","src":"347:6:10","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"341:25:10"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"roundId","nameLocation":"397:7:10","nodeType":"VariableDeclaration","scope":1070,"src":"390:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1059,"name":"uint80","nodeType":"ElementaryTypeName","src":"390:6:10","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"answer","nameLocation":"413:6:10","nodeType":"VariableDeclaration","scope":1070,"src":"406:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1061,"name":"int256","nodeType":"ElementaryTypeName","src":"406:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"startedAt","nameLocation":"429:9:10","nodeType":"VariableDeclaration","scope":1070,"src":"421:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"updatedAt","nameLocation":"448:9:10","nodeType":"VariableDeclaration","scope":1070,"src":"440:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"440:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"answeredInRound","nameLocation":"466:15:10","nodeType":"VariableDeclaration","scope":1070,"src":"459:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1067,"name":"uint80","nodeType":"ElementaryTypeName","src":"459:6:10","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"389:93:10"},"scope":1084,"src":"320:163:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":1083,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"496:15:10","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"511:2:10"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"roundId","nameLocation":"556:7:10","nodeType":"VariableDeclaration","scope":1083,"src":"549:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1072,"name":"uint80","nodeType":"ElementaryTypeName","src":"549:6:10","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"answer","nameLocation":"572:6:10","nodeType":"VariableDeclaration","scope":1083,"src":"565:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1074,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"startedAt","nameLocation":"588:9:10","nodeType":"VariableDeclaration","scope":1083,"src":"580:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"updatedAt","nameLocation":"607:9:10","nodeType":"VariableDeclaration","scope":1083,"src":"599:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"answeredInRound","nameLocation":"625:15:10","nodeType":"VariableDeclaration","scope":1083,"src":"618:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1080,"name":"uint80","nodeType":"ElementaryTypeName","src":"618:6:10","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"548:93:10"},"scope":1084,"src":"487:155:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1085,"src":"110:534:10","usedErrors":[],"usedEvents":[]}],"src":"32:613:10"},"id":10},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","exportedSymbols":{"IOwnable":[1100]},"id":1101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1086,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IOwnable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1100,"linearizedBaseContracts":[1100],"name":"IOwnable","nameLocation":"67:8:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":1091,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"89:5:11","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"94:2:11"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"115:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"115:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114:9:11"},"scope":1100,"src":"80:44:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f2fde38b","id":1096,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"137:17:11","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"recipient","nameLocation":"163:9:11","nodeType":"VariableDeclaration","scope":1096,"src":"155:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"154:19:11"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[],"src":"182:0:11"},"scope":1100,"src":"128:55:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79ba5097","id":1099,"implemented":false,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"196:15:11","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"211:2:11"},"returnParameters":{"id":1098,"nodeType":"ParameterList","parameters":[],"src":"222:0:11"},"scope":1100,"src":"187:36:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1101,"src":"57:168:11","usedErrors":[],"usedEvents":[]}],"src":"32:194:11"},"id":11},"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol","exportedSymbols":{"Buffer":[1522]},"id":1523,"license":"BSD-2-Clause","nodeType":"SourceUnit","nodes":[{"id":1102,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"41:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Buffer","contractDependencies":[],"contractKind":"library","documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"66:378:12","text":" @dev A library for working with mutable byte buffers in Solidity.\n Byte buffers are mutable and expandable, and provide a variety of primitives\n for appending to them. At any time you can fetch a bytes object containing the\n current contents of the buffer. The bytes object should not be stored between\n operations, as it may change due to resizing of the buffer."},"fullyImplemented":true,"id":1522,"linearizedBaseContracts":[1522],"name":"Buffer","nameLocation":"453:6:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Buffer.buffer","documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"466:249:12","text":" @dev Represents a mutable buffer. Buffers have a current value (buf) and\n      a capacity. The capacity may be longer than the current value, in\n      which case it can be extended without the need to allocate more memory."},"id":1109,"members":[{"constant":false,"id":1106,"mutability":"mutable","name":"buf","nameLocation":"750:3:12","nodeType":"VariableDeclaration","scope":1109,"src":"744:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1105,"name":"bytes","nodeType":"ElementaryTypeName","src":"744:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"capacity","nameLocation":"768:8:12","nodeType":"VariableDeclaration","scope":1109,"src":"763:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint","nodeType":"ElementaryTypeName","src":"763:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"buffer","nameLocation":"727:6:12","nodeType":"StructDefinition","scope":1522,"src":"720:63:12","visibility":"public"},{"body":{"id":1146,"nodeType":"Block","src":"1105:470:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"1119:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1119:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1136:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1119:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1136,"nodeType":"IfStatement","src":"1115:81:12","trueBody":{"id":1135,"nodeType":"Block","src":"1139:57:12","statements":[{"expression":{"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1126,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"1153:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1165:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1128,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"1171:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1171:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1170:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1165:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1153:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1134,"nodeType":"ExpressionStatement","src":"1153:32:12"}]}},{"expression":{"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1137,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"1251:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1255:8:12","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1108,"src":"1251:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1140,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"1266:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1251:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1142,"nodeType":"ExpressionStatement","src":"1251:23:12"},{"AST":{"nativeSrc":"1293:256:12","nodeType":"YulBlock","src":"1293:256:12","statements":[{"nativeSrc":"1307:22:12","nodeType":"YulVariableDeclaration","src":"1307:22:12","value":{"arguments":[{"kind":"number","nativeSrc":"1324:4:12","nodeType":"YulLiteral","src":"1324:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"1318:5:12","nodeType":"YulIdentifier","src":"1318:5:12"},"nativeSrc":"1318:11:12","nodeType":"YulFunctionCall","src":"1318:11:12"},"variables":[{"name":"ptr","nativeSrc":"1311:3:12","nodeType":"YulTypedName","src":"1311:3:12","type":""}]},{"expression":{"arguments":[{"name":"buf","nativeSrc":"1349:3:12","nodeType":"YulIdentifier","src":"1349:3:12"},{"name":"ptr","nativeSrc":"1354:3:12","nodeType":"YulIdentifier","src":"1354:3:12"}],"functionName":{"name":"mstore","nativeSrc":"1342:6:12","nodeType":"YulIdentifier","src":"1342:6:12"},"nativeSrc":"1342:16:12","nodeType":"YulFunctionCall","src":"1342:16:12"},"nativeSrc":"1342:16:12","nodeType":"YulExpressionStatement","src":"1342:16:12"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1378:3:12","nodeType":"YulIdentifier","src":"1378:3:12"},{"kind":"number","nativeSrc":"1383:1:12","nodeType":"YulLiteral","src":"1383:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1371:6:12","nodeType":"YulIdentifier","src":"1371:6:12"},"nativeSrc":"1371:14:12","nodeType":"YulFunctionCall","src":"1371:14:12"},"nativeSrc":"1371:14:12","nodeType":"YulExpressionStatement","src":"1371:14:12"},{"nativeSrc":"1398:38:12","nodeType":"YulVariableDeclaration","src":"1398:38:12","value":{"arguments":[{"kind":"number","nativeSrc":"1413:2:12","nodeType":"YulLiteral","src":"1413:2:12","type":"","value":"32"},{"arguments":[{"name":"ptr","nativeSrc":"1421:3:12","nodeType":"YulIdentifier","src":"1421:3:12"},{"name":"capacity","nativeSrc":"1426:8:12","nodeType":"YulIdentifier","src":"1426:8:12"}],"functionName":{"name":"add","nativeSrc":"1417:3:12","nodeType":"YulIdentifier","src":"1417:3:12"},"nativeSrc":"1417:18:12","nodeType":"YulFunctionCall","src":"1417:18:12"}],"functionName":{"name":"add","nativeSrc":"1409:3:12","nodeType":"YulIdentifier","src":"1409:3:12"},"nativeSrc":"1409:27:12","nodeType":"YulFunctionCall","src":"1409:27:12"},"variables":[{"name":"fpm","nativeSrc":"1402:3:12","nodeType":"YulTypedName","src":"1402:3:12","type":""}]},{"body":{"nativeSrc":"1465:44:12","nodeType":"YulBlock","src":"1465:44:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1490:1:12","nodeType":"YulLiteral","src":"1490:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"1493:1:12","nodeType":"YulLiteral","src":"1493:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1483:6:12","nodeType":"YulIdentifier","src":"1483:6:12"},"nativeSrc":"1483:12:12","nodeType":"YulFunctionCall","src":"1483:12:12"},"nativeSrc":"1483:12:12","nodeType":"YulExpressionStatement","src":"1483:12:12"}]},"condition":{"arguments":[{"name":"fpm","nativeSrc":"1455:3:12","nodeType":"YulIdentifier","src":"1455:3:12"},{"name":"ptr","nativeSrc":"1460:3:12","nodeType":"YulIdentifier","src":"1460:3:12"}],"functionName":{"name":"lt","nativeSrc":"1452:2:12","nodeType":"YulIdentifier","src":"1452:2:12"},"nativeSrc":"1452:12:12","nodeType":"YulFunctionCall","src":"1452:12:12"},"nativeSrc":"1449:60:12","nodeType":"YulIf","src":"1449:60:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1529:4:12","nodeType":"YulLiteral","src":"1529:4:12","type":"","value":"0x40"},{"name":"fpm","nativeSrc":"1535:3:12","nodeType":"YulIdentifier","src":"1535:3:12"}],"functionName":{"name":"mstore","nativeSrc":"1522:6:12","nodeType":"YulIdentifier","src":"1522:6:12"},"nativeSrc":"1522:17:12","nodeType":"YulFunctionCall","src":"1522:17:12"},"nativeSrc":"1522:17:12","nodeType":"YulExpressionStatement","src":"1522:17:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1113,"isOffset":false,"isSlot":false,"src":"1349:3:12","valueSize":1},{"declaration":1115,"isOffset":false,"isSlot":false,"src":"1426:8:12","valueSize":1}],"id":1143,"nodeType":"InlineAssembly","src":"1284:265:12"},{"expression":{"id":1144,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"1565:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1120,"id":1145,"nodeType":"Return","src":"1558:10:12"}]},"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"789:226:12","text":" @dev Initializes a buffer with an initial capacity.\n @param buf The buffer to initialize.\n @param capacity The number of bytes of space to allocate the buffer.\n @return The buffer, for chaining."},"id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"init","nameLocation":"1029:4:12","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"buf","nameLocation":"1048:3:12","nodeType":"VariableDeclaration","scope":1147,"src":"1034:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1112,"nodeType":"UserDefinedTypeName","pathNode":{"id":1111,"name":"buffer","nameLocations":["1034:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"1034:6:12"},"referencedDeclaration":1109,"src":"1034:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"capacity","nameLocation":"1058:8:12","nodeType":"VariableDeclaration","scope":1147,"src":"1053:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint","nodeType":"ElementaryTypeName","src":"1053:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1033:34:12"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"1090:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1118,"nodeType":"UserDefinedTypeName","pathNode":{"id":1117,"name":"buffer","nameLocations":["1090:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"1090:6:12"},"referencedDeclaration":1109,"src":"1090:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"1089:15:12"},"scope":1522,"src":"1020:555:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"1890:108:12","statements":[{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"buf","nameLocation":"1914:3:12","nodeType":"VariableDeclaration","scope":1175,"src":"1900:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1157,"nodeType":"UserDefinedTypeName","pathNode":{"id":1156,"name":"buffer","nameLocations":["1900:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"1900:6:12"},"referencedDeclaration":1109,"src":"1900:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"id":1159,"nodeType":"VariableDeclarationStatement","src":"1900:17:12"},{"expression":{"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1160,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1927:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1931:3:12","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"1927:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1163,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"1937:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1927:11:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1165,"nodeType":"ExpressionStatement","src":"1927:11:12"},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1166,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1948:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1952:8:12","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1108,"src":"1948:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"1963:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1965:6:12","memberName":"length","nodeType":"MemberAccess","src":"1963:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1948:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1172,"nodeType":"ExpressionStatement","src":"1948:23:12"},{"expression":{"id":1173,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1988:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1155,"id":1174,"nodeType":"Return","src":"1981:10:12"}]},"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"1581:232:12","text":" @dev Initializes a new buffer from an existing bytes object.\n      Changes to the buffer may mutate the original value.\n @param b The bytes object to initialize the buffer with.\n @return A new buffer."},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"fromBytes","nameLocation":"1827:9:12","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"b","nameLocation":"1850:1:12","nodeType":"VariableDeclaration","scope":1176,"src":"1837:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1149,"name":"bytes","nodeType":"ElementaryTypeName","src":"1837:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1836:16:12"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1176,"src":"1875:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1153,"nodeType":"UserDefinedTypeName","pathNode":{"id":1152,"name":"buffer","nameLocations":["1875:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"1875:6:12"},"referencedDeclaration":1109,"src":"1875:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"1874:15:12"},"scope":1522,"src":"1818:180:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1199,"nodeType":"Block","src":"2067:104:12","statements":[{"assignments":[1185],"declarations":[{"constant":false,"id":1185,"mutability":"mutable","name":"oldbuf","nameLocation":"2090:6:12","nodeType":"VariableDeclaration","scope":1199,"src":"2077:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1184,"name":"bytes","nodeType":"ElementaryTypeName","src":"2077:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1188,"initialValue":{"expression":{"id":1186,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2099:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2103:3:12","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"2099:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2077:29:12"},{"expression":{"arguments":[{"id":1190,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2121:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1191,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"2126:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"2116:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2116:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1193,"nodeType":"ExpressionStatement","src":"2116:19:12"},{"expression":{"arguments":[{"id":1195,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2152:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1196,"name":"oldbuf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2157:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1194,"name":"append","nodeType":"Identifier","overloadedDeclarations":[1302,1322,1428],"referencedDeclaration":1322,"src":"2145:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1198,"nodeType":"ExpressionStatement","src":"2145:19:12"}]},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"resize","nameLocation":"2013:6:12","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"buf","nameLocation":"2034:3:12","nodeType":"VariableDeclaration","scope":1200,"src":"2020:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1178,"nodeType":"UserDefinedTypeName","pathNode":{"id":1177,"name":"buffer","nameLocations":["2020:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"2020:6:12"},"referencedDeclaration":1109,"src":"2020:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"capacity","nameLocation":"2044:8:12","nodeType":"VariableDeclaration","scope":1200,"src":"2039:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint","nodeType":"ElementaryTypeName","src":"2039:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2019:34:12"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"2067:0:12"},"scope":1522,"src":"2004:167:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1213,"nodeType":"Block","src":"2394:123:12","statements":[{"AST":{"nativeSrc":"2413:78:12","nodeType":"YulBlock","src":"2413:78:12","statements":[{"nativeSrc":"2427:24:12","nodeType":"YulVariableDeclaration","src":"2427:24:12","value":{"arguments":[{"name":"buf","nativeSrc":"2447:3:12","nodeType":"YulIdentifier","src":"2447:3:12"}],"functionName":{"name":"mload","nativeSrc":"2441:5:12","nodeType":"YulIdentifier","src":"2441:5:12"},"nativeSrc":"2441:10:12","nodeType":"YulFunctionCall","src":"2441:10:12"},"variables":[{"name":"bufptr","nativeSrc":"2431:6:12","nodeType":"YulTypedName","src":"2431:6:12","type":""}]},{"expression":{"arguments":[{"name":"bufptr","nativeSrc":"2471:6:12","nodeType":"YulIdentifier","src":"2471:6:12"},{"kind":"number","nativeSrc":"2479:1:12","nodeType":"YulLiteral","src":"2479:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2464:6:12","nodeType":"YulIdentifier","src":"2464:6:12"},"nativeSrc":"2464:17:12","nodeType":"YulFunctionCall","src":"2464:17:12"},"nativeSrc":"2464:17:12","nodeType":"YulExpressionStatement","src":"2464:17:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1204,"isOffset":false,"isSlot":false,"src":"2447:3:12","valueSize":1}],"id":1210,"nodeType":"InlineAssembly","src":"2404:87:12"},{"expression":{"id":1211,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"2507:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1209,"id":1212,"nodeType":"Return","src":"2500:10:12"}]},"documentation":{"id":1201,"nodeType":"StructuredDocumentation","src":"2177:137:12","text":" @dev Sets buffer length to 0.\n @param buf The buffer to truncate.\n @return The original buffer, for chaining.."},"id":1214,"implemented":true,"kind":"function","modifiers":[],"name":"truncate","nameLocation":"2328:8:12","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"buf","nameLocation":"2351:3:12","nodeType":"VariableDeclaration","scope":1214,"src":"2337:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1203,"nodeType":"UserDefinedTypeName","pathNode":{"id":1202,"name":"buffer","nameLocations":["2337:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"2337:6:12"},"referencedDeclaration":1109,"src":"2337:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"2336:19:12"},"returnParameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1214,"src":"2379:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1207,"nodeType":"UserDefinedTypeName","pathNode":{"id":1206,"name":"buffer","nameLocations":["2379:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"2379:6:12"},"referencedDeclaration":1109,"src":"2379:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"2378:15:12"},"scope":1522,"src":"2319:198:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1301,"nodeType":"Block","src":"2945:1326:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1229,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"2963:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1230,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"2970:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2975:6:12","memberName":"length","nodeType":"MemberAccess","src":"2970:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2963:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2955:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2955:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"ExpressionStatement","src":"2955:27:12"},{"assignments":[1236],"declarations":[{"constant":false,"id":1236,"mutability":"mutable","name":"off","nameLocation":"2998:3:12","nodeType":"VariableDeclaration","scope":1301,"src":"2993:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint","nodeType":"ElementaryTypeName","src":"2993:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1240,"initialValue":{"expression":{"expression":{"id":1237,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3004:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3008:3:12","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"3004:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3012:6:12","memberName":"length","nodeType":"MemberAccess","src":"3004:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2993:25:12"},{"assignments":[1242],"declarations":[{"constant":false,"id":1242,"mutability":"mutable","name":"newCapacity","nameLocation":"3033:11:12","nodeType":"VariableDeclaration","scope":1301,"src":"3028:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint","nodeType":"ElementaryTypeName","src":"3028:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1246,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1243,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"3047:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1244,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3053:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3047:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3028:28:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1247,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3070:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1248,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3084:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3088:8:12","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1108,"src":"3084:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3070:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1259,"nodeType":"IfStatement","src":"3066:85:12","trueBody":{"id":1258,"nodeType":"Block","src":"3098:53:12","statements":[{"expression":{"arguments":[{"id":1252,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3119:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1253,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3124:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3138:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3124:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1251,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"3112:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3112:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"3112:28:12"}]}},{"assignments":[1261],"declarations":[{"constant":false,"id":1261,"mutability":"mutable","name":"dest","nameLocation":"3166:4:12","nodeType":"VariableDeclaration","scope":1301,"src":"3161:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint","nodeType":"ElementaryTypeName","src":"3161:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1262,"nodeType":"VariableDeclarationStatement","src":"3161:9:12"},{"assignments":[1264],"declarations":[{"constant":false,"id":1264,"mutability":"mutable","name":"src","nameLocation":"3185:3:12","nodeType":"VariableDeclaration","scope":1301,"src":"3180:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint","nodeType":"ElementaryTypeName","src":"3180:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1265,"nodeType":"VariableDeclarationStatement","src":"3180:8:12"},{"AST":{"nativeSrc":"3207:498:12","nodeType":"YulBlock","src":"3207:498:12","statements":[{"nativeSrc":"3270:24:12","nodeType":"YulVariableDeclaration","src":"3270:24:12","value":{"arguments":[{"name":"buf","nativeSrc":"3290:3:12","nodeType":"YulIdentifier","src":"3290:3:12"}],"functionName":{"name":"mload","nativeSrc":"3284:5:12","nodeType":"YulIdentifier","src":"3284:5:12"},"nativeSrc":"3284:10:12","nodeType":"YulFunctionCall","src":"3284:10:12"},"variables":[{"name":"bufptr","nativeSrc":"3274:6:12","nodeType":"YulTypedName","src":"3274:6:12","type":""}]},{"nativeSrc":"3353:27:12","nodeType":"YulVariableDeclaration","src":"3353:27:12","value":{"arguments":[{"name":"bufptr","nativeSrc":"3373:6:12","nodeType":"YulIdentifier","src":"3373:6:12"}],"functionName":{"name":"mload","nativeSrc":"3367:5:12","nodeType":"YulIdentifier","src":"3367:5:12"},"nativeSrc":"3367:13:12","nodeType":"YulFunctionCall","src":"3367:13:12"},"variables":[{"name":"buflen","nativeSrc":"3357:6:12","nodeType":"YulTypedName","src":"3357:6:12","type":""}]},{"nativeSrc":"3472:33:12","nodeType":"YulAssignment","src":"3472:33:12","value":{"arguments":[{"arguments":[{"name":"bufptr","nativeSrc":"3488:6:12","nodeType":"YulIdentifier","src":"3488:6:12"},{"kind":"number","nativeSrc":"3496:2:12","nodeType":"YulLiteral","src":"3496:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3484:3:12","nodeType":"YulIdentifier","src":"3484:3:12"},"nativeSrc":"3484:15:12","nodeType":"YulFunctionCall","src":"3484:15:12"},{"name":"off","nativeSrc":"3501:3:12","nodeType":"YulIdentifier","src":"3501:3:12"}],"functionName":{"name":"add","nativeSrc":"3480:3:12","nodeType":"YulIdentifier","src":"3480:3:12"},"nativeSrc":"3480:25:12","nodeType":"YulFunctionCall","src":"3480:25:12"},"variableNames":[{"name":"dest","nativeSrc":"3472:4:12","nodeType":"YulIdentifier","src":"3472:4:12"}]},{"body":{"nativeSrc":"3603:59:12","nodeType":"YulBlock","src":"3603:59:12","statements":[{"expression":{"arguments":[{"name":"bufptr","nativeSrc":"3628:6:12","nodeType":"YulIdentifier","src":"3628:6:12"},{"name":"newCapacity","nativeSrc":"3636:11:12","nodeType":"YulIdentifier","src":"3636:11:12"}],"functionName":{"name":"mstore","nativeSrc":"3621:6:12","nodeType":"YulIdentifier","src":"3621:6:12"},"nativeSrc":"3621:27:12","nodeType":"YulFunctionCall","src":"3621:27:12"},"nativeSrc":"3621:27:12","nodeType":"YulExpressionStatement","src":"3621:27:12"}]},"condition":{"arguments":[{"name":"newCapacity","nativeSrc":"3582:11:12","nodeType":"YulIdentifier","src":"3582:11:12"},{"name":"buflen","nativeSrc":"3595:6:12","nodeType":"YulIdentifier","src":"3595:6:12"}],"functionName":{"name":"gt","nativeSrc":"3579:2:12","nodeType":"YulIdentifier","src":"3579:2:12"},"nativeSrc":"3579:23:12","nodeType":"YulFunctionCall","src":"3579:23:12"},"nativeSrc":"3576:86:12","nodeType":"YulIf","src":"3576:86:12"},{"nativeSrc":"3675:20:12","nodeType":"YulAssignment","src":"3675:20:12","value":{"arguments":[{"name":"data","nativeSrc":"3686:4:12","nodeType":"YulIdentifier","src":"3686:4:12"},{"kind":"number","nativeSrc":"3692:2:12","nodeType":"YulLiteral","src":"3692:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3682:3:12","nodeType":"YulIdentifier","src":"3682:3:12"},"nativeSrc":"3682:13:12","nodeType":"YulFunctionCall","src":"3682:13:12"},"variableNames":[{"name":"src","nativeSrc":"3675:3:12","nodeType":"YulIdentifier","src":"3675:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1218,"isOffset":false,"isSlot":false,"src":"3290:3:12","valueSize":1},{"declaration":1220,"isOffset":false,"isSlot":false,"src":"3686:4:12","valueSize":1},{"declaration":1261,"isOffset":false,"isSlot":false,"src":"3472:4:12","valueSize":1},{"declaration":1242,"isOffset":false,"isSlot":false,"src":"3582:11:12","valueSize":1},{"declaration":1242,"isOffset":false,"isSlot":false,"src":"3636:11:12","valueSize":1},{"declaration":1236,"isOffset":false,"isSlot":false,"src":"3501:3:12","valueSize":1},{"declaration":1264,"isOffset":false,"isSlot":false,"src":"3675:3:12","valueSize":1}],"id":1266,"nodeType":"InlineAssembly","src":"3198:507:12"},{"body":{"id":1283,"nodeType":"Block","src":"3794:136:12","statements":[{"AST":{"nativeSrc":"3817:56:12","nodeType":"YulBlock","src":"3817:56:12","statements":[{"expression":{"arguments":[{"name":"dest","nativeSrc":"3842:4:12","nodeType":"YulIdentifier","src":"3842:4:12"},{"arguments":[{"name":"src","nativeSrc":"3854:3:12","nodeType":"YulIdentifier","src":"3854:3:12"}],"functionName":{"name":"mload","nativeSrc":"3848:5:12","nodeType":"YulIdentifier","src":"3848:5:12"},"nativeSrc":"3848:10:12","nodeType":"YulFunctionCall","src":"3848:10:12"}],"functionName":{"name":"mstore","nativeSrc":"3835:6:12","nodeType":"YulIdentifier","src":"3835:6:12"},"nativeSrc":"3835:24:12","nodeType":"YulFunctionCall","src":"3835:24:12"},"nativeSrc":"3835:24:12","nodeType":"YulExpressionStatement","src":"3835:24:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1261,"isOffset":false,"isSlot":false,"src":"3842:4:12","valueSize":1},{"declaration":1264,"isOffset":false,"isSlot":false,"src":"3854:3:12","valueSize":1}],"id":1274,"nodeType":"InlineAssembly","src":"3808:65:12"},{"expression":{"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1275,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"3886:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3894:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3886:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1278,"nodeType":"ExpressionStatement","src":"3886:10:12"},{"expression":{"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1279,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3910:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3917:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3910:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1282,"nodeType":"ExpressionStatement","src":"3910:9:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1267,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3772:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3779:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3772:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1284,"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1270,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3783:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3790:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3783:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1273,"nodeType":"ExpressionStatement","src":"3783:9:12"},"nodeType":"ForStatement","src":"3765:165:12"},{"id":1298,"nodeType":"UncheckedBlock","src":"3972:272:12","statements":[{"assignments":[1286],"declarations":[{"constant":false,"id":1286,"mutability":"mutable","name":"mask","nameLocation":"4001:4:12","nodeType":"VariableDeclaration","scope":1298,"src":"3996:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint","nodeType":"ElementaryTypeName","src":"3996:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1296,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4009:3:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4017:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1289,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"4022:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4017:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4016:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4009:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4008:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4030:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4008:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3996:35:12"},{"AST":{"nativeSrc":"4054:180:12","nodeType":"YulBlock","src":"4054:180:12","statements":[{"nativeSrc":"4072:41:12","nodeType":"YulVariableDeclaration","src":"4072:41:12","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4097:3:12","nodeType":"YulIdentifier","src":"4097:3:12"}],"functionName":{"name":"mload","nativeSrc":"4091:5:12","nodeType":"YulIdentifier","src":"4091:5:12"},"nativeSrc":"4091:10:12","nodeType":"YulFunctionCall","src":"4091:10:12"},{"arguments":[{"name":"mask","nativeSrc":"4107:4:12","nodeType":"YulIdentifier","src":"4107:4:12"}],"functionName":{"name":"not","nativeSrc":"4103:3:12","nodeType":"YulIdentifier","src":"4103:3:12"},"nativeSrc":"4103:9:12","nodeType":"YulFunctionCall","src":"4103:9:12"}],"functionName":{"name":"and","nativeSrc":"4087:3:12","nodeType":"YulIdentifier","src":"4087:3:12"},"nativeSrc":"4087:26:12","nodeType":"YulFunctionCall","src":"4087:26:12"},"variables":[{"name":"srcpart","nativeSrc":"4076:7:12","nodeType":"YulTypedName","src":"4076:7:12","type":""}]},{"nativeSrc":"4130:38:12","nodeType":"YulVariableDeclaration","src":"4130:38:12","value":{"arguments":[{"arguments":[{"name":"dest","nativeSrc":"4156:4:12","nodeType":"YulIdentifier","src":"4156:4:12"}],"functionName":{"name":"mload","nativeSrc":"4150:5:12","nodeType":"YulIdentifier","src":"4150:5:12"},"nativeSrc":"4150:11:12","nodeType":"YulFunctionCall","src":"4150:11:12"},{"name":"mask","nativeSrc":"4163:4:12","nodeType":"YulIdentifier","src":"4163:4:12"}],"functionName":{"name":"and","nativeSrc":"4146:3:12","nodeType":"YulIdentifier","src":"4146:3:12"},"nativeSrc":"4146:22:12","nodeType":"YulFunctionCall","src":"4146:22:12"},"variables":[{"name":"destpart","nativeSrc":"4134:8:12","nodeType":"YulTypedName","src":"4134:8:12","type":""}]},{"expression":{"arguments":[{"name":"dest","nativeSrc":"4192:4:12","nodeType":"YulIdentifier","src":"4192:4:12"},{"arguments":[{"name":"destpart","nativeSrc":"4201:8:12","nodeType":"YulIdentifier","src":"4201:8:12"},{"name":"srcpart","nativeSrc":"4211:7:12","nodeType":"YulIdentifier","src":"4211:7:12"}],"functionName":{"name":"or","nativeSrc":"4198:2:12","nodeType":"YulIdentifier","src":"4198:2:12"},"nativeSrc":"4198:21:12","nodeType":"YulFunctionCall","src":"4198:21:12"}],"functionName":{"name":"mstore","nativeSrc":"4185:6:12","nodeType":"YulIdentifier","src":"4185:6:12"},"nativeSrc":"4185:35:12","nodeType":"YulFunctionCall","src":"4185:35:12"},"nativeSrc":"4185:35:12","nodeType":"YulExpressionStatement","src":"4185:35:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1261,"isOffset":false,"isSlot":false,"src":"4156:4:12","valueSize":1},{"declaration":1261,"isOffset":false,"isSlot":false,"src":"4192:4:12","valueSize":1},{"declaration":1286,"isOffset":false,"isSlot":false,"src":"4107:4:12","valueSize":1},{"declaration":1286,"isOffset":false,"isSlot":false,"src":"4163:4:12","valueSize":1},{"declaration":1264,"isOffset":false,"isSlot":false,"src":"4097:3:12","valueSize":1}],"id":1297,"nodeType":"InlineAssembly","src":"4045:189:12"}]},{"expression":{"id":1299,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"4261:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1227,"id":1300,"nodeType":"Return","src":"4254:10:12"}]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"2523:316:12","text":" @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."},"id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"2853:6:12","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"buf","nameLocation":"2874:3:12","nodeType":"VariableDeclaration","scope":1302,"src":"2860:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1217,"nodeType":"UserDefinedTypeName","pathNode":{"id":1216,"name":"buffer","nameLocations":["2860:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"2860:6:12"},"referencedDeclaration":1109,"src":"2860:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"data","nameLocation":"2892:4:12","nodeType":"VariableDeclaration","scope":1302,"src":"2879:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1219,"name":"bytes","nodeType":"ElementaryTypeName","src":"2879:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"len","nameLocation":"2903:3:12","nodeType":"VariableDeclaration","scope":1302,"src":"2898:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint","nodeType":"ElementaryTypeName","src":"2898:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2859:48:12"},"returnParameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"2930:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1225,"nodeType":"UserDefinedTypeName","pathNode":{"id":1224,"name":"buffer","nameLocations":["2930:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"2930:6:12"},"referencedDeclaration":1109,"src":"2930:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"2929:15:12"},"scope":1522,"src":"2844:1427:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1321,"nodeType":"Block","src":"4631:54:12","statements":[{"expression":{"arguments":[{"id":1315,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"4655:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1316,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"4660:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":1317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"4666:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4671:6:12","memberName":"length","nodeType":"MemberAccess","src":"4666:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1314,"name":"append","nodeType":"Identifier","overloadedDeclarations":[1302,1322,1428],"referencedDeclaration":1302,"src":"4648:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1313,"id":1320,"nodeType":"Return","src":"4641:37:12"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"4277:257:12","text":" @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"4548:6:12","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"buf","nameLocation":"4569:3:12","nodeType":"VariableDeclaration","scope":1322,"src":"4555:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1305,"nodeType":"UserDefinedTypeName","pathNode":{"id":1304,"name":"buffer","nameLocations":["4555:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"4555:6:12"},"referencedDeclaration":1109,"src":"4555:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"data","nameLocation":"4587:4:12","nodeType":"VariableDeclaration","scope":1322,"src":"4574:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1307,"name":"bytes","nodeType":"ElementaryTypeName","src":"4574:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4554:38:12"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1322,"src":"4616:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1311,"nodeType":"UserDefinedTypeName","pathNode":{"id":1310,"name":"buffer","nameLocations":["4616:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"4616:6:12"},"referencedDeclaration":1109,"src":"4616:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"4615:15:12"},"scope":1522,"src":"4539:146:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1362,"nodeType":"Block","src":"5037:610:12","statements":[{"assignments":[1335],"declarations":[{"constant":false,"id":1335,"mutability":"mutable","name":"off","nameLocation":"5052:3:12","nodeType":"VariableDeclaration","scope":1362,"src":"5047:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint","nodeType":"ElementaryTypeName","src":"5047:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1339,"initialValue":{"expression":{"expression":{"id":1336,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"5058:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5062:3:12","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"5058:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5066:6:12","memberName":"length","nodeType":"MemberAccess","src":"5058:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5047:25:12"},{"assignments":[1341],"declarations":[{"constant":false,"id":1341,"mutability":"mutable","name":"offPlusOne","nameLocation":"5087:10:12","nodeType":"VariableDeclaration","scope":1362,"src":"5082:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint","nodeType":"ElementaryTypeName","src":"5082:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1345,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"5100:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5106:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5100:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5082:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"5121:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1347,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"5128:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5132:8:12","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1108,"src":"5128:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5121:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"5117:77:12","trueBody":{"id":1357,"nodeType":"Block","src":"5142:52:12","statements":[{"expression":{"arguments":[{"id":1351,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"5163:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"offPlusOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5168:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5181:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5168:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1350,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5156:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5156:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"ExpressionStatement","src":"5156:27:12"}]}},{"AST":{"nativeSrc":"5213:407:12","nodeType":"YulBlock","src":"5213:407:12","statements":[{"nativeSrc":"5276:24:12","nodeType":"YulVariableDeclaration","src":"5276:24:12","value":{"arguments":[{"name":"buf","nativeSrc":"5296:3:12","nodeType":"YulIdentifier","src":"5296:3:12"}],"functionName":{"name":"mload","nativeSrc":"5290:5:12","nodeType":"YulIdentifier","src":"5290:5:12"},"nativeSrc":"5290:10:12","nodeType":"YulFunctionCall","src":"5290:10:12"},"variables":[{"name":"bufptr","nativeSrc":"5280:6:12","nodeType":"YulTypedName","src":"5280:6:12","type":""}]},{"nativeSrc":"5383:37:12","nodeType":"YulVariableDeclaration","src":"5383:37:12","value":{"arguments":[{"arguments":[{"name":"bufptr","nativeSrc":"5403:6:12","nodeType":"YulIdentifier","src":"5403:6:12"},{"name":"off","nativeSrc":"5411:3:12","nodeType":"YulIdentifier","src":"5411:3:12"}],"functionName":{"name":"add","nativeSrc":"5399:3:12","nodeType":"YulIdentifier","src":"5399:3:12"},"nativeSrc":"5399:16:12","nodeType":"YulFunctionCall","src":"5399:16:12"},{"kind":"number","nativeSrc":"5417:2:12","nodeType":"YulLiteral","src":"5417:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5395:3:12","nodeType":"YulIdentifier","src":"5395:3:12"},"nativeSrc":"5395:25:12","nodeType":"YulFunctionCall","src":"5395:25:12"},"variables":[{"name":"dest","nativeSrc":"5387:4:12","nodeType":"YulTypedName","src":"5387:4:12","type":""}]},{"expression":{"arguments":[{"name":"dest","nativeSrc":"5441:4:12","nodeType":"YulIdentifier","src":"5441:4:12"},{"name":"data","nativeSrc":"5447:4:12","nodeType":"YulIdentifier","src":"5447:4:12"}],"functionName":{"name":"mstore8","nativeSrc":"5433:7:12","nodeType":"YulIdentifier","src":"5433:7:12"},"nativeSrc":"5433:19:12","nodeType":"YulFunctionCall","src":"5433:19:12"},"nativeSrc":"5433:19:12","nodeType":"YulExpressionStatement","src":"5433:19:12"},{"body":{"nativeSrc":"5552:58:12","nodeType":"YulBlock","src":"5552:58:12","statements":[{"expression":{"arguments":[{"name":"bufptr","nativeSrc":"5577:6:12","nodeType":"YulIdentifier","src":"5577:6:12"},{"name":"offPlusOne","nativeSrc":"5585:10:12","nodeType":"YulIdentifier","src":"5585:10:12"}],"functionName":{"name":"mstore","nativeSrc":"5570:6:12","nodeType":"YulIdentifier","src":"5570:6:12"},"nativeSrc":"5570:26:12","nodeType":"YulFunctionCall","src":"5570:26:12"},"nativeSrc":"5570:26:12","nodeType":"YulExpressionStatement","src":"5570:26:12"}]},"condition":{"arguments":[{"name":"offPlusOne","nativeSrc":"5525:10:12","nodeType":"YulIdentifier","src":"5525:10:12"},{"arguments":[{"name":"bufptr","nativeSrc":"5543:6:12","nodeType":"YulIdentifier","src":"5543:6:12"}],"functionName":{"name":"mload","nativeSrc":"5537:5:12","nodeType":"YulIdentifier","src":"5537:5:12"},"nativeSrc":"5537:13:12","nodeType":"YulFunctionCall","src":"5537:13:12"}],"functionName":{"name":"gt","nativeSrc":"5522:2:12","nodeType":"YulIdentifier","src":"5522:2:12"},"nativeSrc":"5522:29:12","nodeType":"YulFunctionCall","src":"5522:29:12"},"nativeSrc":"5519:91:12","nodeType":"YulIf","src":"5519:91:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1326,"isOffset":false,"isSlot":false,"src":"5296:3:12","valueSize":1},{"declaration":1328,"isOffset":false,"isSlot":false,"src":"5447:4:12","valueSize":1},{"declaration":1335,"isOffset":false,"isSlot":false,"src":"5411:3:12","valueSize":1},{"declaration":1341,"isOffset":false,"isSlot":false,"src":"5525:10:12","valueSize":1},{"declaration":1341,"isOffset":false,"isSlot":false,"src":"5585:10:12","valueSize":1}],"id":1359,"nodeType":"InlineAssembly","src":"5204:416:12"},{"expression":{"id":1360,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"5637:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1333,"id":1361,"nodeType":"Return","src":"5630:10:12"}]},"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"4691:252:12","text":" @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1363,"implemented":true,"kind":"function","modifiers":[],"name":"appendUint8","nameLocation":"4957:11:12","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"buf","nameLocation":"4983:3:12","nodeType":"VariableDeclaration","scope":1363,"src":"4969:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1325,"nodeType":"UserDefinedTypeName","pathNode":{"id":1324,"name":"buffer","nameLocations":["4969:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"4969:6:12"},"referencedDeclaration":1109,"src":"4969:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"data","nameLocation":"4994:4:12","nodeType":"VariableDeclaration","scope":1363,"src":"4988:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1327,"name":"uint8","nodeType":"ElementaryTypeName","src":"4988:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4968:31:12"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1363,"src":"5022:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1331,"nodeType":"UserDefinedTypeName","pathNode":{"id":1330,"name":"buffer","nameLocations":["5022:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"5022:6:12"},"referencedDeclaration":1109,"src":"5022:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"5021:15:12"},"scope":1522,"src":"4948:699:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1427,"nodeType":"Block","src":"6079:854:12","statements":[{"assignments":[1378],"declarations":[{"constant":false,"id":1378,"mutability":"mutable","name":"off","nameLocation":"6094:3:12","nodeType":"VariableDeclaration","scope":1427,"src":"6089:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint","nodeType":"ElementaryTypeName","src":"6089:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1382,"initialValue":{"expression":{"expression":{"id":1379,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"6100:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6104:3:12","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"6100:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6108:6:12","memberName":"length","nodeType":"MemberAccess","src":"6100:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6089:25:12"},{"assignments":[1384],"declarations":[{"constant":false,"id":1384,"mutability":"mutable","name":"newCapacity","nameLocation":"6129:11:12","nodeType":"VariableDeclaration","scope":1427,"src":"6124:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint","nodeType":"ElementaryTypeName","src":"6124:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1388,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1385,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"6143:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1386,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"6149:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6143:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6124:28:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1389,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6166:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1390,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"6180:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6184:8:12","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1108,"src":"6180:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6166:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"6162:85:12","trueBody":{"id":1400,"nodeType":"Block","src":"6194:53:12","statements":[{"expression":{"arguments":[{"id":1394,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"6215:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1395,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6220:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6234:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6220:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1393,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"6208:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6208:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"ExpressionStatement","src":"6208:28:12"}]}},{"id":1424,"nodeType":"UncheckedBlock","src":"6257:650:12","statements":[{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"mask","nameLocation":"6286:4:12","nodeType":"VariableDeclaration","scope":1424,"src":"6281:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint","nodeType":"ElementaryTypeName","src":"6281:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1410,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6294:3:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1405,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"6301:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6294:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6293:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6308:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6293:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6281:28:12"},{"expression":{"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1411,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"6355:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"6362:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6371:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1415,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"6381:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6376:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6375:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6371:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6370:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6362:24:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6355:31:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1422,"nodeType":"ExpressionStatement","src":"6355:31:12"},{"AST":{"nativeSrc":"6409:488:12","nodeType":"YulBlock","src":"6409:488:12","statements":[{"nativeSrc":"6480:24:12","nodeType":"YulVariableDeclaration","src":"6480:24:12","value":{"arguments":[{"name":"buf","nativeSrc":"6500:3:12","nodeType":"YulIdentifier","src":"6500:3:12"}],"functionName":{"name":"mload","nativeSrc":"6494:5:12","nodeType":"YulIdentifier","src":"6494:5:12"},"nativeSrc":"6494:10:12","nodeType":"YulFunctionCall","src":"6494:10:12"},"variables":[{"name":"bufptr","nativeSrc":"6484:6:12","nodeType":"YulTypedName","src":"6484:6:12","type":""}]},{"nativeSrc":"6603:36:12","nodeType":"YulVariableDeclaration","src":"6603:36:12","value":{"arguments":[{"name":"bufptr","nativeSrc":"6619:6:12","nodeType":"YulIdentifier","src":"6619:6:12"},{"name":"newCapacity","nativeSrc":"6627:11:12","nodeType":"YulIdentifier","src":"6627:11:12"}],"functionName":{"name":"add","nativeSrc":"6615:3:12","nodeType":"YulIdentifier","src":"6615:3:12"},"nativeSrc":"6615:24:12","nodeType":"YulFunctionCall","src":"6615:24:12"},"variables":[{"name":"dest","nativeSrc":"6607:4:12","nodeType":"YulTypedName","src":"6607:4:12","type":""}]},{"expression":{"arguments":[{"name":"dest","nativeSrc":"6663:4:12","nodeType":"YulIdentifier","src":"6663:4:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"dest","nativeSrc":"6682:4:12","nodeType":"YulIdentifier","src":"6682:4:12"}],"functionName":{"name":"mload","nativeSrc":"6676:5:12","nodeType":"YulIdentifier","src":"6676:5:12"},"nativeSrc":"6676:11:12","nodeType":"YulFunctionCall","src":"6676:11:12"},{"arguments":[{"name":"mask","nativeSrc":"6693:4:12","nodeType":"YulIdentifier","src":"6693:4:12"}],"functionName":{"name":"not","nativeSrc":"6689:3:12","nodeType":"YulIdentifier","src":"6689:3:12"},"nativeSrc":"6689:9:12","nodeType":"YulFunctionCall","src":"6689:9:12"}],"functionName":{"name":"and","nativeSrc":"6672:3:12","nodeType":"YulIdentifier","src":"6672:3:12"},"nativeSrc":"6672:27:12","nodeType":"YulFunctionCall","src":"6672:27:12"},{"name":"data","nativeSrc":"6701:4:12","nodeType":"YulIdentifier","src":"6701:4:12"}],"functionName":{"name":"or","nativeSrc":"6669:2:12","nodeType":"YulIdentifier","src":"6669:2:12"},"nativeSrc":"6669:37:12","nodeType":"YulFunctionCall","src":"6669:37:12"}],"functionName":{"name":"mstore","nativeSrc":"6656:6:12","nodeType":"YulIdentifier","src":"6656:6:12"},"nativeSrc":"6656:51:12","nodeType":"YulFunctionCall","src":"6656:51:12"},"nativeSrc":"6656:51:12","nodeType":"YulExpressionStatement","src":"6656:51:12"},{"body":{"nativeSrc":"6816:67:12","nodeType":"YulBlock","src":"6816:67:12","statements":[{"expression":{"arguments":[{"name":"bufptr","nativeSrc":"6845:6:12","nodeType":"YulIdentifier","src":"6845:6:12"},{"name":"newCapacity","nativeSrc":"6853:11:12","nodeType":"YulIdentifier","src":"6853:11:12"}],"functionName":{"name":"mstore","nativeSrc":"6838:6:12","nodeType":"YulIdentifier","src":"6838:6:12"},"nativeSrc":"6838:27:12","nodeType":"YulFunctionCall","src":"6838:27:12"},"nativeSrc":"6838:27:12","nodeType":"YulExpressionStatement","src":"6838:27:12"}]},"condition":{"arguments":[{"name":"newCapacity","nativeSrc":"6788:11:12","nodeType":"YulIdentifier","src":"6788:11:12"},{"arguments":[{"name":"bufptr","nativeSrc":"6807:6:12","nodeType":"YulIdentifier","src":"6807:6:12"}],"functionName":{"name":"mload","nativeSrc":"6801:5:12","nodeType":"YulIdentifier","src":"6801:5:12"},"nativeSrc":"6801:13:12","nodeType":"YulFunctionCall","src":"6801:13:12"}],"functionName":{"name":"gt","nativeSrc":"6785:2:12","nodeType":"YulIdentifier","src":"6785:2:12"},"nativeSrc":"6785:30:12","nodeType":"YulFunctionCall","src":"6785:30:12"},"nativeSrc":"6782:101:12","nodeType":"YulIf","src":"6782:101:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1367,"isOffset":false,"isSlot":false,"src":"6500:3:12","valueSize":1},{"declaration":1369,"isOffset":false,"isSlot":false,"src":"6701:4:12","valueSize":1},{"declaration":1403,"isOffset":false,"isSlot":false,"src":"6693:4:12","valueSize":1},{"declaration":1384,"isOffset":false,"isSlot":false,"src":"6627:11:12","valueSize":1},{"declaration":1384,"isOffset":false,"isSlot":false,"src":"6788:11:12","valueSize":1},{"declaration":1384,"isOffset":false,"isSlot":false,"src":"6853:11:12","valueSize":1}],"id":1423,"nodeType":"InlineAssembly","src":"6400:497:12"}]},{"expression":{"id":1425,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"6923:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1376,"id":1426,"nodeType":"Return","src":"6916:10:12"}]},"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"5653:326:12","text":" @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to write (left-aligned).\n @return The original buffer, for chaining."},"id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"5993:6:12","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"buf","nameLocation":"6014:3:12","nodeType":"VariableDeclaration","scope":1428,"src":"6000:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1366,"nodeType":"UserDefinedTypeName","pathNode":{"id":1365,"name":"buffer","nameLocations":["6000:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"6000:6:12"},"referencedDeclaration":1109,"src":"6000:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"data","nameLocation":"6027:4:12","nodeType":"VariableDeclaration","scope":1428,"src":"6019:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6019:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"len","nameLocation":"6038:3:12","nodeType":"VariableDeclaration","scope":1428,"src":"6033:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint","nodeType":"ElementaryTypeName","src":"6033:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5999:43:12"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1428,"src":"6064:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1374,"nodeType":"UserDefinedTypeName","pathNode":{"id":1373,"name":"buffer","nameLocations":["6064:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"6064:6:12"},"referencedDeclaration":1109,"src":"6064:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"6063:15:12"},"scope":1522,"src":"5984:949:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1449,"nodeType":"Block","src":"7294:54:12","statements":[{"expression":{"arguments":[{"id":1441,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"7318:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"arguments":[{"id":1444,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"7331:4:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7323:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7323:7:12","typeDescriptions":{}}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7323:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3230","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"id":1440,"name":"append","nodeType":"Identifier","overloadedDeclarations":[1302,1322,1428],"referencedDeclaration":1428,"src":"7311:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes32,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1439,"id":1448,"nodeType":"Return","src":"7304:37:12"}]},"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"6939:256:12","text":" @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chhaining."},"id":1450,"implemented":true,"kind":"function","modifiers":[],"name":"appendBytes20","nameLocation":"7209:13:12","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"buf","nameLocation":"7237:3:12","nodeType":"VariableDeclaration","scope":1450,"src":"7223:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1431,"nodeType":"UserDefinedTypeName","pathNode":{"id":1430,"name":"buffer","nameLocations":["7223:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"7223:6:12"},"referencedDeclaration":1109,"src":"7223:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"data","nameLocation":"7250:4:12","nodeType":"VariableDeclaration","scope":1450,"src":"7242:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1433,"name":"bytes20","nodeType":"ElementaryTypeName","src":"7242:7:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"7222:33:12"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1450,"src":"7279:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1437,"nodeType":"UserDefinedTypeName","pathNode":{"id":1436,"name":"buffer","nameLocations":["7279:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"7279:6:12"},"referencedDeclaration":1109,"src":"7279:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"7278:15:12"},"scope":1522,"src":"7200:148:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1468,"nodeType":"Block","src":"7708:45:12","statements":[{"expression":{"arguments":[{"id":1463,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"7732:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1464,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"7737:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3332","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7743:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1462,"name":"append","nodeType":"Identifier","overloadedDeclarations":[1302,1322,1428],"referencedDeclaration":1428,"src":"7725:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes32,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7725:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1461,"id":1467,"nodeType":"Return","src":"7718:28:12"}]},"documentation":{"id":1451,"nodeType":"StructuredDocumentation","src":"7354:255:12","text":" @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1469,"implemented":true,"kind":"function","modifiers":[],"name":"appendBytes32","nameLocation":"7623:13:12","nodeType":"FunctionDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"buf","nameLocation":"7651:3:12","nodeType":"VariableDeclaration","scope":1469,"src":"7637:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1453,"nodeType":"UserDefinedTypeName","pathNode":{"id":1452,"name":"buffer","nameLocations":["7637:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"7637:6:12"},"referencedDeclaration":1109,"src":"7637:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"data","nameLocation":"7664:4:12","nodeType":"VariableDeclaration","scope":1469,"src":"7656:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7656:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7636:33:12"},"returnParameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1469,"src":"7693:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1459,"nodeType":"UserDefinedTypeName","pathNode":{"id":1458,"name":"buffer","nameLocations":["7693:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"7693:6:12"},"referencedDeclaration":1109,"src":"7693:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"7692:15:12"},"scope":1522,"src":"7614:139:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1520,"nodeType":"Block","src":"8179:699:12","statements":[{"assignments":[1484],"declarations":[{"constant":false,"id":1484,"mutability":"mutable","name":"off","nameLocation":"8194:3:12","nodeType":"VariableDeclaration","scope":1520,"src":"8189:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1483,"name":"uint","nodeType":"ElementaryTypeName","src":"8189:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1488,"initialValue":{"expression":{"expression":{"id":1485,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"8200:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8204:3:12","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"8200:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8208:6:12","memberName":"length","nodeType":"MemberAccess","src":"8200:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8189:25:12"},{"assignments":[1490],"declarations":[{"constant":false,"id":1490,"mutability":"mutable","name":"newCapacity","nameLocation":"8229:11:12","nodeType":"VariableDeclaration","scope":1520,"src":"8224:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint","nodeType":"ElementaryTypeName","src":"8224:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1494,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1491,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"8243:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1492,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"8249:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8243:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8224:28:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1495,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"8266:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1496,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"8280:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8284:8:12","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":1108,"src":"8280:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8266:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1507,"nodeType":"IfStatement","src":"8262:85:12","trueBody":{"id":1506,"nodeType":"Block","src":"8294:53:12","statements":[{"expression":{"arguments":[{"id":1500,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"8315:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1501,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"8320:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8334:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8320:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1499,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8308:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8308:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1505,"nodeType":"ExpressionStatement","src":"8308:28:12"}]}},{"assignments":[1509],"declarations":[{"constant":false,"id":1509,"mutability":"mutable","name":"mask","nameLocation":"8362:4:12","nodeType":"VariableDeclaration","scope":1520,"src":"8357:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint","nodeType":"ElementaryTypeName","src":"8357:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1516,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8370:3:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1511,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"8377:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8370:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8369:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8384:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8369:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8357:28:12"},{"AST":{"nativeSrc":"8404:448:12","nodeType":"YulBlock","src":"8404:448:12","statements":[{"nativeSrc":"8467:24:12","nodeType":"YulVariableDeclaration","src":"8467:24:12","value":{"arguments":[{"name":"buf","nativeSrc":"8487:3:12","nodeType":"YulIdentifier","src":"8487:3:12"}],"functionName":{"name":"mload","nativeSrc":"8481:5:12","nodeType":"YulIdentifier","src":"8481:5:12"},"nativeSrc":"8481:10:12","nodeType":"YulFunctionCall","src":"8481:10:12"},"variables":[{"name":"bufptr","nativeSrc":"8471:6:12","nodeType":"YulTypedName","src":"8471:6:12","type":""}]},{"nativeSrc":"8582:36:12","nodeType":"YulVariableDeclaration","src":"8582:36:12","value":{"arguments":[{"name":"bufptr","nativeSrc":"8598:6:12","nodeType":"YulIdentifier","src":"8598:6:12"},{"name":"newCapacity","nativeSrc":"8606:11:12","nodeType":"YulIdentifier","src":"8606:11:12"}],"functionName":{"name":"add","nativeSrc":"8594:3:12","nodeType":"YulIdentifier","src":"8594:3:12"},"nativeSrc":"8594:24:12","nodeType":"YulFunctionCall","src":"8594:24:12"},"variables":[{"name":"dest","nativeSrc":"8586:4:12","nodeType":"YulTypedName","src":"8586:4:12","type":""}]},{"expression":{"arguments":[{"name":"dest","nativeSrc":"8638:4:12","nodeType":"YulIdentifier","src":"8638:4:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"dest","nativeSrc":"8657:4:12","nodeType":"YulIdentifier","src":"8657:4:12"}],"functionName":{"name":"mload","nativeSrc":"8651:5:12","nodeType":"YulIdentifier","src":"8651:5:12"},"nativeSrc":"8651:11:12","nodeType":"YulFunctionCall","src":"8651:11:12"},{"arguments":[{"name":"mask","nativeSrc":"8668:4:12","nodeType":"YulIdentifier","src":"8668:4:12"}],"functionName":{"name":"not","nativeSrc":"8664:3:12","nodeType":"YulIdentifier","src":"8664:3:12"},"nativeSrc":"8664:9:12","nodeType":"YulFunctionCall","src":"8664:9:12"}],"functionName":{"name":"and","nativeSrc":"8647:3:12","nodeType":"YulIdentifier","src":"8647:3:12"},"nativeSrc":"8647:27:12","nodeType":"YulFunctionCall","src":"8647:27:12"},{"name":"data","nativeSrc":"8676:4:12","nodeType":"YulIdentifier","src":"8676:4:12"}],"functionName":{"name":"or","nativeSrc":"8644:2:12","nodeType":"YulIdentifier","src":"8644:2:12"},"nativeSrc":"8644:37:12","nodeType":"YulFunctionCall","src":"8644:37:12"}],"functionName":{"name":"mstore","nativeSrc":"8631:6:12","nodeType":"YulIdentifier","src":"8631:6:12"},"nativeSrc":"8631:51:12","nodeType":"YulFunctionCall","src":"8631:51:12"},"nativeSrc":"8631:51:12","nodeType":"YulExpressionStatement","src":"8631:51:12"},{"body":{"nativeSrc":"8783:59:12","nodeType":"YulBlock","src":"8783:59:12","statements":[{"expression":{"arguments":[{"name":"bufptr","nativeSrc":"8808:6:12","nodeType":"YulIdentifier","src":"8808:6:12"},{"name":"newCapacity","nativeSrc":"8816:11:12","nodeType":"YulIdentifier","src":"8816:11:12"}],"functionName":{"name":"mstore","nativeSrc":"8801:6:12","nodeType":"YulIdentifier","src":"8801:6:12"},"nativeSrc":"8801:27:12","nodeType":"YulFunctionCall","src":"8801:27:12"},"nativeSrc":"8801:27:12","nodeType":"YulExpressionStatement","src":"8801:27:12"}]},"condition":{"arguments":[{"name":"newCapacity","nativeSrc":"8755:11:12","nodeType":"YulIdentifier","src":"8755:11:12"},{"arguments":[{"name":"bufptr","nativeSrc":"8774:6:12","nodeType":"YulIdentifier","src":"8774:6:12"}],"functionName":{"name":"mload","nativeSrc":"8768:5:12","nodeType":"YulIdentifier","src":"8768:5:12"},"nativeSrc":"8768:13:12","nodeType":"YulFunctionCall","src":"8768:13:12"}],"functionName":{"name":"gt","nativeSrc":"8752:2:12","nodeType":"YulIdentifier","src":"8752:2:12"},"nativeSrc":"8752:30:12","nodeType":"YulFunctionCall","src":"8752:30:12"},"nativeSrc":"8749:93:12","nodeType":"YulIf","src":"8749:93:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1473,"isOffset":false,"isSlot":false,"src":"8487:3:12","valueSize":1},{"declaration":1475,"isOffset":false,"isSlot":false,"src":"8676:4:12","valueSize":1},{"declaration":1509,"isOffset":false,"isSlot":false,"src":"8668:4:12","valueSize":1},{"declaration":1490,"isOffset":false,"isSlot":false,"src":"8606:11:12","valueSize":1},{"declaration":1490,"isOffset":false,"isSlot":false,"src":"8755:11:12","valueSize":1},{"declaration":1490,"isOffset":false,"isSlot":false,"src":"8816:11:12","valueSize":1}],"id":1517,"nodeType":"InlineAssembly","src":"8395:457:12"},{"expression":{"id":1518,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"8868:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1482,"id":1519,"nodeType":"Return","src":"8861:10:12"}]},"documentation":{"id":1470,"nodeType":"StructuredDocumentation","src":"7759:319:12","text":" @dev Appends a byte to the end of the buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to write (right-aligned).\n @return The original buffer."},"id":1521,"implemented":true,"kind":"function","modifiers":[],"name":"appendInt","nameLocation":"8092:9:12","nodeType":"FunctionDefinition","parameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"buf","nameLocation":"8116:3:12","nodeType":"VariableDeclaration","scope":1521,"src":"8102:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1472,"nodeType":"UserDefinedTypeName","pathNode":{"id":1471,"name":"buffer","nameLocations":["8102:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"8102:6:12"},"referencedDeclaration":1109,"src":"8102:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"data","nameLocation":"8126:4:12","nodeType":"VariableDeclaration","scope":1521,"src":"8121:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint","nodeType":"ElementaryTypeName","src":"8121:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"len","nameLocation":"8137:3:12","nodeType":"VariableDeclaration","scope":1521,"src":"8132:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint","nodeType":"ElementaryTypeName","src":"8132:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8101:40:12"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1521,"src":"8164:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1480,"nodeType":"UserDefinedTypeName","pathNode":{"id":1479,"name":"buffer","nameLocations":["8164:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"8164:6:12"},"referencedDeclaration":1109,"src":"8164:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"8163:15:12"},"scope":1522,"src":"8083:795:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1523,"src":"445:8435:12","usedErrors":[],"usedEvents":[]}],"src":"41:8839:12"},"id":12},"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol","exportedSymbols":{"Buffer":[1522],"CBOR":[2381]},"id":2382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1524,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol","file":"../../@ensdomains/buffer/v0.1.0/Buffer.sol","id":1525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2382,"sourceUnit":1523,"src":"57:52:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"CBOR","contractDependencies":[],"contractKind":"library","documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"111:553:13","text":" @dev A library for populating CBOR encoded payload in Solidity.\n https://datatracker.ietf.org/doc/html/rfc7049\n The library offers various write* and start* methods to encode values of different types.\n The resulted buffer can be obtained with data() method.\n Encoding of primitive types is staightforward, whereas encoding of sequences can result\n in an invalid CBOR if start/write/end flow is violated.\n For the purpose of gas saving, the library does not verify start/write/end flow internally,\n except for nested start/end pairs."},"fullyImplemented":true,"id":2381,"linearizedBaseContracts":[2381],"name":"CBOR","nameLocation":"674:4:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1530,"libraryName":{"id":1527,"name":"Buffer","nameLocations":["691:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1522,"src":"691:6:13"},"nodeType":"UsingForDirective","src":"685:31:13","typeName":{"id":1529,"nodeType":"UserDefinedTypeName","pathNode":{"id":1528,"name":"Buffer.buffer","nameLocations":["702:6:13","709:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"702:13:13"},"referencedDeclaration":1109,"src":"702:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}}},{"canonicalName":"CBOR.CBORBuffer","id":1536,"members":[{"constant":false,"id":1533,"mutability":"mutable","name":"buf","nameLocation":"764:3:13","nodeType":"VariableDeclaration","scope":1536,"src":"750:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1532,"nodeType":"UserDefinedTypeName","pathNode":{"id":1531,"name":"Buffer.buffer","nameLocations":["750:6:13","757:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1109,"src":"750:13:13"},"referencedDeclaration":1109,"src":"750:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"depth","nameLocation":"785:5:13","nodeType":"VariableDeclaration","scope":1536,"src":"777:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"777:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CBORBuffer","nameLocation":"729:10:13","nodeType":"StructDefinition","scope":2381,"src":"722:75:13","visibility":"public"},{"constant":true,"id":1539,"mutability":"constant","name":"MAJOR_TYPE_INT","nameLocation":"826:14:13","nodeType":"VariableDeclaration","scope":2381,"src":"803:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1537,"name":"uint8","nodeType":"ElementaryTypeName","src":"803:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"843:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":1542,"mutability":"constant","name":"MAJOR_TYPE_NEGATIVE_INT","nameLocation":"873:23:13","nodeType":"VariableDeclaration","scope":2381,"src":"850:50:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1540,"name":"uint8","nodeType":"ElementaryTypeName","src":"850:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"899:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1545,"mutability":"constant","name":"MAJOR_TYPE_BYTES","nameLocation":"929:16:13","nodeType":"VariableDeclaration","scope":2381,"src":"906:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1543,"name":"uint8","nodeType":"ElementaryTypeName","src":"906:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"948:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":1548,"mutability":"constant","name":"MAJOR_TYPE_STRING","nameLocation":"978:17:13","nodeType":"VariableDeclaration","scope":2381,"src":"955:44:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1546,"name":"uint8","nodeType":"ElementaryTypeName","src":"955:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"998:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":1551,"mutability":"constant","name":"MAJOR_TYPE_ARRAY","nameLocation":"1028:16:13","nodeType":"VariableDeclaration","scope":2381,"src":"1005:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1549,"name":"uint8","nodeType":"ElementaryTypeName","src":"1005:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"34","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1047:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"private"},{"constant":true,"id":1554,"mutability":"constant","name":"MAJOR_TYPE_MAP","nameLocation":"1077:14:13","nodeType":"VariableDeclaration","scope":2381,"src":"1054:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1552,"name":"uint8","nodeType":"ElementaryTypeName","src":"1054:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"35","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1094:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"private"},{"constant":true,"id":1557,"mutability":"constant","name":"MAJOR_TYPE_TAG","nameLocation":"1124:14:13","nodeType":"VariableDeclaration","scope":2381,"src":"1101:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1555,"name":"uint8","nodeType":"ElementaryTypeName","src":"1101:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"36","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1141:1:13","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"private"},{"constant":true,"id":1560,"mutability":"constant","name":"MAJOR_TYPE_CONTENT_FREE","nameLocation":"1171:23:13","nodeType":"VariableDeclaration","scope":2381,"src":"1148:50:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1558,"name":"uint8","nodeType":"ElementaryTypeName","src":"1148:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"37","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1197:1:13","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"visibility":"private"},{"constant":true,"id":1563,"mutability":"constant","name":"TAG_TYPE_BIGNUM","nameLocation":"1228:15:13","nodeType":"VariableDeclaration","scope":2381,"src":"1205:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1561,"name":"uint8","nodeType":"ElementaryTypeName","src":"1205:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1246:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":1566,"mutability":"constant","name":"TAG_TYPE_NEGATIVE_BIGNUM","nameLocation":"1276:24:13","nodeType":"VariableDeclaration","scope":2381,"src":"1253:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1564,"name":"uint8","nodeType":"ElementaryTypeName","src":"1253:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1303:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":1569,"mutability":"constant","name":"CBOR_FALSE","nameLocation":"1334:10:13","nodeType":"VariableDeclaration","scope":2381,"src":"1311:38:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1567,"name":"uint8","nodeType":"ElementaryTypeName","src":"1311:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1347:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1572,"mutability":"constant","name":"CBOR_TRUE","nameLocation":"1378:9:13","nodeType":"VariableDeclaration","scope":2381,"src":"1355:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1570,"name":"uint8","nodeType":"ElementaryTypeName","src":"1355:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3231","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:2:13","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"visibility":"private"},{"constant":true,"id":1575,"mutability":"constant","name":"CBOR_NULL","nameLocation":"1421:9:13","nodeType":"VariableDeclaration","scope":2381,"src":"1398:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1573,"name":"uint8","nodeType":"ElementaryTypeName","src":"1398:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3232","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1433:2:13","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"visibility":"private"},{"constant":true,"id":1578,"mutability":"constant","name":"CBOR_UNDEFINED","nameLocation":"1464:14:13","nodeType":"VariableDeclaration","scope":2381,"src":"1441:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1576,"name":"uint8","nodeType":"ElementaryTypeName","src":"1441:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3233","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1481:2:13","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"visibility":"private"},{"body":{"id":1602,"nodeType":"Block","src":"1570:93:13","statements":[{"expression":{"arguments":[{"expression":{"id":1589,"name":"cbor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"1592:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1597:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"1592:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1591,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"1602:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1586,"name":"Buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1580:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Buffer_$1522_$","typeString":"type(library Buffer)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1587:4:13","memberName":"init","nodeType":"MemberAccess","referencedDeclaration":1147,"src":"1580:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1580:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1593,"nodeType":"ExpressionStatement","src":"1580:31:13"},{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1594,"name":"cbor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"1621:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1626:5:13","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1535,"src":"1621:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1634:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1621:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"nodeType":"ExpressionStatement","src":"1621:14:13"},{"expression":{"id":1600,"name":"cbor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"1652:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"functionReturnParameters":1585,"id":1601,"nodeType":"Return","src":"1645:11:13"}]},"id":1603,"implemented":true,"kind":"function","modifiers":[],"name":"create","nameLocation":"1499:6:13","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"capacity","nameLocation":"1514:8:13","nodeType":"VariableDeclaration","scope":1603,"src":"1506:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1505:18:13"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"cbor","nameLocation":"1564:4:13","nodeType":"VariableDeclaration","scope":1603,"src":"1546:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1583,"nodeType":"UserDefinedTypeName","pathNode":{"id":1582,"name":"CBORBuffer","nameLocations":["1546:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"1546:10:13"},"referencedDeclaration":1536,"src":"1546:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"1545:24:13"},"scope":2381,"src":"1490:173:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1623,"nodeType":"Block","src":"1742:84:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1612,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"1760:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1764:5:13","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1535,"src":"1760:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1773:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1760:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642043424f52","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1776:14:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd61d0da58dad259aa66f3fa1a93613cc3b690958f0ccf5500de84dec9fbf234","typeString":"literal_string \"Invalid CBOR\""},"value":"Invalid CBOR"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fd61d0da58dad259aa66f3fa1a93613cc3b690958f0ccf5500de84dec9fbf234","typeString":"literal_string \"Invalid CBOR\""}],"id":1611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1752:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1618,"nodeType":"ExpressionStatement","src":"1752:39:13"},{"expression":{"expression":{"expression":{"id":1619,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"1808:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1812:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"1808:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1816:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1106,"src":"1808:11:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1610,"id":1622,"nodeType":"Return","src":"1801:18:13"}]},"id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"data","nameLocation":"1678:4:13","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"buf","nameLocation":"1701:3:13","nodeType":"VariableDeclaration","scope":1624,"src":"1683:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1605,"nodeType":"UserDefinedTypeName","pathNode":{"id":1604,"name":"CBORBuffer","nameLocations":["1683:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"1683:10:13"},"referencedDeclaration":1536,"src":"1683:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"1682:23:13"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1624,"src":"1728:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1608,"name":"bytes","nodeType":"ElementaryTypeName","src":"1728:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1727:14:13"},"scope":2381,"src":"1669:157:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"1906:128:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1639,"name":"MAJOR_TYPE_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1943:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1961:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1943:19:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1942:21:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":1643,"name":"TAG_TYPE_BIGNUM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"1966:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1942:39:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1936:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1637,"name":"uint8","nodeType":"ElementaryTypeName","src":"1936:5:13","typeDescriptions":{}}},"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1936:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":1632,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"1916:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1920:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"1916:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1924:11:13","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1363,"src":"1916:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1916:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1647,"nodeType":"ExpressionStatement","src":"1916:67:13"},{"expression":{"arguments":[{"id":1649,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"2004:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"arguments":[{"id":1652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"2020:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1650,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2009:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2013:6:13","memberName":"encode","nodeType":"MemberAccess","src":"2009:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2009:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1648,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"1993:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1993:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"ExpressionStatement","src":"1993:34:13"}]},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"writeUInt256","nameLocation":"1841:12:13","nodeType":"FunctionDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"buf","nameLocation":"1872:3:13","nodeType":"VariableDeclaration","scope":1657,"src":"1854:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1626,"nodeType":"UserDefinedTypeName","pathNode":{"id":1625,"name":"CBORBuffer","nameLocations":["1854:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"1854:10:13"},"referencedDeclaration":1536,"src":"1854:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"value","nameLocation":"1885:5:13","nodeType":"VariableDeclaration","scope":1657,"src":"1877:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"1877:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1853:38:13"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[],"src":"1906:0:13"},"scope":2381,"src":"1832:202:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1709,"nodeType":"Block","src":"2112:288:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2126:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2134:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2126:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1707,"nodeType":"Block","src":"2336:58:13","statements":[{"expression":{"arguments":[{"id":1700,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2363:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"arguments":[{"id":1703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2376:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2368:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:13","typeDescriptions":{}}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2368:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1699,"name":"writeUInt256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2350:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2350:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1706,"nodeType":"ExpressionStatement","src":"2350:33:13"}]},"id":1708,"nodeType":"IfStatement","src":"2122:272:13","trueBody":{"id":1698,"nodeType":"Block","src":"2137:193:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1675,"name":"MAJOR_TYPE_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2195:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2213:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2195:19:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2194:21:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":1679,"name":"TAG_TYPE_NEGATIVE_BIGNUM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"2218:24:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2194:48:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2188:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1673,"name":"uint8","nodeType":"ElementaryTypeName","src":"2188:5:13","typeDescriptions":{}}},"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2188:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":1668,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2151:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2155:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"2151:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2159:11:13","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1363,"src":"2151:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2151:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1683,"nodeType":"ExpressionStatement","src":"2151:106:13"},{"expression":{"arguments":[{"id":1685,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2282:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2306:2:13","subExpression":{"hexValue":"31","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2307:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2311:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2306:10:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2298:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"2298:7:13","typeDescriptions":{}}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1686,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2287:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2291:6:13","memberName":"encode","nodeType":"MemberAccess","src":"2287:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1684,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"2271:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2271:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"2271:48:13"}]}}]},"id":1710,"implemented":true,"kind":"function","modifiers":[],"name":"writeInt256","nameLocation":"2049:11:13","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"buf","nameLocation":"2079:3:13","nodeType":"VariableDeclaration","scope":1710,"src":"2061:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1659,"nodeType":"UserDefinedTypeName","pathNode":{"id":1658,"name":"CBORBuffer","nameLocations":["2061:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"2061:10:13"},"referencedDeclaration":1536,"src":"2061:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"value","nameLocation":"2091:5:13","nodeType":"VariableDeclaration","scope":1710,"src":"2084:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1661,"name":"int256","nodeType":"ElementaryTypeName","src":"2084:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2060:37:13"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"2112:0:13"},"scope":2381,"src":"2040:360:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1724,"nodeType":"Block","src":"2478:62:13","statements":[{"expression":{"arguments":[{"id":1719,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"2506:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1720,"name":"MAJOR_TYPE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"2511:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"2527:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1718,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"2488:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2488:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1723,"nodeType":"ExpressionStatement","src":"2488:45:13"}]},"id":1725,"implemented":true,"kind":"function","modifiers":[],"name":"writeUInt64","nameLocation":"2415:11:13","nodeType":"FunctionDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"buf","nameLocation":"2445:3:13","nodeType":"VariableDeclaration","scope":1725,"src":"2427:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1712,"nodeType":"UserDefinedTypeName","pathNode":{"id":1711,"name":"CBORBuffer","nameLocations":["2427:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"2427:10:13"},"referencedDeclaration":1536,"src":"2427:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"value","nameLocation":"2457:5:13","nodeType":"VariableDeclaration","scope":1725,"src":"2450:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1714,"name":"uint64","nodeType":"ElementaryTypeName","src":"2450:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2426:37:13"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[],"src":"2478:0:13"},"scope":2381,"src":"2406:134:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1760,"nodeType":"Block","src":"2616:206:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2629:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2638:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2629:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1758,"nodeType":"Block","src":"2724:92:13","statements":[{"expression":{"arguments":[{"id":1747,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"2756:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1748,"name":"MAJOR_TYPE_NEGATIVE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"2761:23:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2793:2:13","subExpression":{"hexValue":"31","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2794:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2798:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"2793:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2786:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1749,"name":"uint64","nodeType":"ElementaryTypeName","src":"2786:6:13","typeDescriptions":{}}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2786:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1746,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"2738:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1757,"nodeType":"ExpressionStatement","src":"2738:67:13"}]},"id":1759,"nodeType":"IfStatement","src":"2626:190:13","trueBody":{"id":1745,"nodeType":"Block","src":"2641:78:13","statements":[{"expression":{"arguments":[{"id":1737,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"2673:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1738,"name":"MAJOR_TYPE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"2678:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"id":1741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2701:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2694:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1739,"name":"uint64","nodeType":"ElementaryTypeName","src":"2694:6:13","typeDescriptions":{}}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2694:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1736,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"2655:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"ExpressionStatement","src":"2655:53:13"}]}}]},"id":1761,"implemented":true,"kind":"function","modifiers":[],"name":"writeInt64","nameLocation":"2555:10:13","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"buf","nameLocation":"2584:3:13","nodeType":"VariableDeclaration","scope":1761,"src":"2566:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1727,"nodeType":"UserDefinedTypeName","pathNode":{"id":1726,"name":"CBORBuffer","nameLocations":["2566:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"2566:10:13"},"referencedDeclaration":1536,"src":"2566:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"value","nameLocation":"2595:5:13","nodeType":"VariableDeclaration","scope":1761,"src":"2589:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1729,"name":"int64","nodeType":"ElementaryTypeName","src":"2589:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"2565:36:13"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[],"src":"2616:0:13"},"scope":2381,"src":"2546:276:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1787,"nodeType":"Block","src":"2905:110:13","statements":[{"expression":{"arguments":[{"id":1770,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"2933:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1771,"name":"MAJOR_TYPE_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"2938:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"expression":{"id":1774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"2963:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:13","memberName":"length","nodeType":"MemberAccess","src":"2963:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2956:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1772,"name":"uint64","nodeType":"ElementaryTypeName","src":"2956:6:13","typeDescriptions":{}}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2956:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1769,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"2915:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2915:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1778,"nodeType":"ExpressionStatement","src":"2915:62:13"},{"expression":{"arguments":[{"id":1784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"3002:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":1779,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"2987:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2991:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"2987:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2995:6:13","memberName":"append","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"2987:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2987:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1786,"nodeType":"ExpressionStatement","src":"2987:21:13"}]},"id":1788,"implemented":true,"kind":"function","modifiers":[],"name":"writeBytes","nameLocation":"2837:10:13","nodeType":"FunctionDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"buf","nameLocation":"2866:3:13","nodeType":"VariableDeclaration","scope":1788,"src":"2848:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1763,"nodeType":"UserDefinedTypeName","pathNode":{"id":1762,"name":"CBORBuffer","nameLocations":["2848:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"2848:10:13"},"referencedDeclaration":1536,"src":"2848:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"value","nameLocation":"2884:5:13","nodeType":"VariableDeclaration","scope":1788,"src":"2871:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1765,"name":"bytes","nodeType":"ElementaryTypeName","src":"2871:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2847:43:13"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[],"src":"2905:0:13"},"scope":2381,"src":"2828:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1820,"nodeType":"Block","src":"3100:125:13","statements":[{"expression":{"arguments":[{"id":1797,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"3128:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1798,"name":"MAJOR_TYPE_STRING","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"3133:17:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"expression":{"arguments":[{"id":1803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"3165:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3159:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1801,"name":"bytes","nodeType":"ElementaryTypeName","src":"3159:5:13","typeDescriptions":{}}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3159:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3172:6:13","memberName":"length","nodeType":"MemberAccess","src":"3159:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3152:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1799,"name":"uint64","nodeType":"ElementaryTypeName","src":"3152:6:13","typeDescriptions":{}}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1796,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"3110:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3110:70:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"ExpressionStatement","src":"3110:70:13"},{"expression":{"arguments":[{"arguments":[{"id":1816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"3211:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3205:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1814,"name":"bytes","nodeType":"ElementaryTypeName","src":"3205:5:13","typeDescriptions":{}}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3205:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":1809,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"3190:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3194:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"3190:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3198:6:13","memberName":"append","nodeType":"MemberAccess","referencedDeclaration":1322,"src":"3190:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3190:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1819,"nodeType":"ExpressionStatement","src":"3190:28:13"}]},"id":1821,"implemented":true,"kind":"function","modifiers":[],"name":"writeString","nameLocation":"3030:11:13","nodeType":"FunctionDefinition","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"buf","nameLocation":"3060:3:13","nodeType":"VariableDeclaration","scope":1821,"src":"3042:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1790,"nodeType":"UserDefinedTypeName","pathNode":{"id":1789,"name":"CBORBuffer","nameLocations":["3042:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"3042:10:13"},"referencedDeclaration":1536,"src":"3042:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"value","nameLocation":"3079:5:13","nodeType":"VariableDeclaration","scope":1821,"src":"3065:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1792,"name":"string","nodeType":"ElementaryTypeName","src":"3065:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3041:44:13"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[],"src":"3100:0:13"},"scope":2381,"src":"3021:204:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1837,"nodeType":"Block","src":"3299:70:13","statements":[{"expression":{"arguments":[{"id":1830,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"3326:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"condition":{"id":1831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"3331:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1833,"name":"CBOR_FALSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"3351:10:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3331:30:13","trueExpression":{"id":1832,"name":"CBOR_TRUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"3339:9:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1829,"name":"writeContentFree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3309:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3309:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1836,"nodeType":"ExpressionStatement","src":"3309:53:13"}]},"id":1838,"implemented":true,"kind":"function","modifiers":[],"name":"writeBool","nameLocation":"3240:9:13","nodeType":"FunctionDefinition","parameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"buf","nameLocation":"3268:3:13","nodeType":"VariableDeclaration","scope":1838,"src":"3250:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1823,"nodeType":"UserDefinedTypeName","pathNode":{"id":1822,"name":"CBORBuffer","nameLocations":["3250:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"3250:10:13"},"referencedDeclaration":1536,"src":"3250:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"value","nameLocation":"3278:5:13","nodeType":"VariableDeclaration","scope":1838,"src":"3273:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1825,"name":"bool","nodeType":"ElementaryTypeName","src":"3273:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3249:35:13"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[],"src":"3299:0:13"},"scope":2381,"src":"3231:138:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1849,"nodeType":"Block","src":"3431:49:13","statements":[{"expression":{"arguments":[{"id":1845,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"3458:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1846,"name":"CBOR_NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"3463:9:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1844,"name":"writeContentFree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3441:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1848,"nodeType":"ExpressionStatement","src":"3441:32:13"}]},"id":1850,"implemented":true,"kind":"function","modifiers":[],"name":"writeNull","nameLocation":"3384:9:13","nodeType":"FunctionDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"buf","nameLocation":"3412:3:13","nodeType":"VariableDeclaration","scope":1850,"src":"3394:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1840,"nodeType":"UserDefinedTypeName","pathNode":{"id":1839,"name":"CBORBuffer","nameLocations":["3394:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"3394:10:13"},"referencedDeclaration":1536,"src":"3394:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3393:23:13"},"returnParameters":{"id":1843,"nodeType":"ParameterList","parameters":[],"src":"3431:0:13"},"scope":2381,"src":"3375:105:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1861,"nodeType":"Block","src":"3547:54:13","statements":[{"expression":{"arguments":[{"id":1857,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"3574:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1858,"name":"CBOR_UNDEFINED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"3579:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1856,"name":"writeContentFree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3557:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3557:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"ExpressionStatement","src":"3557:37:13"}]},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"writeUndefined","nameLocation":"3495:14:13","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"buf","nameLocation":"3528:3:13","nodeType":"VariableDeclaration","scope":1862,"src":"3510:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1852,"nodeType":"UserDefinedTypeName","pathNode":{"id":1851,"name":"CBORBuffer","nameLocations":["3510:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"3510:10:13"},"referencedDeclaration":1536,"src":"3510:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3509:23:13"},"returnParameters":{"id":1855,"nodeType":"ParameterList","parameters":[],"src":"3547:0:13"},"scope":2381,"src":"3486:115:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1879,"nodeType":"Block","src":"3664:89:13","statements":[{"expression":{"arguments":[{"id":1869,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"3700:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1870,"name":"MAJOR_TYPE_ARRAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"3705:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1868,"name":"writeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"3674:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3674:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1872,"nodeType":"ExpressionStatement","src":"3674:48:13"},{"expression":{"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1873,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"3732:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3736:5:13","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1535,"src":"3732:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3745:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3732:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1878,"nodeType":"ExpressionStatement","src":"3732:14:13"}]},"id":1880,"implemented":true,"kind":"function","modifiers":[],"name":"startArray","nameLocation":"3616:10:13","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"buf","nameLocation":"3645:3:13","nodeType":"VariableDeclaration","scope":1880,"src":"3627:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1864,"nodeType":"UserDefinedTypeName","pathNode":{"id":1863,"name":"CBORBuffer","nameLocations":["3627:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"3627:10:13"},"referencedDeclaration":1536,"src":"3627:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3626:23:13"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[],"src":"3664:0:13"},"scope":2381,"src":"3607:146:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1894,"nodeType":"Block","src":"3836:71:13","statements":[{"expression":{"arguments":[{"id":1889,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3870:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1890,"name":"MAJOR_TYPE_ARRAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"3875:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1891,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"3893:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1888,"name":"writeDefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"3846:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:54:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1893,"nodeType":"ExpressionStatement","src":"3846:54:13"}]},"id":1895,"implemented":true,"kind":"function","modifiers":[],"name":"startFixedArray","nameLocation":"3768:15:13","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"buf","nameLocation":"3802:3:13","nodeType":"VariableDeclaration","scope":1895,"src":"3784:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1882,"nodeType":"UserDefinedTypeName","pathNode":{"id":1881,"name":"CBORBuffer","nameLocations":["3784:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"3784:10:13"},"referencedDeclaration":1536,"src":"3784:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1885,"mutability":"mutable","name":"length","nameLocation":"3814:6:13","nodeType":"VariableDeclaration","scope":1895,"src":"3807:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1884,"name":"uint64","nodeType":"ElementaryTypeName","src":"3807:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3783:38:13"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[],"src":"3836:0:13"},"scope":2381,"src":"3759:148:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1912,"nodeType":"Block","src":"3968:87:13","statements":[{"expression":{"arguments":[{"id":1902,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"4004:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1903,"name":"MAJOR_TYPE_MAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4009:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1901,"name":"writeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"3978:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3978:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1905,"nodeType":"ExpressionStatement","src":"3978:46:13"},{"expression":{"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1906,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"4034:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4038:5:13","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1535,"src":"4034:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4047:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4034:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1911,"nodeType":"ExpressionStatement","src":"4034:14:13"}]},"id":1913,"implemented":true,"kind":"function","modifiers":[],"name":"startMap","nameLocation":"3922:8:13","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"buf","nameLocation":"3949:3:13","nodeType":"VariableDeclaration","scope":1913,"src":"3931:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1897,"nodeType":"UserDefinedTypeName","pathNode":{"id":1896,"name":"CBORBuffer","nameLocations":["3931:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"3931:10:13"},"referencedDeclaration":1536,"src":"3931:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3930:23:13"},"returnParameters":{"id":1900,"nodeType":"ParameterList","parameters":[],"src":"3968:0:13"},"scope":2381,"src":"3913:142:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1927,"nodeType":"Block","src":"4136:69:13","statements":[{"expression":{"arguments":[{"id":1922,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"4170:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1923,"name":"MAJOR_TYPE_MAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4175:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1924,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"4191:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1921,"name":"writeDefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"4146:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1926,"nodeType":"ExpressionStatement","src":"4146:52:13"}]},"id":1928,"implemented":true,"kind":"function","modifiers":[],"name":"startFixedMap","nameLocation":"4070:13:13","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"buf","nameLocation":"4102:3:13","nodeType":"VariableDeclaration","scope":1928,"src":"4084:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1915,"nodeType":"UserDefinedTypeName","pathNode":{"id":1914,"name":"CBORBuffer","nameLocations":["4084:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"4084:10:13"},"referencedDeclaration":1536,"src":"4084:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"length","nameLocation":"4114:6:13","nodeType":"VariableDeclaration","scope":1928,"src":"4107:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1917,"name":"uint64","nodeType":"ElementaryTypeName","src":"4107:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4083:38:13"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"4136:0:13"},"scope":2381,"src":"4061:144:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1945,"nodeType":"Block","src":"4269:96:13","statements":[{"expression":{"arguments":[{"id":1935,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"4305:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1936,"name":"MAJOR_TYPE_CONTENT_FREE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"4310:23:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1934,"name":"writeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"4279:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1938,"nodeType":"ExpressionStatement","src":"4279:55:13"},{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1939,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"4344:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4348:5:13","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1535,"src":"4344:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4357:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4344:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1944,"nodeType":"ExpressionStatement","src":"4344:14:13"}]},"id":1946,"implemented":true,"kind":"function","modifiers":[],"name":"endSequence","nameLocation":"4220:11:13","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"buf","nameLocation":"4250:3:13","nodeType":"VariableDeclaration","scope":1946,"src":"4232:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1930,"nodeType":"UserDefinedTypeName","pathNode":{"id":1929,"name":"CBORBuffer","nameLocations":["4232:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"4232:10:13"},"referencedDeclaration":1536,"src":"4232:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"4231:23:13"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[],"src":"4269:0:13"},"scope":2381,"src":"4211:154:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"4471:71:13","statements":[{"expression":{"arguments":[{"id":1957,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"4493:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1958,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"4498:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1956,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"4481:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4481:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1960,"nodeType":"ExpressionStatement","src":"4481:21:13"},{"expression":{"arguments":[{"id":1962,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"4524:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"4529:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1961,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"4512:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4512:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"ExpressionStatement","src":"4512:23:13"}]},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVString","nameLocation":"4380:13:13","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"buf","nameLocation":"4412:3:13","nodeType":"VariableDeclaration","scope":1967,"src":"4394:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1948,"nodeType":"UserDefinedTypeName","pathNode":{"id":1947,"name":"CBORBuffer","nameLocations":["4394:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"4394:10:13"},"referencedDeclaration":1536,"src":"4394:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"key","nameLocation":"4431:3:13","nodeType":"VariableDeclaration","scope":1967,"src":"4417:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1950,"name":"string","nodeType":"ElementaryTypeName","src":"4417:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"value","nameLocation":"4450:5:13","nodeType":"VariableDeclaration","scope":1967,"src":"4436:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1952,"name":"string","nodeType":"ElementaryTypeName","src":"4436:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4393:63:13"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"4471:0:13"},"scope":2381,"src":"4371:171:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1987,"nodeType":"Block","src":"4646:70:13","statements":[{"expression":{"arguments":[{"id":1978,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"4668:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1979,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"4673:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1977,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"4656:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1981,"nodeType":"ExpressionStatement","src":"4656:21:13"},{"expression":{"arguments":[{"id":1983,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"4698:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"4703:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1982,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"4687:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4687:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1986,"nodeType":"ExpressionStatement","src":"4687:22:13"}]},"id":1988,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVBytes","nameLocation":"4557:12:13","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"buf","nameLocation":"4588:3:13","nodeType":"VariableDeclaration","scope":1988,"src":"4570:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1969,"nodeType":"UserDefinedTypeName","pathNode":{"id":1968,"name":"CBORBuffer","nameLocations":["4570:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"4570:10:13"},"referencedDeclaration":1536,"src":"4570:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"key","nameLocation":"4607:3:13","nodeType":"VariableDeclaration","scope":1988,"src":"4593:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1971,"name":"string","nodeType":"ElementaryTypeName","src":"4593:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"value","nameLocation":"4625:5:13","nodeType":"VariableDeclaration","scope":1988,"src":"4612:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1973,"name":"bytes","nodeType":"ElementaryTypeName","src":"4612:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4569:62:13"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[],"src":"4646:0:13"},"scope":2381,"src":"4548:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2008,"nodeType":"Block","src":"4817:72:13","statements":[{"expression":{"arguments":[{"id":1999,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"4839:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2000,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"4844:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1998,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"4827:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4827:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2002,"nodeType":"ExpressionStatement","src":"4827:21:13"},{"expression":{"arguments":[{"id":2004,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"4871:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"4876:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2003,"name":"writeUInt256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"4858:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4858:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2007,"nodeType":"ExpressionStatement","src":"4858:24:13"}]},"id":2009,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVUInt256","nameLocation":"4731:14:13","nodeType":"FunctionDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"buf","nameLocation":"4764:3:13","nodeType":"VariableDeclaration","scope":2009,"src":"4746:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1990,"nodeType":"UserDefinedTypeName","pathNode":{"id":1989,"name":"CBORBuffer","nameLocations":["4746:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"4746:10:13"},"referencedDeclaration":1536,"src":"4746:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"key","nameLocation":"4783:3:13","nodeType":"VariableDeclaration","scope":2009,"src":"4769:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1992,"name":"string","nodeType":"ElementaryTypeName","src":"4769:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"value","nameLocation":"4796:5:13","nodeType":"VariableDeclaration","scope":2009,"src":"4788:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"4788:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4745:57:13"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[],"src":"4817:0:13"},"scope":2381,"src":"4722:167:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2029,"nodeType":"Block","src":"4988:71:13","statements":[{"expression":{"arguments":[{"id":2020,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"5010:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2021,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"5015:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2019,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"4998:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4998:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"ExpressionStatement","src":"4998:21:13"},{"expression":{"arguments":[{"id":2025,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"5041:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"5046:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2024,"name":"writeInt256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"5029:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_int256_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,int256) pure"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5029:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2028,"nodeType":"ExpressionStatement","src":"5029:23:13"}]},"id":2030,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVInt256","nameLocation":"4904:13:13","nodeType":"FunctionDefinition","parameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"buf","nameLocation":"4936:3:13","nodeType":"VariableDeclaration","scope":2030,"src":"4918:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2011,"nodeType":"UserDefinedTypeName","pathNode":{"id":2010,"name":"CBORBuffer","nameLocations":["4918:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"4918:10:13"},"referencedDeclaration":1536,"src":"4918:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"key","nameLocation":"4955:3:13","nodeType":"VariableDeclaration","scope":2030,"src":"4941:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2013,"name":"string","nodeType":"ElementaryTypeName","src":"4941:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"value","nameLocation":"4967:5:13","nodeType":"VariableDeclaration","scope":2030,"src":"4960:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2015,"name":"int256","nodeType":"ElementaryTypeName","src":"4960:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4917:56:13"},"returnParameters":{"id":2018,"nodeType":"ParameterList","parameters":[],"src":"4988:0:13"},"scope":2381,"src":"4895:164:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"5158:71:13","statements":[{"expression":{"arguments":[{"id":2041,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"5180:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2042,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"5185:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2040,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"5168:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5168:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2044,"nodeType":"ExpressionStatement","src":"5168:21:13"},{"expression":{"arguments":[{"id":2046,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"5211:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"5216:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2045,"name":"writeUInt64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"5199:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint64) pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"ExpressionStatement","src":"5199:23:13"}]},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVUInt64","nameLocation":"5074:13:13","nodeType":"FunctionDefinition","parameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"buf","nameLocation":"5106:3:13","nodeType":"VariableDeclaration","scope":2051,"src":"5088:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2032,"nodeType":"UserDefinedTypeName","pathNode":{"id":2031,"name":"CBORBuffer","nameLocations":["5088:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"5088:10:13"},"referencedDeclaration":1536,"src":"5088:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"key","nameLocation":"5125:3:13","nodeType":"VariableDeclaration","scope":2051,"src":"5111:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2034,"name":"string","nodeType":"ElementaryTypeName","src":"5111:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"value","nameLocation":"5137:5:13","nodeType":"VariableDeclaration","scope":2051,"src":"5130:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2036,"name":"uint64","nodeType":"ElementaryTypeName","src":"5130:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5087:56:13"},"returnParameters":{"id":2039,"nodeType":"ParameterList","parameters":[],"src":"5158:0:13"},"scope":2381,"src":"5065:164:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2071,"nodeType":"Block","src":"5326:70:13","statements":[{"expression":{"arguments":[{"id":2062,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"5348:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2063,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"5353:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2061,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"5336:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5336:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"5336:21:13"},{"expression":{"arguments":[{"id":2067,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"5378:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"5383:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_int64","typeString":"int64"}],"id":2066,"name":"writeInt64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"5367:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_int64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,int64) pure"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5367:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2070,"nodeType":"ExpressionStatement","src":"5367:22:13"}]},"id":2072,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVInt64","nameLocation":"5244:12:13","nodeType":"FunctionDefinition","parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"buf","nameLocation":"5275:3:13","nodeType":"VariableDeclaration","scope":2072,"src":"5257:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2053,"nodeType":"UserDefinedTypeName","pathNode":{"id":2052,"name":"CBORBuffer","nameLocations":["5257:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"5257:10:13"},"referencedDeclaration":1536,"src":"5257:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"key","nameLocation":"5294:3:13","nodeType":"VariableDeclaration","scope":2072,"src":"5280:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2055,"name":"string","nodeType":"ElementaryTypeName","src":"5280:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"value","nameLocation":"5305:5:13","nodeType":"VariableDeclaration","scope":2072,"src":"5299:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2057,"name":"int64","nodeType":"ElementaryTypeName","src":"5299:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"5256:55:13"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[],"src":"5326:0:13"},"scope":2381,"src":"5235:161:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"5491:69:13","statements":[{"expression":{"arguments":[{"id":2083,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"5513:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2084,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"5518:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2082,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"5501:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5501:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"ExpressionStatement","src":"5501:21:13"},{"expression":{"arguments":[{"id":2088,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"5542:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"5547:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2087,"name":"writeBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"5532:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_bool_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bool) pure"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5532:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2091,"nodeType":"ExpressionStatement","src":"5532:21:13"}]},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVBool","nameLocation":"5411:11:13","nodeType":"FunctionDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"buf","nameLocation":"5441:3:13","nodeType":"VariableDeclaration","scope":2093,"src":"5423:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2074,"nodeType":"UserDefinedTypeName","pathNode":{"id":2073,"name":"CBORBuffer","nameLocations":["5423:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"5423:10:13"},"referencedDeclaration":1536,"src":"5423:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"key","nameLocation":"5460:3:13","nodeType":"VariableDeclaration","scope":2093,"src":"5446:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2076,"name":"string","nodeType":"ElementaryTypeName","src":"5446:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"value","nameLocation":"5470:5:13","nodeType":"VariableDeclaration","scope":2093,"src":"5465:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2078,"name":"bool","nodeType":"ElementaryTypeName","src":"5465:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5422:54:13"},"returnParameters":{"id":2081,"nodeType":"ParameterList","parameters":[],"src":"5491:0:13"},"scope":2381,"src":"5402:158:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2110,"nodeType":"Block","src":"5643:62:13","statements":[{"expression":{"arguments":[{"id":2102,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5665:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2103,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"5670:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2101,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"5653:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5653:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2105,"nodeType":"ExpressionStatement","src":"5653:21:13"},{"expression":{"arguments":[{"id":2107,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5694:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":2106,"name":"writeNull","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5684:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5684:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2109,"nodeType":"ExpressionStatement","src":"5684:14:13"}]},"id":2111,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVNull","nameLocation":"5575:11:13","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"buf","nameLocation":"5605:3:13","nodeType":"VariableDeclaration","scope":2111,"src":"5587:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2095,"nodeType":"UserDefinedTypeName","pathNode":{"id":2094,"name":"CBORBuffer","nameLocations":["5587:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"5587:10:13"},"referencedDeclaration":1536,"src":"5587:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"key","nameLocation":"5624:3:13","nodeType":"VariableDeclaration","scope":2111,"src":"5610:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2097,"name":"string","nodeType":"ElementaryTypeName","src":"5610:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5586:42:13"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[],"src":"5643:0:13"},"scope":2381,"src":"5566:139:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2128,"nodeType":"Block","src":"5793:67:13","statements":[{"expression":{"arguments":[{"id":2120,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"5815:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2121,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5820:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2119,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"5803:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5803:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2123,"nodeType":"ExpressionStatement","src":"5803:21:13"},{"expression":{"arguments":[{"id":2125,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"5849:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":2124,"name":"writeUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5834:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2127,"nodeType":"ExpressionStatement","src":"5834:19:13"}]},"id":2129,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVUndefined","nameLocation":"5720:16:13","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"buf","nameLocation":"5755:3:13","nodeType":"VariableDeclaration","scope":2129,"src":"5737:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2113,"nodeType":"UserDefinedTypeName","pathNode":{"id":2112,"name":"CBORBuffer","nameLocations":["5737:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"5737:10:13"},"referencedDeclaration":1536,"src":"5737:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"key","nameLocation":"5774:3:13","nodeType":"VariableDeclaration","scope":2129,"src":"5760:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2115,"name":"string","nodeType":"ElementaryTypeName","src":"5760:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5736:42:13"},"returnParameters":{"id":2118,"nodeType":"ParameterList","parameters":[],"src":"5793:0:13"},"scope":2381,"src":"5711:149:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2146,"nodeType":"Block","src":"5942:61:13","statements":[{"expression":{"arguments":[{"id":2138,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"5964:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2139,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"5969:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2137,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"5952:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5952:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2141,"nodeType":"ExpressionStatement","src":"5952:21:13"},{"expression":{"arguments":[{"id":2143,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"5992:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":2142,"name":"startMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"5983:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5983:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2145,"nodeType":"ExpressionStatement","src":"5983:13:13"}]},"id":2147,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVMap","nameLocation":"5875:10:13","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"buf","nameLocation":"5904:3:13","nodeType":"VariableDeclaration","scope":2147,"src":"5886:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2131,"nodeType":"UserDefinedTypeName","pathNode":{"id":2130,"name":"CBORBuffer","nameLocations":["5886:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"5886:10:13"},"referencedDeclaration":1536,"src":"5886:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"key","nameLocation":"5923:3:13","nodeType":"VariableDeclaration","scope":2147,"src":"5909:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2133,"name":"string","nodeType":"ElementaryTypeName","src":"5909:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5885:42:13"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[],"src":"5942:0:13"},"scope":2381,"src":"5866:137:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2164,"nodeType":"Block","src":"6087:63:13","statements":[{"expression":{"arguments":[{"id":2156,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"6109:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2157,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"6114:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2155,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6097:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6097:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2159,"nodeType":"ExpressionStatement","src":"6097:21:13"},{"expression":{"arguments":[{"id":2161,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"6139:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":2160,"name":"startArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"6128:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2163,"nodeType":"ExpressionStatement","src":"6128:15:13"}]},"id":2165,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVArray","nameLocation":"6018:12:13","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"buf","nameLocation":"6049:3:13","nodeType":"VariableDeclaration","scope":2165,"src":"6031:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2149,"nodeType":"UserDefinedTypeName","pathNode":{"id":2148,"name":"CBORBuffer","nameLocations":["6031:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"6031:10:13"},"referencedDeclaration":1536,"src":"6031:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2152,"mutability":"mutable","name":"key","nameLocation":"6068:3:13","nodeType":"VariableDeclaration","scope":2165,"src":"6054:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2151,"name":"string","nodeType":"ElementaryTypeName","src":"6054:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6030:42:13"},"returnParameters":{"id":2154,"nodeType":"ParameterList","parameters":[],"src":"6087:0:13"},"scope":2381,"src":"6009:141:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2312,"nodeType":"Block","src":"6276:639:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6290:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3233","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6299:2:13","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"src":"6290:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6386:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6395:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"6386:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6522:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307846464646","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6531:6:13","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xFFFF"},"src":"6522:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6660:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646464646464646","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6669:10:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xFFFFFFFF"},"src":"6660:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2307,"nodeType":"Block","src":"6798:111:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2289,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"6839:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6848:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6839:10:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6838:12:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3237","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6853:2:13","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6838:17:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6832:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2287,"name":"uint8","nodeType":"ElementaryTypeName","src":"6832:5:13","typeDescriptions":{}}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6832:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2282,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6812:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6816:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"6812:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6820:11:13","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1363,"src":"6812:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6812:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2297,"nodeType":"ExpressionStatement","src":"6812:45:13"},{"expression":{"arguments":[{"id":2303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6889:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"38","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6896:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}],"expression":{"expression":{"id":2298,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6871:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6875:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"6871:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:9:13","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1521,"src":"6871:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6871:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2306,"nodeType":"ExpressionStatement","src":"6871:27:13"}]},"id":2308,"nodeType":"IfStatement","src":"6656:253:13","trueBody":{"id":2281,"nodeType":"Block","src":"6681:111:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"6722:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6731:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6722:10:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6721:12:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3236","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6736:2:13","typeDescriptions":{"typeIdentifier":"t_rational_26_by_1","typeString":"int_const 26"},"value":"26"},"src":"6721:17:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6715:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2261,"name":"uint8","nodeType":"ElementaryTypeName","src":"6715:5:13","typeDescriptions":{}}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6715:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2256,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6695:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6699:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"6695:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6703:11:13","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1363,"src":"6695:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6695:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2271,"nodeType":"ExpressionStatement","src":"6695:45:13"},{"expression":{"arguments":[{"id":2277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6772:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"34","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6779:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}],"expression":{"expression":{"id":2272,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6754:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6758:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"6754:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6762:9:13","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1521,"src":"6754:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6754:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2280,"nodeType":"ExpressionStatement","src":"6754:27:13"}]}},"id":2309,"nodeType":"IfStatement","src":"6518:391:13","trueBody":{"id":2252,"nodeType":"Block","src":"6539:111:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2234,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"6580:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6589:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6580:10:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6579:12:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3235","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6594:2:13","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"6579:17:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6573:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2232,"name":"uint8","nodeType":"ElementaryTypeName","src":"6573:5:13","typeDescriptions":{}}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6573:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2227,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6553:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6557:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"6553:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6561:11:13","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1363,"src":"6553:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2242,"nodeType":"ExpressionStatement","src":"6553:45:13"},{"expression":{"arguments":[{"id":2248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6630:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"32","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6637:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"expression":{"id":2243,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6612:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6616:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"6612:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6620:9:13","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1521,"src":"6612:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6612:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2251,"nodeType":"ExpressionStatement","src":"6612:27:13"}]}},"id":2310,"nodeType":"IfStatement","src":"6382:527:13","trueBody":{"id":2223,"nodeType":"Block","src":"6401:111:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2205,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"6442:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6451:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6442:10:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6441:12:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3234","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6456:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"6441:17:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6435:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2203,"name":"uint8","nodeType":"ElementaryTypeName","src":"6435:5:13","typeDescriptions":{}}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6435:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2198,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6415:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6419:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"6415:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6423:11:13","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1363,"src":"6415:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2213,"nodeType":"ExpressionStatement","src":"6415:45:13"},{"expression":{"arguments":[{"id":2219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6492:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"31","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6499:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"expression":{"id":2214,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6474:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6478:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"6474:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6482:9:13","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1521,"src":"6474:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6474:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2222,"nodeType":"ExpressionStatement","src":"6474:27:13"}]}},"id":2311,"nodeType":"IfStatement","src":"6286:623:13","trueBody":{"id":2194,"nodeType":"Block","src":"6303:73:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"6344:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6353:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6344:10:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6343:12:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6358:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6343:20:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6337:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2183,"name":"uint8","nodeType":"ElementaryTypeName","src":"6337:5:13","typeDescriptions":{}}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6337:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2178,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6317:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6321:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"6317:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6325:11:13","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1363,"src":"6317:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2193,"nodeType":"ExpressionStatement","src":"6317:48:13"}]}}]},"id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"writeFixedNumeric","nameLocation":"6165:17:13","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"buf","nameLocation":"6210:3:13","nodeType":"VariableDeclaration","scope":2313,"src":"6192:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"CBORBuffer","nameLocations":["6192:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"6192:10:13"},"referencedDeclaration":1536,"src":"6192:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"major","nameLocation":"6229:5:13","nodeType":"VariableDeclaration","scope":2313,"src":"6223:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2169,"name":"uint8","nodeType":"ElementaryTypeName","src":"6223:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"value","nameLocation":"6251:5:13","nodeType":"VariableDeclaration","scope":2313,"src":"6244:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2171,"name":"uint64","nodeType":"ElementaryTypeName","src":"6244:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6182:80:13"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[],"src":"6276:0:13"},"scope":2381,"src":"6156:759:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2337,"nodeType":"Block","src":"7025:62:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2328,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"7062:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7071:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"7062:10:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7061:12:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3331","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7076:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"7061:17:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7055:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2326,"name":"uint8","nodeType":"ElementaryTypeName","src":"7055:5:13","typeDescriptions":{}}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7055:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2321,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7035:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"7035:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7043:11:13","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1363,"src":"7035:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7035:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2336,"nodeType":"ExpressionStatement","src":"7035:45:13"}]},"id":2338,"implemented":true,"kind":"function","modifiers":[],"name":"writeIndefiniteLengthType","nameLocation":"6930:25:13","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"buf","nameLocation":"6974:3:13","nodeType":"VariableDeclaration","scope":2338,"src":"6956:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2315,"nodeType":"UserDefinedTypeName","pathNode":{"id":2314,"name":"CBORBuffer","nameLocations":["6956:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"6956:10:13"},"referencedDeclaration":1536,"src":"6956:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"major","nameLocation":"6985:5:13","nodeType":"VariableDeclaration","scope":2338,"src":"6979:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2317,"name":"uint8","nodeType":"ElementaryTypeName","src":"6979:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6955:36:13"},"returnParameters":{"id":2320,"nodeType":"ParameterList","parameters":[],"src":"7025:0:13"},"scope":2381,"src":"6921:166:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2354,"nodeType":"Block","src":"7210:54:13","statements":[{"expression":{"arguments":[{"id":2349,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"7238:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2350,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"7243:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2351,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"7250:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2348,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"7220:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1536_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7220:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2353,"nodeType":"ExpressionStatement","src":"7220:37:13"}]},"id":2355,"implemented":true,"kind":"function","modifiers":[],"name":"writeDefiniteLengthType","nameLocation":"7102:23:13","nodeType":"FunctionDefinition","parameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"buf","nameLocation":"7144:3:13","nodeType":"VariableDeclaration","scope":2355,"src":"7126:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2340,"nodeType":"UserDefinedTypeName","pathNode":{"id":2339,"name":"CBORBuffer","nameLocations":["7126:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"7126:10:13"},"referencedDeclaration":1536,"src":"7126:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2343,"mutability":"mutable","name":"major","nameLocation":"7155:5:13","nodeType":"VariableDeclaration","scope":2355,"src":"7149:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2342,"name":"uint8","nodeType":"ElementaryTypeName","src":"7149:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2345,"mutability":"mutable","name":"length","nameLocation":"7169:6:13","nodeType":"VariableDeclaration","scope":2355,"src":"7162:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2344,"name":"uint64","nodeType":"ElementaryTypeName","src":"7162:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7125:51:13"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[],"src":"7210:0:13"},"scope":2381,"src":"7093:171:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2379,"nodeType":"Block","src":"7345:83:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2370,"name":"MAJOR_TYPE_CONTENT_FREE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"7382:23:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7409:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"7382:28:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7381:30:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"7414:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7381:38:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7375:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2368,"name":"uint8","nodeType":"ElementaryTypeName","src":"7375:5:13","typeDescriptions":{}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7375:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2363,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"7355:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7359:3:13","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"7355:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7363:11:13","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1363,"src":"7355:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$1109_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$1109_memory_ptr_$attached_to$_t_struct$_buffer_$1109_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$1109_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2378,"nodeType":"ExpressionStatement","src":"7355:66:13"}]},"id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"writeContentFree","nameLocation":"7279:16:13","nodeType":"FunctionDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"buf","nameLocation":"7314:3:13","nodeType":"VariableDeclaration","scope":2380,"src":"7296:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2357,"nodeType":"UserDefinedTypeName","pathNode":{"id":2356,"name":"CBORBuffer","nameLocations":["7296:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"7296:10:13"},"referencedDeclaration":1536,"src":"7296:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1536_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2360,"mutability":"mutable","name":"value","nameLocation":"7325:5:13","nodeType":"VariableDeclaration","scope":2380,"src":"7319:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2359,"name":"uint8","nodeType":"ElementaryTypeName","src":"7319:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"7295:36:13"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[],"src":"7345:0:13"},"scope":2381,"src":"7270:158:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2382,"src":"666:6764:13","usedErrors":[],"usedEvents":[]}],"src":"32:7398:13"},"id":13},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","exportedSymbols":{"ConfirmedOwner":[875],"IVRFCoordinatorV2Plus":[2562],"IVRFMigratableConsumerV2Plus":[2576],"VRFConsumerBaseV2Plus":[2544]},"id":2545,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2383,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","file":"./interfaces/IVRFCoordinatorV2Plus.sol","id":2385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2545,"sourceUnit":2563,"src":"57:77:14","symbolAliases":[{"foreign":{"id":2384,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"65:21:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol","file":"./interfaces/IVRFMigratableConsumerV2Plus.sol","id":2387,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2545,"sourceUnit":2577,"src":"135:91:14","symbolAliases":[{"foreign":{"id":2386,"name":"IVRFMigratableConsumerV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"143:28:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"../../shared/access/ConfirmedOwner.sol","id":2389,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2545,"sourceUnit":876,"src":"227:70:14","symbolAliases":[{"foreign":{"id":2388,"name":"ConfirmedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"235:14:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2391,"name":"IVRFMigratableConsumerV2Plus","nameLocations":["5712:28:14"],"nodeType":"IdentifierPath","referencedDeclaration":2576,"src":"5712:28:14"},"id":2392,"nodeType":"InheritanceSpecifier","src":"5712:28:14"},{"baseName":{"id":2393,"name":"ConfirmedOwner","nameLocations":["5742:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"5742:14:14"},"id":2394,"nodeType":"InheritanceSpecifier","src":"5742:14:14"}],"canonicalName":"VRFConsumerBaseV2Plus","contractDependencies":[],"contractKind":"contract","documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"299:5369:14","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create a subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords, extraArgs),\n @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":2544,"linearizedBaseContracts":[2544,875,1038,1100,2576],"name":"VRFConsumerBaseV2Plus","nameLocation":"5687:21:14","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":2400,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5767:25:14","nodeType":"ErrorDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"have","nameLocation":"5801:4:14","nodeType":"VariableDeclaration","scope":2400,"src":"5793:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2395,"name":"address","nodeType":"ElementaryTypeName","src":"5793:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"want","nameLocation":"5815:4:14","nodeType":"VariableDeclaration","scope":2400,"src":"5807:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"5807:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5792:28:14"},"src":"5761:60:14"},{"errorSelector":"061db9c1","id":2408,"name":"OnlyOwnerOrCoordinator","nameLocation":"5830:22:14","nodeType":"ErrorDefinition","parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"have","nameLocation":"5861:4:14","nodeType":"VariableDeclaration","scope":2408,"src":"5853:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"5853:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"owner","nameLocation":"5875:5:14","nodeType":"VariableDeclaration","scope":2408,"src":"5867:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2403,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"coordinator","nameLocation":"5890:11:14","nodeType":"VariableDeclaration","scope":2408,"src":"5882:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2405,"name":"address","nodeType":"ElementaryTypeName","src":"5882:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5852:50:14"},"src":"5824:79:14"},{"errorSelector":"d92e233d","id":2410,"name":"ZeroAddress","nameLocation":"5912:11:14","nodeType":"ErrorDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[],"src":"5923:2:14"},"src":"5906:20:14"},{"constant":false,"functionSelector":"9eccacf6","id":2413,"mutability":"mutable","name":"s_vrfCoordinator","nameLocation":"6106:16:14","nodeType":"VariableDeclaration","scope":2544,"src":"6077:45:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"},"typeName":{"id":2412,"nodeType":"UserDefinedTypeName","pathNode":{"id":2411,"name":"IVRFCoordinatorV2Plus","nameLocations":["6077:21:14"],"nodeType":"IdentifierPath","referencedDeclaration":2562,"src":"6077:21:14"},"referencedDeclaration":2562,"src":"6077:21:14","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}},"visibility":"public"},{"body":{"id":2440,"nodeType":"Block","src":"6266:143:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2423,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"6276:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6303:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6295:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2424,"name":"address","nodeType":"ElementaryTypeName","src":"6295:7:14","typeDescriptions":{}}},"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6276:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2433,"nodeType":"IfStatement","src":"6272:70:14","trueBody":{"id":2432,"nodeType":"Block","src":"6307:35:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2429,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"6322:11:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2431,"nodeType":"RevertStatement","src":"6315:20:14"}]}},{"expression":{"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2434,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"6347:16:14","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2436,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"6388:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2435,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6366:21:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVRFCoordinatorV2Plus_$2562_$","typeString":"type(contract IVRFCoordinatorV2Plus)"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6366:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}},"src":"6347:57:14","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}},"id":2439,"nodeType":"ExpressionStatement","src":"6347:57:14"}]},"documentation":{"id":2414,"nodeType":"StructuredDocumentation","src":"6127:72:14","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":2441,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6254:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6258:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6254:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2421,"kind":"baseConstructorSpecifier","modifierName":{"id":2418,"name":"ConfirmedOwner","nameLocations":["6239:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"6239:14:14"},"nodeType":"ModifierInvocation","src":"6239:26:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"6222:15:14","nodeType":"VariableDeclaration","scope":2441,"src":"6214:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2415,"name":"address","nodeType":"ElementaryTypeName","src":"6214:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6213:25:14"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[],"src":"6266:0:14"},"scope":2544,"src":"6202:207:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":2442,"nodeType":"StructuredDocumentation","src":"6413:690:14","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":2450,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"7207:18:14","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"requestId","nameLocation":"7234:9:14","nodeType":"VariableDeclaration","scope":2450,"src":"7226:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"7226:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"randomWords","nameLocation":"7264:11:14","nodeType":"VariableDeclaration","scope":2450,"src":"7245:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"7245:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2446,"nodeType":"ArrayTypeName","src":"7245:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7225:51:14"},"returnParameters":{"id":2449,"nodeType":"ParameterList","parameters":[],"src":"7293:0:14"},"scope":2544,"src":"7198:96:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2481,"nodeType":"Block","src":"7580:189:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2458,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7590:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7594:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7590:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2462,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"7612:16:14","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7604:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"7604:7:14","typeDescriptions":{}}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7604:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7590:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"nodeType":"IfStatement","src":"7586:131:14","trueBody":{"id":2474,"nodeType":"Block","src":"7631:86:14","statements":[{"errorCall":{"arguments":[{"expression":{"id":2466,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7672:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7676:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7672:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2470,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"7692:16:14","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7684:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2468,"name":"address","nodeType":"ElementaryTypeName","src":"7684:7:14","typeDescriptions":{}}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7684:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2465,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"7646:25:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7646:64:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2473,"nodeType":"RevertStatement","src":"7639:71:14"}]}},{"expression":{"arguments":[{"id":2477,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"7741:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2478,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"7752:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":2476,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"7722:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$","typeString":"function (uint256,uint256[] calldata)"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7722:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2480,"nodeType":"ExpressionStatement","src":"7722:42:14"}]},"functionSelector":"1fe543e3","id":2482,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"7498:21:14","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"requestId","nameLocation":"7528:9:14","nodeType":"VariableDeclaration","scope":2482,"src":"7520:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"7520:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"randomWords","nameLocation":"7558:11:14","nodeType":"VariableDeclaration","scope":2482,"src":"7539:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"7539:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2454,"nodeType":"ArrayTypeName","src":"7539:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7519:51:14"},"returnParameters":{"id":2457,"nodeType":"ParameterList","parameters":[],"src":"7580:0:14"},"scope":2544,"src":"7489:280:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2575],"body":{"id":2512,"nodeType":"Block","src":"7921:186:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"7931:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7958:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7950:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"7950:7:14","typeDescriptions":{}}},"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7950:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7931:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2501,"nodeType":"IfStatement","src":"7927:70:14","trueBody":{"id":2500,"nodeType":"Block","src":"7962:35:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2497,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"7977:11:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7977:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2499,"nodeType":"RevertStatement","src":"7970:20:14"}]}},{"expression":{"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2502,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"8002:16:14","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2504,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"8043:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2503,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"8021:21:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVRFCoordinatorV2Plus_$2562_$","typeString":"type(contract IVRFCoordinatorV2Plus)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}},"src":"8002:57:14","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}},"id":2507,"nodeType":"ExpressionStatement","src":"8002:57:14"},{"eventCall":{"arguments":[{"id":2509,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"8086:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2508,"name":"CoordinatorSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"8071:14:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8071:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2511,"nodeType":"EmitStatement","src":"8066:36:14"}]},"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"7773:55:14","text":" @inheritdoc IVRFMigratableConsumerV2Plus"},"functionSelector":"8ea98117","id":2513,"implemented":true,"kind":"function","modifiers":[{"id":2489,"kind":"modifierInvocation","modifierName":{"id":2488,"name":"onlyOwnerOrCoordinator","nameLocations":["7898:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":2543,"src":"7898:22:14"},"nodeType":"ModifierInvocation","src":"7898:22:14"}],"name":"setCoordinator","nameLocation":"7840:14:14","nodeType":"FunctionDefinition","overrides":{"id":2487,"nodeType":"OverrideSpecifier","overrides":[],"src":"7889:8:14"},"parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"7863:15:14","nodeType":"VariableDeclaration","scope":2513,"src":"7855:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"7855:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7854:25:14"},"returnParameters":{"id":2490,"nodeType":"ParameterList","parameters":[],"src":"7921:0:14"},"scope":2544,"src":"7831:276:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2542,"nodeType":"Block","src":"8145:179:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2515,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8155:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8159:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8155:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2517,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"8169:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8169:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8155:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2520,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8180:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8184:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8180:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2524,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"8202:16:14","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8194:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2522,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:14","typeDescriptions":{}}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8194:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8180:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8155:64:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2540,"nodeType":"IfStatement","src":"8151:162:14","trueBody":{"id":2539,"nodeType":"Block","src":"8221:92:14","statements":[{"errorCall":{"arguments":[{"expression":{"id":2529,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8259:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8263:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8259:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2531,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"8271:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8271:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2535,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"8288:16:14","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8280:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"8280:7:14","typeDescriptions":{}}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8280:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2528,"name":"OnlyOwnerOrCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8236:22:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) pure"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8236:70:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2538,"nodeType":"RevertStatement","src":"8229:77:14"}]}},{"id":2541,"nodeType":"PlaceholderStatement","src":"8318:1:14"}]},"id":2543,"name":"onlyOwnerOrCoordinator","nameLocation":"8120:22:14","nodeType":"ModifierDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[],"src":"8142:2:14"},"src":"8111:213:14","virtual":false,"visibility":"internal"}],"scope":2545,"src":"5669:2657:14","usedErrors":[2400,2408,2410],"usedEvents":[892,898,2569]}],"src":"32:8295:14"},"id":14},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","exportedSymbols":{"IVRFCoordinatorV2Plus":[2562],"IVRFSubscriptionV2Plus":[2665],"VRFV2PlusClient":[2707]},"id":2563,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2546,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:15"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"../libraries/VRFV2PlusClient.sol","id":2548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2563,"sourceUnit":2708,"src":"57:65:15","symbolAliases":[{"foreign":{"id":2547,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"65:15:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","file":"./IVRFSubscriptionV2Plus.sol","id":2550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2563,"sourceUnit":2666,"src":"123:68:15","symbolAliases":[{"foreign":{"id":2549,"name":"IVRFSubscriptionV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"131:22:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2551,"name":"IVRFSubscriptionV2Plus","nameLocations":["398:22:15"],"nodeType":"IdentifierPath","referencedDeclaration":2665,"src":"398:22:15"},"id":2552,"nodeType":"InheritanceSpecifier","src":"398:22:15"}],"canonicalName":"IVRFCoordinatorV2Plus","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2562,"linearizedBaseContracts":[2562,2665],"name":"IVRFCoordinatorV2Plus","nameLocation":"373:21:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"425:1588:15","text":" @notice Request a set of random words.\n @param req - a struct containing following fields for randomness request:\n keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n requestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n extraArgs - abi-encoded extra args\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"9b1c385e","id":2561,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2025:18:15","nodeType":"FunctionDefinition","parameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"req","nameLocation":"2088:3:15","nodeType":"VariableDeclaration","scope":2561,"src":"2044:47:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2691_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"},"typeName":{"id":2555,"nodeType":"UserDefinedTypeName","pathNode":{"id":2554,"name":"VRFV2PlusClient.RandomWordsRequest","nameLocations":["2044:15:15","2060:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":2691,"src":"2044:34:15"},"referencedDeclaration":2691,"src":"2044:34:15","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2691_storage_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"}},"visibility":"internal"}],"src":"2043:49:15"},"returnParameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"requestId","nameLocation":"2119:9:15","nodeType":"VariableDeclaration","scope":2561,"src":"2111:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2110:19:15"},"scope":2562,"src":"2016:114:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2563,"src":"363:1769:15","usedErrors":[],"usedEvents":[]}],"src":"32:2101:15"},"id":15},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol","exportedSymbols":{"IVRFMigratableConsumerV2Plus":[2576]},"id":2577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2564,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IVRFMigratableConsumerV2Plus","contractDependencies":[],"contractKind":"interface","documentation":{"id":2565,"nodeType":"StructuredDocumentation","src":"57:211:16","text":"@notice The IVRFMigratableConsumerV2Plus interface defines the\n @notice method required to be implemented by all V2Plus consumers.\n @dev This interface is designed to be used in VRFConsumerBaseV2Plus."},"fullyImplemented":false,"id":2576,"linearizedBaseContracts":[2576],"name":"IVRFMigratableConsumerV2Plus","nameLocation":"278:28:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"d1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6","id":2569,"name":"CoordinatorSet","nameLocation":"317:14:16","nodeType":"EventDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"indexed":false,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"340:14:16","nodeType":"VariableDeclaration","scope":2569,"src":"332:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2566,"name":"address","nodeType":"ElementaryTypeName","src":"332:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"331:24:16"},"src":"311:45:16"},{"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"360:131:16","text":"@notice Sets the VRF Coordinator address\n @notice This method should only be callable by the coordinator or contract owner"},"functionSelector":"8ea98117","id":2575,"implemented":false,"kind":"function","modifiers":[],"name":"setCoordinator","nameLocation":"503:14:16","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"526:14:16","nodeType":"VariableDeclaration","scope":2575,"src":"518:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2571,"name":"address","nodeType":"ElementaryTypeName","src":"518:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"517:24:16"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[],"src":"550:0:16"},"scope":2576,"src":"494:57:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2577,"src":"268:285:16","usedErrors":[],"usedEvents":[2569]}],"src":"32:522:16"},"id":16},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","exportedSymbols":{"IVRFSubscriptionV2Plus":[2665]},"id":2666,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2578,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IVRFSubscriptionV2Plus","contractDependencies":[],"contractKind":"interface","documentation":{"id":2579,"nodeType":"StructuredDocumentation","src":"57:141:17","text":"@notice The IVRFSubscriptionV2Plus interface defines the subscription\n @notice related methods implemented by the V2Plus coordinator."},"fullyImplemented":false,"id":2665,"linearizedBaseContracts":[2665],"name":"IVRFSubscriptionV2Plus","nameLocation":"208:22:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"235:170:17","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"bec4c08c","id":2587,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"417:11:17","nodeType":"FunctionDefinition","parameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"subId","nameLocation":"437:5:17","nodeType":"VariableDeclaration","scope":2587,"src":"429:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"429:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"consumer","nameLocation":"452:8:17","nodeType":"VariableDeclaration","scope":2587,"src":"444:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2583,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"428:33:17"},"returnParameters":{"id":2586,"nodeType":"ParameterList","parameters":[],"src":"470:0:17"},"scope":2665,"src":"408:63:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2588,"nodeType":"StructuredDocumentation","src":"475:172:17","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"cb631797","id":2595,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"659:14:17","nodeType":"FunctionDefinition","parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"subId","nameLocation":"682:5:17","nodeType":"VariableDeclaration","scope":2595,"src":"674:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"consumer","nameLocation":"697:8:17","nodeType":"VariableDeclaration","scope":2595,"src":"689:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2591,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"673:33:17"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[],"src":"715:0:17"},"scope":2665,"src":"650:66:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"720:140:17","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"0ae09540","id":2603,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"872:18:17","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"subId","nameLocation":"899:5:17","nodeType":"VariableDeclaration","scope":2603,"src":"891:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"to","nameLocation":"914:2:17","nodeType":"VariableDeclaration","scope":2603,"src":"906:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"906:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:27:17"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[],"src":"926:0:17"},"scope":2665,"src":"863:64:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"931:211:17","text":" @notice Accept subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"b2a7cac5","id":2609,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"1154:31:17","nodeType":"FunctionDefinition","parameters":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"subId","nameLocation":"1194:5:17","nodeType":"VariableDeclaration","scope":2609,"src":"1186:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:15:17"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[],"src":"1209:0:17"},"scope":2665,"src":"1145:65:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"1214:164:17","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"dac83d29","id":2617,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"1390:32:17","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"subId","nameLocation":"1431:5:17","nodeType":"VariableDeclaration","scope":2617,"src":"1423:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"newOwner","nameLocation":"1446:8:17","nodeType":"VariableDeclaration","scope":2617,"src":"1438:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2613,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1422:33:17"},"returnParameters":{"id":2616,"nodeType":"ParameterList","parameters":[],"src":"1464:0:17"},"scope":2665,"src":"1381:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"1469:613:17","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription with LINK, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));\n @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n @dev  to send Native with the call, for example:\n @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);"},"functionSelector":"a21a23e4","id":2623,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2094:18:17","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[],"src":"2112:2:17"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"subId","nameLocation":"2141:5:17","nodeType":"VariableDeclaration","scope":2623,"src":"2133:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:15:17"},"scope":2665,"src":"2085:63:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2624,"nodeType":"StructuredDocumentation","src":"2152:422:17","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return nativeBalance - native balance of the subscription in wei.\n @return reqCount - Requests count of subscription.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"dc311dd3","id":2640,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"2586:15:17","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"subId","nameLocation":"2615:5:17","nodeType":"VariableDeclaration","scope":2640,"src":"2607:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2601:23:17"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"balance","nameLocation":"2667:7:17","nodeType":"VariableDeclaration","scope":2640,"src":"2660:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2628,"name":"uint96","nodeType":"ElementaryTypeName","src":"2660:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2631,"mutability":"mutable","name":"nativeBalance","nameLocation":"2683:13:17","nodeType":"VariableDeclaration","scope":2640,"src":"2676:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2630,"name":"uint96","nodeType":"ElementaryTypeName","src":"2676:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2633,"mutability":"mutable","name":"reqCount","nameLocation":"2705:8:17","nodeType":"VariableDeclaration","scope":2640,"src":"2698:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2632,"name":"uint64","nodeType":"ElementaryTypeName","src":"2698:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2635,"mutability":"mutable","name":"owner","nameLocation":"2723:5:17","nodeType":"VariableDeclaration","scope":2640,"src":"2715:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2634,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2638,"mutability":"mutable","name":"consumers","nameLocation":"2747:9:17","nodeType":"VariableDeclaration","scope":2640,"src":"2730:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"2730:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2637,"nodeType":"ArrayTypeName","src":"2730:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2659:98:17"},"scope":2665,"src":"2577:181:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"41af6c87","id":2647,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"3063:20:17","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"subId","nameLocation":"3092:5:17","nodeType":"VariableDeclaration","scope":2647,"src":"3084:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:15:17"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2647,"src":"3122:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2644,"name":"bool","nodeType":"ElementaryTypeName","src":"3122:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3121:6:17"},"scope":2665,"src":"3054:74:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2648,"nodeType":"StructuredDocumentation","src":"3132:427:17","text":" @notice Paginate through all active VRF subscriptions.\n @param startIndex index of the subscription to start from\n @param maxCount maximum number of subscriptions to return, 0 to return all\n @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state"},"functionSelector":"aefb212f","id":2658,"implemented":false,"kind":"function","modifiers":[],"name":"getActiveSubscriptionIds","nameLocation":"3571:24:17","nodeType":"FunctionDefinition","parameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"startIndex","nameLocation":"3604:10:17","nodeType":"VariableDeclaration","scope":2658,"src":"3596:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"maxCount","nameLocation":"3624:8:17","nodeType":"VariableDeclaration","scope":2658,"src":"3616:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"3616:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3595:38:17"},"returnParameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2658,"src":"3657:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2655,"nodeType":"ArrayTypeName","src":"3657:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3656:18:17"},"scope":2665,"src":"3562:113:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2659,"nodeType":"StructuredDocumentation","src":"3679:175:17","text":" @notice Fund a subscription with native.\n @param subId - ID of the subscription\n @notice This method expects msg.value to be greater than or equal to 0."},"functionSelector":"95b55cfc","id":2664,"implemented":false,"kind":"function","modifiers":[],"name":"fundSubscriptionWithNative","nameLocation":"3866:26:17","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"subId","nameLocation":"3901:5:17","nodeType":"VariableDeclaration","scope":2664,"src":"3893:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3893:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3892:15:17"},"returnParameters":{"id":2663,"nodeType":"ParameterList","parameters":[],"src":"3924:0:17"},"scope":2665,"src":"3857:68:17","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2666,"src":"198:3729:17","usedErrors":[],"usedEvents":[]}],"src":"32:3896:17"},"id":17},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","exportedSymbols":{"VRFV2PlusClient":[2707]},"id":2708,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2667,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFV2PlusClient","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2707,"linearizedBaseContracts":[2707],"name":"VRFV2PlusClient","nameLocation":"90:15:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f7514ab4","id":2675,"mutability":"constant","name":"EXTRA_ARGS_V1_TAG","nameLocation":"184:17:18","nodeType":"VariableDeclaration","scope":2707,"src":"161:79:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2668,"name":"bytes4","nodeType":"ElementaryTypeName","src":"161:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"hexValue":"565246204578747261417267735631","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"221:17:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa","typeString":"literal_string \"VRF ExtraArgsV1\""},"value":"VRF ExtraArgsV1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa","typeString":"literal_string \"VRF ExtraArgsV1\""}],"id":2671,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"211:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"211:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"204:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2669,"name":"bytes4","nodeType":"ElementaryTypeName","src":"204:6:18","typeDescriptions":{}}},"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"204:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"public"},{"canonicalName":"VRFV2PlusClient.ExtraArgsV1","id":2678,"members":[{"constant":false,"id":2677,"mutability":"mutable","name":"nativePayment","nameLocation":"274:13:18","nodeType":"VariableDeclaration","scope":2678,"src":"269:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2676,"name":"bool","nodeType":"ElementaryTypeName","src":"269:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExtraArgsV1","nameLocation":"251:11:18","nodeType":"StructDefinition","scope":2707,"src":"244:48:18","visibility":"public"},{"canonicalName":"VRFV2PlusClient.RandomWordsRequest","id":2691,"members":[{"constant":false,"id":2680,"mutability":"mutable","name":"keyHash","nameLocation":"336:7:18","nodeType":"VariableDeclaration","scope":2691,"src":"328:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"328:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"subId","nameLocation":"357:5:18","nodeType":"VariableDeclaration","scope":2691,"src":"349:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"requestConfirmations","nameLocation":"375:20:18","nodeType":"VariableDeclaration","scope":2691,"src":"368:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2683,"name":"uint16","nodeType":"ElementaryTypeName","src":"368:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"408:16:18","nodeType":"VariableDeclaration","scope":2691,"src":"401:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2685,"name":"uint32","nodeType":"ElementaryTypeName","src":"401:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"numWords","nameLocation":"437:8:18","nodeType":"VariableDeclaration","scope":2691,"src":"430:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2687,"name":"uint32","nodeType":"ElementaryTypeName","src":"430:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2690,"mutability":"mutable","name":"extraArgs","nameLocation":"457:9:18","nodeType":"VariableDeclaration","scope":2691,"src":"451:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2689,"name":"bytes","nodeType":"ElementaryTypeName","src":"451:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"RandomWordsRequest","nameLocation":"303:18:18","nodeType":"StructDefinition","scope":2707,"src":"296:175:18","visibility":"public"},{"body":{"id":2705,"nodeType":"Block","src":"568:70:18","statements":[{"expression":{"arguments":[{"id":2701,"name":"EXTRA_ARGS_V1_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"604:17:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2702,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"623:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2678_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_ExtraArgsV1_$2678_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":2699,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"581:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"585:18:18","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"581:22:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"581:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2698,"id":2704,"nodeType":"Return","src":"574:59:18"}]},"id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"_argsToBytes","nameLocation":"484:12:18","nodeType":"FunctionDefinition","parameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"extraArgs","nameLocation":"516:9:18","nodeType":"VariableDeclaration","scope":2706,"src":"497:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2678_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"},"typeName":{"id":2693,"nodeType":"UserDefinedTypeName","pathNode":{"id":2692,"name":"ExtraArgsV1","nameLocations":["497:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2678,"src":"497:11:18"},"referencedDeclaration":2678,"src":"497:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2678_storage_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"}},"visibility":"internal"}],"src":"496:30:18"},"returnParameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"bts","nameLocation":"563:3:18","nodeType":"VariableDeclaration","scope":2706,"src":"550:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2696,"name":"bytes","nodeType":"ElementaryTypeName","src":"550:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"549:18:18"},"scope":2707,"src":"475:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2708,"src":"82:558:18","usedErrors":[],"usedEvents":[]}],"src":"32:609:18"},"id":18},"contracts/Groth16Verifier.sol":{"ast":{"absolutePath":"contracts/Groth16Verifier.sol","exportedSymbols":{"Groth16Verifier":[3094],"Pairing":[3473]},"id":3474,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2709,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Groth16Verifier","contractDependencies":[],"contractKind":"contract","documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"58:237:19","text":" @title Groth16Verifier\n @dev Basic Groth16 verifier contract for ZK proof verification\n This is a simplified implementation for development/testing purposes\n In production, this would be generated from the actual circuit"},"fullyImplemented":true,"id":3094,"linearizedBaseContracts":[3094],"name":"Groth16Verifier","nameLocation":"305:15:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2712,"libraryName":{"id":2711,"name":"Pairing","nameLocations":["333:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3473,"src":"333:7:19"},"nodeType":"UsingForDirective","src":"327:20:19"},{"canonicalName":"Groth16Verifier.VerifyingKey","id":2729,"members":[{"constant":false,"id":2715,"mutability":"mutable","name":"alpha","nameLocation":"403:5:19","nodeType":"VariableDeclaration","scope":2729,"src":"387:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":2714,"nodeType":"UserDefinedTypeName","pathNode":{"id":2713,"name":"Pairing.G1Point","nameLocations":["387:7:19","395:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"387:15:19"},"referencedDeclaration":3102,"src":"387:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"beta","nameLocation":"434:4:19","nodeType":"VariableDeclaration","scope":2729,"src":"418:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":2717,"nodeType":"UserDefinedTypeName","pathNode":{"id":2716,"name":"Pairing.G2Point","nameLocations":["418:7:19","426:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3111,"src":"418:15:19"},"referencedDeclaration":3111,"src":"418:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"gamma","nameLocation":"464:5:19","nodeType":"VariableDeclaration","scope":2729,"src":"448:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":2720,"nodeType":"UserDefinedTypeName","pathNode":{"id":2719,"name":"Pairing.G2Point","nameLocations":["448:7:19","456:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3111,"src":"448:15:19"},"referencedDeclaration":3111,"src":"448:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"delta","nameLocation":"495:5:19","nodeType":"VariableDeclaration","scope":2729,"src":"479:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":2723,"nodeType":"UserDefinedTypeName","pathNode":{"id":2722,"name":"Pairing.G2Point","nameLocations":["479:7:19","487:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3111,"src":"479:15:19"},"referencedDeclaration":3111,"src":"479:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"gamma_abc","nameLocation":"528:9:19","nodeType":"VariableDeclaration","scope":2729,"src":"510:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"},"typeName":{"baseType":{"id":2726,"nodeType":"UserDefinedTypeName","pathNode":{"id":2725,"name":"Pairing.G1Point","nameLocations":["510:7:19","518:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"510:15:19"},"referencedDeclaration":3102,"src":"510:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"id":2727,"nodeType":"ArrayTypeName","src":"510:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr","typeString":"struct Pairing.G1Point[]"}},"visibility":"internal"}],"name":"VerifyingKey","nameLocation":"364:12:19","nodeType":"StructDefinition","scope":3094,"src":"357:187:19","visibility":"public"},{"canonicalName":"Groth16Verifier.Proof","id":2739,"members":[{"constant":false,"id":2732,"mutability":"mutable","name":"a","nameLocation":"593:1:19","nodeType":"VariableDeclaration","scope":2739,"src":"577:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":2731,"nodeType":"UserDefinedTypeName","pathNode":{"id":2730,"name":"Pairing.G1Point","nameLocations":["577:7:19","585:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"577:15:19"},"referencedDeclaration":3102,"src":"577:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":2735,"mutability":"mutable","name":"b","nameLocation":"620:1:19","nodeType":"VariableDeclaration","scope":2739,"src":"604:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":2734,"nodeType":"UserDefinedTypeName","pathNode":{"id":2733,"name":"Pairing.G2Point","nameLocations":["604:7:19","612:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3111,"src":"604:15:19"},"referencedDeclaration":3111,"src":"604:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"c","nameLocation":"647:1:19","nodeType":"VariableDeclaration","scope":2739,"src":"631:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":2737,"nodeType":"UserDefinedTypeName","pathNode":{"id":2736,"name":"Pairing.G1Point","nameLocations":["631:7:19","639:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"631:15:19"},"referencedDeclaration":3102,"src":"631:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"name":"Proof","nameLocation":"561:5:19","nodeType":"StructDefinition","scope":3094,"src":"554:101:19","visibility":"public"},{"constant":false,"id":2742,"mutability":"mutable","name":"verifyingKey","nameLocation":"678:12:19","nodeType":"VariableDeclaration","scope":3094,"src":"665:25:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey"},"typeName":{"id":2741,"nodeType":"UserDefinedTypeName","pathNode":{"id":2740,"name":"VerifyingKey","nameLocations":["665:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2729,"src":"665:12:19"},"referencedDeclaration":2729,"src":"665:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage_ptr","typeString":"struct Groth16Verifier.VerifyingKey"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"1402ee164fc2b9c2885efd678edd97074e07a39452d23ac1a7dc75222a0d3582","id":2744,"name":"VerifyingKeyChanged","nameLocation":"707:19:19","nodeType":"EventDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[],"src":"726:2:19"},"src":"701:28:19"},{"body":{"id":2859,"nodeType":"Block","src":"753:2537:19","statements":[{"expression":{"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2747,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"763:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"776:5:19","memberName":"alpha","nodeType":"MemberAccess","referencedDeclaration":2715,"src":"763:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage","typeString":"struct Pairing.G1Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"307832643464396161376533303264396466343137343964353530373934396430356462656133336662623136633634336232326635393961326265366466326532","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"813:66:19","typeDescriptions":{"typeIdentifier":"t_rational_20491192805390485299153009773594534940189261866228447918068658471970481763042_by_1","typeString":"int_const 2049...(69 digits omitted)...3042"},"value":"0x2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e2"},{"hexValue":"307831346265646435303363333763656230363164386563363032303966653334356365383938333061313932333033303166303736636166663030346431393236","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"893:66:19","typeDescriptions":{"typeIdentifier":"t_rational_9383485363053290200918347156157836566562967994039712273449902621266178545958_by_1","typeString":"int_const 9383...(68 digits omitted)...5958"},"value":"0x14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d1926"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_20491192805390485299153009773594534940189261866228447918068658471970481763042_by_1","typeString":"int_const 2049...(69 digits omitted)...3042"},{"typeIdentifier":"t_rational_9383485363053290200918347156157836566562967994039712273449902621266178545958_by_1","typeString":"int_const 9383...(68 digits omitted)...5958"}],"expression":{"id":2750,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"784:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"792:7:19","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"784:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"784:185:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"763:206:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage","typeString":"struct Pairing.G1Point storage ref"}},"id":2756,"nodeType":"ExpressionStatement","src":"763:206:19"},{"expression":{"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2757,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"979:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"992:4:19","memberName":"beta","nodeType":"MemberAccess","referencedDeclaration":2718,"src":"979:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"components":[{"hexValue":"307830393637303332666362663737366431616663393835663838383737663138326433383438306136353366326465636161393739346362633362663330363063","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1029:66:19","typeDescriptions":{"typeIdentifier":"t_rational_4252822878758300859123897981450591353533073413197771768651442665752259397132_by_1","typeString":"int_const 4252...(68 digits omitted)...7132"},"value":"0x0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c"},{"hexValue":"307830653138373834376164346337393833373464306436373332626635303138343764643638626330653037313234316530323133626337666331336462376162","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1110:66:19","typeDescriptions":{"typeIdentifier":"t_rational_6375614351688725206403948262868962793625744043794305715222011528459656738731_by_1","typeString":"int_const 6375...(68 digits omitted)...8731"},"value":"0x0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab"}],"id":2764,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1028:149:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"components":[{"hexValue":"307833303463666264316530386137303461393966356538343764393366386333636161666464656334366237613064333739646136396134643131323334366137","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1192:66:19","typeDescriptions":{"typeIdentifier":"t_rational_21847035105528745403288232691147584728191162732299865338377159692350059136679_by_1","typeString":"int_const 2184...(69 digits omitted)...6679"},"value":"0x304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a7"},{"hexValue":"307831373339633162316134353761386337333133313233643234643266393139326638393662376336336565613035613964353766303635343761643063656338","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1273:66:19","typeDescriptions":{"typeIdentifier":"t_rational_10505242626370262277552901082094356697409835680220590971873171140371331206856_by_1","typeString":"int_const 1050...(69 digits omitted)...6856"},"value":"0x1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8"}],"id":2767,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1191:149:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":2760,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"999:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1007:7:19","memberName":"G2Point","nodeType":"MemberAccess","referencedDeclaration":3111,"src":"999:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G2Point_$3111_storage_ptr_$","typeString":"type(struct Pairing.G2Point storage pointer)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"999:351:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"979:371:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"}},"id":2770,"nodeType":"ExpressionStatement","src":"979:371:19"},{"expression":{"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2771,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"1360:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1373:5:19","memberName":"gamma","nodeType":"MemberAccess","referencedDeclaration":2721,"src":"1360:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"components":[{"hexValue":"307831393865393339333932306434383361373236306266623733316662356432356631616134393333333561396537313239376534383562376165663331326332","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1411:66:19","typeDescriptions":{"typeIdentifier":"t_rational_11559732032986387107991004021392285783925812861821192530917403151452391805634_by_1","typeString":"int_const 1155...(69 digits omitted)...5634"},"value":"0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2"},{"hexValue":"307831383030646565663132316631653736343236613030363635653563343437393637343332326434663735656461646434366465626435636439393266366564","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1492:66:19","typeDescriptions":{"typeIdentifier":"t_rational_10857046999023057135944570762232829481370756359578518086990519993285655852781_by_1","typeString":"int_const 1085...(69 digits omitted)...2781"},"value":"0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed"}],"id":2778,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1410:149:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"components":[{"hexValue":"307830393036383964303538356666303735656339653939616436393063333339356263346233313333373062333865663335356163646164636431323239373562","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1574:66:19","typeDescriptions":{"typeIdentifier":"t_rational_4082367875863433681332203403145435568316851327593401208105741076214120093531_by_1","typeString":"int_const 4082...(68 digits omitted)...3531"},"value":"0x090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b"},{"hexValue":"307831326338356561356462386336646562346161623731383038646362343038666533643165373639306334336433376234636536636330313636666137646161","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1655:66:19","typeDescriptions":{"typeIdentifier":"t_rational_8495653923123431417604973247489272438418190587263600148770280649306958101930_by_1","typeString":"int_const 8495...(68 digits omitted)...1930"},"value":"0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa"}],"id":2781,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1573:149:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":2774,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"1381:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:19","memberName":"G2Point","nodeType":"MemberAccess","referencedDeclaration":3111,"src":"1381:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G2Point_$3111_storage_ptr_$","typeString":"type(struct Pairing.G2Point storage pointer)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:351:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"1360:372:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"}},"id":2784,"nodeType":"ExpressionStatement","src":"1360:372:19"},{"expression":{"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2785,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"1742:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1755:5:19","memberName":"delta","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"1742:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"components":[{"hexValue":"307832363065303162323531663666316337653766663465353830373931646565386561353164383761333538653033386234656665333066616330393338336331","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1793:66:19","typeDescriptions":{"typeIdentifier":"t_rational_17212635814319756364507010169094758005397460366678210664966334781961899574209_by_1","typeString":"int_const 1721...(69 digits omitted)...4209"},"value":"0x260e01b251f6f1c7e7ff4e580791dee8ea51d87a358e038b4efe30fac09383c1"},{"hexValue":"307830313138633464356238333762636332626338396235623339386235393734653966353934343037336233323037386237653233316665633933383838336230","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:66:19","typeDescriptions":{"typeIdentifier":"t_rational_496075682290949347282619629729389528669750910289829251317610107342504362928_by_1","typeString":"int_const 4960...(67 digits omitted)...2928"},"value":"0x0118c4d5b837bcc2bc89b5b398b5974e9f5944073b32078b7e231fec938883b0"}],"id":2792,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1792:149:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"components":[{"hexValue":"307830346663363336396637313130666533643235313536633162623961373238353963663261303436343166393962613465653431336338306461366135666534","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1956:66:19","typeDescriptions":{"typeIdentifier":"t_rational_2255182984359105691812395885056400739448730162863181907784180250290003009508_by_1","typeString":"int_const 2255...(68 digits omitted)...9508"},"value":"0x04fc6369f7110fe3d25156c1bb9a72859cf2a04641f99ba4ee413c80da6a5fe4"},{"hexValue":"307832326665626461336330633036333261353634373562343231346535363135653131653664643366393665366365613238353461383764346461636335653535","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2037:66:19","typeDescriptions":{"typeIdentifier":"t_rational_15828724851114720558251891430452666121603726704878231219287131634746610441813_by_1","typeString":"int_const 1582...(69 digits omitted)...1813"},"value":"0x22febda3c0c0632a56475b4214e5615e11e6dd3f96e6cea2854a87d4dacc5e55"}],"id":2795,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1955:149:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":2788,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"1763:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:7:19","memberName":"G2Point","nodeType":"MemberAccess","referencedDeclaration":3111,"src":"1763:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G2Point_$3111_storage_ptr_$","typeString":"type(struct Pairing.G2Point storage pointer)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1763:351:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"1742:372:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"}},"id":2798,"nodeType":"ExpressionStatement","src":"1742:372:19"},{"expression":{"arguments":[{"arguments":[{"hexValue":"307831663339663635646334386331316532396139623838663262383562333562663465643165336239356234613566316138643265336634613562366337643865","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2246:66:19","typeDescriptions":{"typeIdentifier":"t_rational_14124108946348807036966668483527143469528254619034038103219627608710922927502_by_1","typeString":"int_const 1412...(69 digits omitted)...7502"},"value":"0x1f39f65dc48c11e29a9b88f2b85b35bf4ed1e3b95b4a5f1a8d2e3f4a5b6c7d8e"},{"hexValue":"307832613462356336643765386639613062316332643365346635613662376338643965306631613262336334643565366637613862396330643165326633613462","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2326:66:19","typeDescriptions":{"typeIdentifier":"t_rational_19130291082982081664046808729433613028535215659694560280173851966977002650187_by_1","typeString":"int_const 1913...(69 digits omitted)...0187"},"value":"0x2a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14124108946348807036966668483527143469528254619034038103219627608710922927502_by_1","typeString":"int_const 1412...(69 digits omitted)...7502"},{"typeIdentifier":"t_rational_19130291082982081664046808729433613028535215659694560280173851966977002650187_by_1","typeString":"int_const 1913...(69 digits omitted)...0187"}],"expression":{"id":2804,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2217:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2225:7:19","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"2217:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:185:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}],"expression":{"expression":{"id":2799,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"2189:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2202:9:19","memberName":"gamma_abc","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"2189:22:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage","typeString":"struct Pairing.G1Point storage ref[] storage ref"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2212:4:19","memberName":"push","nodeType":"MemberAccess","src":"2189:27:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr_$_t_struct$_G1Point_$3102_storage_$returns$__$attached_to$_t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr_$","typeString":"function (struct Pairing.G1Point storage ref[] storage pointer,struct Pairing.G1Point storage ref)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2189:214:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2810,"nodeType":"ExpressionStatement","src":"2189:214:19"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30783563376438653966306131623263336434653566366137623863396430653166326133623463356436653766386139623063316432653366346135623663","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:64:19","typeDescriptions":{"typeIdentifier":"t_rational_163416493314198715902732870084186383986780513586904325345567379130667391852_by_1","typeString":"int_const 1634...(67 digits omitted)...1852"},"value":"0x5c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c"},{"hexValue":"30783764386539663061316232633364346535663661376238633964306531663261336234633564366537663861396230633164326533663461356236633764","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2548:64:19","typeDescriptions":{"typeIdentifier":"t_rational_221840218774363540753792004054497415846910739032929586785179804607071349885_by_1","typeString":"int_const 2218...(67 digits omitted)...9885"},"value":"0x7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_163416493314198715902732870084186383986780513586904325345567379130667391852_by_1","typeString":"int_const 1634...(67 digits omitted)...1852"},{"typeIdentifier":"t_rational_221840218774363540753792004054497415846910739032929586785179804607071349885_by_1","typeString":"int_const 2218...(67 digits omitted)...9885"}],"expression":{"id":2816,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2441:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2449:7:19","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"2441:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2441:181:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}],"expression":{"expression":{"id":2811,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"2413:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2426:9:19","memberName":"gamma_abc","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"2413:22:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage","typeString":"struct Pairing.G1Point storage ref[] storage ref"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2436:4:19","memberName":"push","nodeType":"MemberAccess","src":"2413:27:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr_$_t_struct$_G1Point_$3102_storage_$returns$__$attached_to$_t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr_$","typeString":"function (struct Pairing.G1Point storage ref[] storage pointer,struct Pairing.G1Point storage ref)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2413:210:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2822,"nodeType":"ExpressionStatement","src":"2413:210:19"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30783966306131623263336434653566366137623863396430653166326133623463356436653766386139623063316432653366346135623663376438653966","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2690:64:19","typeDescriptions":{"typeIdentifier":"t_rational_280998433340751745127620882547589397033415437780394255709045110497467010719_by_1","typeString":"int_const 2809...(67 digits omitted)...0719"},"value":"0x9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f"},{"hexValue":"30783161326233633464356536663761386239633064316532663361346235633664376538663961306231633264336534663561366237633864396530663161","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2768:64:19","typeDescriptions":{"typeIdentifier":"t_rational_46236424521844970778906114769567236728248788969989475697891500965381410586_by_1","typeString":"int_const 4623...(66 digits omitted)...0586"},"value":"0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_280998433340751745127620882547589397033415437780394255709045110497467010719_by_1","typeString":"int_const 2809...(67 digits omitted)...0719"},{"typeIdentifier":"t_rational_46236424521844970778906114769567236728248788969989475697891500965381410586_by_1","typeString":"int_const 4623...(66 digits omitted)...0586"}],"expression":{"id":2828,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2661:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2669:7:19","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"2661:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2661:181:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}],"expression":{"expression":{"id":2823,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"2633:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2646:9:19","memberName":"gamma_abc","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"2633:22:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage","typeString":"struct Pairing.G1Point storage ref[] storage ref"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2656:4:19","memberName":"push","nodeType":"MemberAccess","src":"2633:27:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr_$_t_struct$_G1Point_$3102_storage_$returns$__$attached_to$_t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr_$","typeString":"function (struct Pairing.G1Point storage ref[] storage pointer,struct Pairing.G1Point storage ref)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:210:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2834,"nodeType":"ExpressionStatement","src":"2633:210:19"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30783362346335643665376638613962306331643265336634613562366337643865396630613162326333643465356636613762386339643065316632613362","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2910:64:19","typeDescriptions":{"typeIdentifier":"t_rational_104771028456140387236910147381173421885916402617377645159675736002599529019_by_1","typeString":"int_const 1047...(67 digits omitted)...9019"},"value":"0x3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b"},{"hexValue":"30783564366537663861396230633164326533663461356236633764386539663061316232633364346535663661376238633964306531663261336234633564","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2988:64:19","typeDescriptions":{"typeIdentifier":"t_rational_165079407632642451082667085540590728548739962056032407297607947138874690653_by_1","typeString":"int_const 1650...(67 digits omitted)...0653"},"value":"0x5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104771028456140387236910147381173421885916402617377645159675736002599529019_by_1","typeString":"int_const 1047...(67 digits omitted)...9019"},{"typeIdentifier":"t_rational_165079407632642451082667085540590728548739962056032407297607947138874690653_by_1","typeString":"int_const 1650...(67 digits omitted)...0653"}],"expression":{"id":2840,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2881:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2889:7:19","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"2881:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:181:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}],"expression":{"expression":{"id":2835,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"2853:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2866:9:19","memberName":"gamma_abc","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"2853:22:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage","typeString":"struct Pairing.G1Point storage ref[] storage ref"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2876:4:19","memberName":"push","nodeType":"MemberAccess","src":"2853:27:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr_$_t_struct$_G1Point_$3102_storage_$returns$__$attached_to$_t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr_$","typeString":"function (struct Pairing.G1Point storage ref[] storage pointer,struct Pairing.G1Point storage ref)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2853:210:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2846,"nodeType":"ExpressionStatement","src":"2853:210:19"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30783766386139623063316432653366346135623663376438653966306131623263336434653566366137623863396430653166326133623463356436653766","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3130:64:19","typeDescriptions":{"typeIdentifier":"t_rational_225346198290197040502854559257970410411632863549959125774680328970497257087_by_1","typeString":"int_const 2253...(67 digits omitted)...7087"},"value":"0x7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f"},{"hexValue":"30783961306231633264336534663561366237633864396530663161326233633464356536663761386239633064316532663361346235633664376538663961","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3208:64:19","typeDescriptions":{"typeIdentifier":"t_rational_272171126828878524579170779968757369589980990851081340081465598739191074714_by_1","typeString":"int_const 2721...(67 digits omitted)...4714"},"value":"0x9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_225346198290197040502854559257970410411632863549959125774680328970497257087_by_1","typeString":"int_const 2253...(67 digits omitted)...7087"},{"typeIdentifier":"t_rational_272171126828878524579170779968757369589980990851081340081465598739191074714_by_1","typeString":"int_const 2721...(67 digits omitted)...4714"}],"expression":{"id":2852,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3101:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3109:7:19","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"3101:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3101:181:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}],"expression":{"expression":{"id":2847,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"3073:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3086:9:19","memberName":"gamma_abc","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"3073:22:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage","typeString":"struct Pairing.G1Point storage ref[] storage ref"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3096:4:19","memberName":"push","nodeType":"MemberAccess","src":"3073:27:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr_$_t_struct$_G1Point_$3102_storage_$returns$__$attached_to$_t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage_ptr_$","typeString":"function (struct Pairing.G1Point storage ref[] storage pointer,struct Pairing.G1Point storage ref)"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3073:210:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2858,"nodeType":"ExpressionStatement","src":"3073:210:19"}]},"id":2860,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2745,"nodeType":"ParameterList","parameters":[],"src":"750:2:19"},"returnParameters":{"id":2746,"nodeType":"ParameterList","parameters":[],"src":"753:0:19"},"scope":3094,"src":"739:2551:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2969,"nodeType":"Block","src":"3411:798:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2871,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"3425:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3431:6:19","memberName":"length","nodeType":"MemberAccess","src":"3425:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3440:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3425:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2875,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"3445:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3458:9:19","memberName":"gamma_abc","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"3445:22:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage","typeString":"struct Pairing.G1Point storage ref[] storage ref"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3468:6:19","memberName":"length","nodeType":"MemberAccess","src":"3445:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3425:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2882,"nodeType":"IfStatement","src":"3421:92:19","trueBody":{"id":2881,"nodeType":"Block","src":"3476:37:19","statements":[{"expression":{"hexValue":"66616c7365","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3497:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2870,"id":2880,"nodeType":"Return","src":"3490:12:19"}]}},{"assignments":[2887],"declarations":[{"constant":false,"id":2887,"mutability":"mutable","name":"vk_x","nameLocation":"3601:4:19","nodeType":"VariableDeclaration","scope":2969,"src":"3578:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":2886,"nodeType":"UserDefinedTypeName","pathNode":{"id":2885,"name":"Pairing.G1Point","nameLocations":["3578:7:19","3586:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"3578:15:19"},"referencedDeclaration":3102,"src":"3578:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"id":2893,"initialValue":{"arguments":[{"hexValue":"30","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3624:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3627:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":2888,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3608:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3616:7:19","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"3608:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3608:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"VariableDeclarationStatement","src":"3578:51:19"},{"body":{"id":2934,"nodeType":"Block","src":"3679:183:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2906,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"3701:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2908,"indexExpression":{"id":2907,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3707:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3701:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2909,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3712:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3720:7:19","memberName":"PRIME_Q","nodeType":"MemberAccess","referencedDeclaration":3097,"src":"3712:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3701:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e70757420746f6f206c61726765","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3729:17:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8","typeString":"literal_string \"Input too large\""},"value":"Input too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8","typeString":"literal_string \"Input too large\""}],"id":2905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3693:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3693:54:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2914,"nodeType":"ExpressionStatement","src":"3693:54:19"},{"expression":{"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2915,"name":"vk_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"3761:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2918,"name":"vk_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"3785:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"arguments":[{"baseExpression":{"expression":{"id":2921,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"3810:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3823:9:19","memberName":"gamma_abc","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"3810:22:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage","typeString":"struct Pairing.G1Point storage ref[] storage ref"}},"id":2926,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2923,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3833:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3837:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3833:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3810:29:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage","typeString":"struct Pairing.G1Point storage ref"}},{"baseExpression":{"id":2927,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"3841:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2929,"indexExpression":{"id":2928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3847:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3841:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$3102_storage","typeString":"struct Pairing.G1Point storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2919,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3791:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3799:10:19","memberName":"scalar_mul","nodeType":"MemberAccess","referencedDeclaration":3283,"src":"3791:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_G1Point_$3102_memory_ptr_$_t_uint256_$returns$_t_struct$_G1Point_$3102_memory_ptr_$","typeString":"function (struct Pairing.G1Point memory,uint256) view returns (struct Pairing.G1Point memory)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3791:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}],"expression":{"id":2916,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3768:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3776:8:19","memberName":"addition","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"3768:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_G1Point_$3102_memory_ptr_$_t_struct$_G1Point_$3102_memory_ptr_$returns$_t_struct$_G1Point_$3102_memory_ptr_$","typeString":"function (struct Pairing.G1Point memory,struct Pairing.G1Point memory) view returns (struct Pairing.G1Point memory)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3768:83:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"3761:90:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":2933,"nodeType":"ExpressionStatement","src":"3761:90:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3656:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2899,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"3660:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3666:6:19","memberName":"length","nodeType":"MemberAccess","src":"3660:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3656:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2935,"initializationExpression":{"assignments":[2895],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"i","nameLocation":"3649:1:19","nodeType":"VariableDeclaration","scope":2935,"src":"3644:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint","nodeType":"ElementaryTypeName","src":"3644:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2897,"initialValue":{"hexValue":"30","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3653:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3644:10:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3674:3:19","subExpression":{"id":2902,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"3674:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2904,"nodeType":"ExpressionStatement","src":"3674:3:19"},"nodeType":"ForStatement","src":"3639:223:19"},{"expression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2936,"name":"vk_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"3871:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2939,"name":"vk_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"3895:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"baseExpression":{"expression":{"id":2940,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"3901:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:19","memberName":"gamma_abc","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"3901:22:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_storage_$dyn_storage","typeString":"struct Pairing.G1Point storage ref[] storage ref"}},"id":2943,"indexExpression":{"hexValue":"30","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3924:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:25:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage","typeString":"struct Pairing.G1Point storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_struct$_G1Point_$3102_storage","typeString":"struct Pairing.G1Point storage ref"}],"expression":{"id":2937,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3878:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3886:8:19","memberName":"addition","nodeType":"MemberAccess","referencedDeclaration":3235,"src":"3878:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_G1Point_$3102_memory_ptr_$_t_struct$_G1Point_$3102_memory_ptr_$returns$_t_struct$_G1Point_$3102_memory_ptr_$","typeString":"function (struct Pairing.G1Point memory,struct Pairing.G1Point memory) view returns (struct Pairing.G1Point memory)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3878:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"3871:56:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":2946,"nodeType":"ExpressionStatement","src":"3871:56:19"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2951,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"3997:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2739_memory_ptr","typeString":"struct Groth16Verifier.Proof memory"}},"id":2952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4003:1:19","memberName":"a","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"3997:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}],"expression":{"id":2949,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3982:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3990:6:19","memberName":"negate","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"3982:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_G1Point_$3102_memory_ptr_$returns$_t_struct$_G1Point_$3102_memory_ptr_$","typeString":"function (struct Pairing.G1Point memory) pure returns (struct Pairing.G1Point memory)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3982:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"expression":{"id":2954,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"4019:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2739_memory_ptr","typeString":"struct Groth16Verifier.Proof memory"}},"id":2955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4025:1:19","memberName":"b","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"4019:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},{"expression":{"id":2956,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"4040:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4053:5:19","memberName":"alpha","nodeType":"MemberAccess","referencedDeclaration":2715,"src":"4040:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage","typeString":"struct Pairing.G1Point storage ref"}},{"expression":{"id":2958,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"4072:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4085:4:19","memberName":"beta","nodeType":"MemberAccess","referencedDeclaration":2718,"src":"4072:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"}},{"id":2960,"name":"vk_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"4103:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"expression":{"id":2961,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"4121:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4134:5:19","memberName":"gamma","nodeType":"MemberAccess","referencedDeclaration":2721,"src":"4121:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"}},{"expression":{"id":2963,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"4153:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2739_memory_ptr","typeString":"struct Groth16Verifier.Proof memory"}},"id":2964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4159:1:19","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"4153:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"expression":{"id":2965,"name":"verifyingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"4174:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_VerifyingKey_$2729_storage","typeString":"struct Groth16Verifier.VerifyingKey storage ref"}},"id":2966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4187:5:19","memberName":"delta","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"4174:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"},{"typeIdentifier":"t_struct$_G1Point_$3102_storage","typeString":"struct Pairing.G1Point storage ref"},{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"},{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"},{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"},{"typeIdentifier":"t_struct$_G2Point_$3111_storage","typeString":"struct Pairing.G2Point storage ref"}],"expression":{"id":2947,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3953:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3961:7:19","memberName":"pairing","nodeType":"MemberAccess","referencedDeclaration":3472,"src":"3953:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_G1Point_$3102_memory_ptr_$_t_struct$_G2Point_$3111_memory_ptr_$_t_struct$_G1Point_$3102_memory_ptr_$_t_struct$_G2Point_$3111_memory_ptr_$_t_struct$_G1Point_$3102_memory_ptr_$_t_struct$_G2Point_$3111_memory_ptr_$_t_struct$_G1Point_$3102_memory_ptr_$_t_struct$_G2Point_$3111_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Pairing.G1Point memory,struct Pairing.G2Point memory,struct Pairing.G1Point memory,struct Pairing.G2Point memory,struct Pairing.G1Point memory,struct Pairing.G2Point memory,struct Pairing.G1Point memory,struct Pairing.G2Point memory) view returns (bool)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3953:249:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2870,"id":2968,"nodeType":"Return","src":"3946:256:19"}]},"functionSelector":"c9417647","id":2970,"implemented":true,"kind":"function","modifiers":[],"name":"verifyTx","nameLocation":"3309:8:19","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"proof","nameLocation":"3340:5:19","nodeType":"VariableDeclaration","scope":2970,"src":"3327:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2739_memory_ptr","typeString":"struct Groth16Verifier.Proof"},"typeName":{"id":2862,"nodeType":"UserDefinedTypeName","pathNode":{"id":2861,"name":"Proof","nameLocations":["3327:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":2739,"src":"3327:5:19"},"referencedDeclaration":2739,"src":"3327:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2739_storage_ptr","typeString":"struct Groth16Verifier.Proof"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"input","nameLocation":"3372:5:19","nodeType":"VariableDeclaration","scope":2970,"src":"3355:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"3355:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2865,"nodeType":"ArrayTypeName","src":"3355:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3317:66:19"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2970,"src":"3405:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2868,"name":"bool","nodeType":"ElementaryTypeName","src":"3405:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3404:6:19"},"scope":3094,"src":"3300:909:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3092,"nodeType":"Block","src":"4383:426:19","statements":[{"assignments":[2994],"declarations":[{"constant":false,"id":2994,"mutability":"mutable","name":"proof","nameLocation":"4406:5:19","nodeType":"VariableDeclaration","scope":3092,"src":"4393:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2739_memory_ptr","typeString":"struct Groth16Verifier.Proof"},"typeName":{"id":2993,"nodeType":"UserDefinedTypeName","pathNode":{"id":2992,"name":"Proof","nameLocations":["4393:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":2739,"src":"4393:5:19"},"referencedDeclaration":2739,"src":"4393:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2739_storage_ptr","typeString":"struct Groth16Verifier.Proof"}},"visibility":"internal"}],"id":2995,"nodeType":"VariableDeclarationStatement","src":"4393:18:19"},{"expression":{"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2996,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"4421:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2739_memory_ptr","typeString":"struct Groth16Verifier.Proof memory"}},"id":2998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4427:1:19","memberName":"a","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"4421:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":3001,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"4447:1:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3003,"indexExpression":{"hexValue":"30","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4449:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4447:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"4453:1:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3006,"indexExpression":{"hexValue":"31","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4455:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4453:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2999,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"4431:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4439:7:19","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"4431:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"4421:37:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3009,"nodeType":"ExpressionStatement","src":"4421:37:19"},{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3010,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"4468:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2739_memory_ptr","typeString":"struct Groth16Verifier.Proof memory"}},"id":3012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4474:1:19","memberName":"b","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"4468:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"components":[{"baseExpression":{"baseExpression":{"id":3015,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"4495:1:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},"id":3017,"indexExpression":{"hexValue":"30","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4497:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4495:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3019,"indexExpression":{"hexValue":"30","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4500:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4495:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":3020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"4504:1:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},"id":3022,"indexExpression":{"hexValue":"30","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4506:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4504:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3024,"indexExpression":{"hexValue":"31","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4509:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4504:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3025,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4494:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"components":[{"baseExpression":{"baseExpression":{"id":3026,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"4515:1:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},"id":3028,"indexExpression":{"hexValue":"31","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4517:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4515:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3030,"indexExpression":{"hexValue":"30","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4520:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4515:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":3031,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"4524:1:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},"id":3033,"indexExpression":{"hexValue":"31","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4526:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4524:4:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3035,"indexExpression":{"hexValue":"31","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4529:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4524:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3036,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4514:18:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":3013,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"4478:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4486:7:19","memberName":"G2Point","nodeType":"MemberAccess","referencedDeclaration":3111,"src":"4478:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G2Point_$3111_storage_ptr_$","typeString":"type(struct Pairing.G2Point storage pointer)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4478:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"src":"4468:65:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":3039,"nodeType":"ExpressionStatement","src":"4468:65:19"},{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3040,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"4543:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2739_memory_ptr","typeString":"struct Groth16Verifier.Proof memory"}},"id":3042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4549:1:19","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"4543:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":3045,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"4569:1:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3047,"indexExpression":{"hexValue":"30","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4571:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4569:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3048,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"4575:1:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3050,"indexExpression":{"hexValue":"31","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4577:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4575:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3043,"name":"Pairing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"4553:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pairing_$3473_$","typeString":"type(library Pairing)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4561:7:19","memberName":"G1Point","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"4553:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"src":"4543:37:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3053,"nodeType":"ExpressionStatement","src":"4543:37:19"},{"assignments":[3058],"declarations":[{"constant":false,"id":3058,"mutability":"mutable","name":"inputValues","nameLocation":"4613:11:19","nodeType":"VariableDeclaration","scope":3092,"src":"4599:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3056,"name":"uint","nodeType":"ElementaryTypeName","src":"4599:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3057,"nodeType":"ArrayTypeName","src":"4599:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3065,"initialValue":{"arguments":[{"expression":{"id":3062,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4638:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4644:6:19","memberName":"length","nodeType":"MemberAccess","src":"4638:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4627:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3059,"name":"uint","nodeType":"ElementaryTypeName","src":"4631:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3060,"nodeType":"ArrayTypeName","src":"4631:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4627:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4599:52:19"},{"body":{"id":3085,"nodeType":"Block","src":"4699:50:19","statements":[{"expression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3077,"name":"inputValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"4713:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3079,"indexExpression":{"id":3078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"4725:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4713:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3080,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4730:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3082,"indexExpression":{"id":3081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"4736:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4730:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4713:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3084,"nodeType":"ExpressionStatement","src":"4713:25:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3070,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"4677:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3071,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4681:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4687:6:19","memberName":"length","nodeType":"MemberAccess","src":"4681:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4677:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3086,"initializationExpression":{"assignments":[3067],"declarations":[{"constant":false,"id":3067,"mutability":"mutable","name":"i","nameLocation":"4670:1:19","nodeType":"VariableDeclaration","scope":3086,"src":"4665:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3066,"name":"uint","nodeType":"ElementaryTypeName","src":"4665:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3069,"initialValue":{"hexValue":"30","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4674:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4665:10:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4695:3:19","subExpression":{"id":3074,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"4695:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3076,"nodeType":"ExpressionStatement","src":"4695:3:19"},"nodeType":"ForStatement","src":"4661:88:19"},{"expression":{"arguments":[{"id":3088,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"4783:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2739_memory_ptr","typeString":"struct Groth16Verifier.Proof memory"}},{"id":3089,"name":"inputValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"4790:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proof_$2739_memory_ptr","typeString":"struct Groth16Verifier.Proof memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3087,"name":"verifyTx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"4774:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Proof_$2739_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Groth16Verifier.Proof memory,uint256[] memory) view returns (bool)"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4774:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2991,"id":3091,"nodeType":"Return","src":"4767:35:19"}]},"functionSelector":"c32e370e","id":3093,"implemented":true,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"4228:11:19","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"a","nameLocation":"4264:1:19","nodeType":"VariableDeclaration","scope":3093,"src":"4249:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2971,"name":"uint","nodeType":"ElementaryTypeName","src":"4249:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2973,"length":{"hexValue":"32","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4254:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"4249:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"b","nameLocation":"4293:1:19","nodeType":"VariableDeclaration","scope":3093,"src":"4275:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":2975,"name":"uint","nodeType":"ElementaryTypeName","src":"4275:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2977,"length":{"hexValue":"32","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"4275:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":2979,"length":{"hexValue":"32","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4283:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"4275:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"c","nameLocation":"4319:1:19","nodeType":"VariableDeclaration","scope":3093,"src":"4304:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2981,"name":"uint","nodeType":"ElementaryTypeName","src":"4304:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2983,"length":{"hexValue":"32","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4309:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"4304:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2987,"mutability":"mutable","name":"input","nameLocation":"4344:5:19","nodeType":"VariableDeclaration","scope":3093,"src":"4330:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2985,"name":"uint","nodeType":"ElementaryTypeName","src":"4330:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2986,"nodeType":"ArrayTypeName","src":"4330:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4239:116:19"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3093,"src":"4377:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2989,"name":"bool","nodeType":"ElementaryTypeName","src":"4377:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4376:6:19"},"scope":3094,"src":"4219:590:19","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3474,"src":"296:4515:19","usedErrors":[],"usedEvents":[2744]},{"abstract":false,"baseContracts":[],"canonicalName":"Pairing","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3473,"linearizedBaseContracts":[3473],"name":"Pairing","nameLocation":"4821:7:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3097,"mutability":"constant","name":"PRIME_Q","nameLocation":"4852:7:19","nodeType":"VariableDeclaration","scope":3473,"src":"4835:104:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3095,"name":"uint256","nodeType":"ElementaryTypeName","src":"4835:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3231383838323432383731383339323735323232323436343035373435323537323735303838353438333634343030343136303334333433363938323034313836353735383038343935363137","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:77:19","typeDescriptions":{"typeIdentifier":"t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495617_by_1","typeString":"int_const 2188...(69 digits omitted)...5617"},"value":"21888242871839275222246405745257275088548364400416034343698204186575808495617"},"visibility":"internal"},{"canonicalName":"Pairing.G1Point","id":3102,"members":[{"constant":false,"id":3099,"mutability":"mutable","name":"x","nameLocation":"4979:1:19","nodeType":"VariableDeclaration","scope":3102,"src":"4971:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"4971:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"y","nameLocation":"4998:1:19","nodeType":"VariableDeclaration","scope":3102,"src":"4990:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"4990:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"G1Point","nameLocation":"4953:7:19","nodeType":"StructDefinition","scope":3473,"src":"4946:60:19","visibility":"public"},{"canonicalName":"Pairing.G2Point","id":3111,"members":[{"constant":false,"id":3106,"mutability":"mutable","name":"x","nameLocation":"5048:1:19","nodeType":"VariableDeclaration","scope":3111,"src":"5037:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"5037:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3105,"length":{"hexValue":"32","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5045:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"5037:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"y","nameLocation":"5070:1:19","nodeType":"VariableDeclaration","scope":3111,"src":"5059:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3107,"name":"uint256","nodeType":"ElementaryTypeName","src":"5059:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3109,"length":{"hexValue":"32","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5067:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"5059:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"name":"G2Point","nameLocation":"5019:7:19","nodeType":"StructDefinition","scope":3473,"src":"5012:66:19","visibility":"public"},{"body":{"id":3122,"nodeType":"Block","src":"5137:37:19","statements":[{"expression":{"arguments":[{"hexValue":"31","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5162:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"32","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5165:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":3117,"name":"G1Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"5154:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5154:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"functionReturnParameters":3116,"id":3121,"nodeType":"Return","src":"5147:20:19"}]},"id":3123,"implemented":true,"kind":"function","modifiers":[],"name":"P1","nameLocation":"5093:2:19","nodeType":"FunctionDefinition","parameters":{"id":3112,"nodeType":"ParameterList","parameters":[],"src":"5095:2:19"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3123,"src":"5121:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3114,"nodeType":"UserDefinedTypeName","pathNode":{"id":3113,"name":"G1Point","nameLocations":["5121:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"5121:7:19"},"referencedDeclaration":3102,"src":"5121:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"5120:16:19"},"scope":3473,"src":"5084:90:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3138,"nodeType":"Block","src":"5233:409:19","statements":[{"expression":{"arguments":[{"components":[{"hexValue":"3130383537303436393939303233303537313335393434353730373632323332383239343831333730373536333539353738353138303836393930353139393933323835363535383532373831","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5272:77:19","typeDescriptions":{"typeIdentifier":"t_rational_10857046999023057135944570762232829481370756359578518086990519993285655852781_by_1","typeString":"int_const 1085...(69 digits omitted)...2781"},"value":"10857046999023057135944570762232829481370756359578518086990519993285655852781"},{"hexValue":"3131353539373332303332393836333837313037393931303034303231333932323835373833393235383132383631383231313932353330393137343033313531343532333931383035363334","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5364:77:19","typeDescriptions":{"typeIdentifier":"t_rational_11559732032986387107991004021392285783925812861821192530917403151452391805634_by_1","typeString":"int_const 1155...(69 digits omitted)...5634"},"value":"11559732032986387107991004021392285783925812861821192530917403151452391805634"}],"id":3132,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5271:171:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"components":[{"hexValue":"38343935363533393233313233343331343137363034393733323437343839323732343338343138313930353837323633363030313438373730323830363439333036393538313031393330","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5457:76:19","typeDescriptions":{"typeIdentifier":"t_rational_8495653923123431417604973247489272438418190587263600148770280649306958101930_by_1","typeString":"int_const 8495...(68 digits omitted)...1930"},"value":"8495653923123431417604973247489272438418190587263600148770280649306958101930"},{"hexValue":"34303832333637383735383633343333363831333332323033343033313435343335353638333136383531333237353933343031323038313035373431303736323134313230303933353331","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5548:76:19","typeDescriptions":{"typeIdentifier":"t_rational_4082367875863433681332203403145435568316851327593401208105741076214120093531_by_1","typeString":"int_const 4082...(68 digits omitted)...3531"},"value":"4082367875863433681332203403145435568316851327593401208105741076214120093531"}],"id":3135,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5456:169:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":3129,"name":"G2Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"5250:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G2Point_$3111_storage_ptr_$","typeString":"type(struct Pairing.G2Point storage pointer)"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5250:385:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"functionReturnParameters":3128,"id":3137,"nodeType":"Return","src":"5243:392:19"}]},"id":3139,"implemented":true,"kind":"function","modifiers":[],"name":"P2","nameLocation":"5189:2:19","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[],"src":"5191:2:19"},"returnParameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3139,"src":"5217:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":3126,"nodeType":"UserDefinedTypeName","pathNode":{"id":3125,"name":"G2Point","nameLocations":["5217:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3111,"src":"5217:7:19"},"referencedDeclaration":3111,"src":"5217:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"}],"src":"5216:16:19"},"scope":3473,"src":"5180:462:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3177,"nodeType":"Block","src":"5721:164:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3148,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"5735:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5737:1:19","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"5735:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5742:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5735:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3152,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"5747:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5749:1:19","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":3101,"src":"5747:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5754:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5747:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5735:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3175,"nodeType":"Block","src":"5808:71:19","statements":[{"expression":{"arguments":[{"expression":{"id":3164,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"5837:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5839:1:19","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"5837:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3166,"name":"PRIME_Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"5842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3167,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"5853:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5855:1:19","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":3101,"src":"5853:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3169,"name":"PRIME_Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"5859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5853:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5852:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5842:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3163,"name":"G1Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"5829:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"functionReturnParameters":3147,"id":3174,"nodeType":"Return","src":"5822:46:19"}]},"id":3176,"nodeType":"IfStatement","src":"5731:148:19","trueBody":{"id":3162,"nodeType":"Block","src":"5757:45:19","statements":[{"expression":{"arguments":[{"hexValue":"30","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5786:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3157,"name":"G1Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"5778:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_G1Point_$3102_storage_ptr_$","typeString":"type(struct Pairing.G1Point storage pointer)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5778:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"functionReturnParameters":3147,"id":3161,"nodeType":"Return","src":"5771:20:19"}]}}]},"id":3178,"implemented":true,"kind":"function","modifiers":[],"name":"negate","nameLocation":"5657:6:19","nodeType":"FunctionDefinition","parameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"p","nameLocation":"5679:1:19","nodeType":"VariableDeclaration","scope":3178,"src":"5664:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3141,"nodeType":"UserDefinedTypeName","pathNode":{"id":3140,"name":"G1Point","nameLocations":["5664:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"5664:7:19"},"referencedDeclaration":3102,"src":"5664:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"5663:18:19"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3178,"src":"5705:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3145,"nodeType":"UserDefinedTypeName","pathNode":{"id":3144,"name":"G1Point","nameLocations":["5705:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"5705:7:19"},"referencedDeclaration":3102,"src":"5705:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"5704:16:19"},"scope":3473,"src":"5648:237:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3234,"nodeType":"Block","src":"5988:302:19","statements":[{"assignments":[3195],"declarations":[{"constant":false,"id":3195,"mutability":"mutable","name":"input","nameLocation":"6016:5:19","nodeType":"VariableDeclaration","scope":3234,"src":"5998:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4]"},"typeName":{"baseType":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5998:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3194,"length":{"hexValue":"34","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6006:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"5998:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_storage_ptr","typeString":"uint256[4]"}},"visibility":"internal"}],"id":3196,"nodeType":"VariableDeclarationStatement","src":"5998:23:19"},{"expression":{"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3197,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"6031:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":3199,"indexExpression":{"hexValue":"30","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6037:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6031:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3200,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"6042:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6045:1:19","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"6042:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6031:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3203,"nodeType":"ExpressionStatement","src":"6031:15:19"},{"expression":{"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3204,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"6056:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":3206,"indexExpression":{"hexValue":"31","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6062:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6056:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3207,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"6067:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6070:1:19","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":3101,"src":"6067:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6056:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3210,"nodeType":"ExpressionStatement","src":"6056:15:19"},{"expression":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3211,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"6081:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":3213,"indexExpression":{"hexValue":"32","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6087:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6081:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3214,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"6092:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6095:1:19","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"6092:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6081:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3217,"nodeType":"ExpressionStatement","src":"6081:15:19"},{"expression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3218,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"6106:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"id":3220,"indexExpression":{"hexValue":"33","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6112:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6106:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3221,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"6117:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6120:1:19","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":3101,"src":"6117:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6106:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3224,"nodeType":"ExpressionStatement","src":"6106:15:19"},{"assignments":[3226],"declarations":[{"constant":false,"id":3226,"mutability":"mutable","name":"success","nameLocation":"6136:7:19","nodeType":"VariableDeclaration","scope":3234,"src":"6131:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3225,"name":"bool","nodeType":"ElementaryTypeName","src":"6131:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3227,"nodeType":"VariableDeclarationStatement","src":"6131:12:19"},{"AST":{"nativeSrc":"6162:77:19","nodeType":"YulBlock","src":"6162:77:19","statements":[{"nativeSrc":"6176:53:19","nodeType":"YulAssignment","src":"6176:53:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"6198:3:19","nodeType":"YulIdentifier","src":"6198:3:19"},"nativeSrc":"6198:5:19","nodeType":"YulFunctionCall","src":"6198:5:19"},{"kind":"number","nativeSrc":"6205:1:19","nodeType":"YulLiteral","src":"6205:1:19","type":"","value":"6"},{"name":"input","nativeSrc":"6208:5:19","nodeType":"YulIdentifier","src":"6208:5:19"},{"kind":"number","nativeSrc":"6215:4:19","nodeType":"YulLiteral","src":"6215:4:19","type":"","value":"0x80"},{"name":"r","nativeSrc":"6221:1:19","nodeType":"YulIdentifier","src":"6221:1:19"},{"kind":"number","nativeSrc":"6224:4:19","nodeType":"YulLiteral","src":"6224:4:19","type":"","value":"0x40"}],"functionName":{"name":"staticcall","nativeSrc":"6187:10:19","nodeType":"YulIdentifier","src":"6187:10:19"},"nativeSrc":"6187:42:19","nodeType":"YulFunctionCall","src":"6187:42:19"},"variableNames":[{"name":"success","nativeSrc":"6176:7:19","nodeType":"YulIdentifier","src":"6176:7:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3195,"isOffset":false,"isSlot":false,"src":"6208:5:19","valueSize":1},{"declaration":3188,"isOffset":false,"isSlot":false,"src":"6221:1:19","valueSize":1},{"declaration":3226,"isOffset":false,"isSlot":false,"src":"6176:7:19","valueSize":1}],"id":3228,"nodeType":"InlineAssembly","src":"6153:86:19"},{"expression":{"arguments":[{"id":3230,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"6256:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4164646974696f6e206661696c6564","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6265:17:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d77f148dba1774775a2a81fdf26674712be4d2fc226ce3f4c01394ff1f6204f","typeString":"literal_string \"Addition failed\""},"value":"Addition failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d77f148dba1774775a2a81fdf26674712be4d2fc226ce3f4c01394ff1f6204f","typeString":"literal_string \"Addition failed\""}],"id":3229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6248:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6248:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3233,"nodeType":"ExpressionStatement","src":"6248:35:19"}]},"id":3235,"implemented":true,"kind":"function","modifiers":[],"name":"addition","nameLocation":"5900:8:19","nodeType":"FunctionDefinition","parameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"p1","nameLocation":"5924:2:19","nodeType":"VariableDeclaration","scope":3235,"src":"5909:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3180,"nodeType":"UserDefinedTypeName","pathNode":{"id":3179,"name":"G1Point","nameLocations":["5909:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"5909:7:19"},"referencedDeclaration":3102,"src":"5909:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"p2","nameLocation":"5943:2:19","nodeType":"VariableDeclaration","scope":3235,"src":"5928:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3183,"nodeType":"UserDefinedTypeName","pathNode":{"id":3182,"name":"G1Point","nameLocations":["5928:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"5928:7:19"},"referencedDeclaration":3102,"src":"5928:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"5908:38:19"},"returnParameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"r","nameLocation":"5985:1:19","nodeType":"VariableDeclaration","scope":3235,"src":"5970:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3187,"nodeType":"UserDefinedTypeName","pathNode":{"id":3186,"name":"G1Point","nameLocations":["5970:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"5970:7:19"},"referencedDeclaration":3102,"src":"5970:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"5969:18:19"},"scope":3473,"src":"5891:399:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3282,"nodeType":"Block","src":"6386:285:19","statements":[{"assignments":[3251],"declarations":[{"constant":false,"id":3251,"mutability":"mutable","name":"input","nameLocation":"6414:5:19","nodeType":"VariableDeclaration","scope":3282,"src":"6396:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"6396:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3250,"length":{"hexValue":"33","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6404:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"6396:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":3252,"nodeType":"VariableDeclarationStatement","src":"6396:23:19"},{"expression":{"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3253,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"6429:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":3255,"indexExpression":{"hexValue":"30","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6435:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6429:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3256,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"6440:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6442:1:19","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"6440:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6429:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3259,"nodeType":"ExpressionStatement","src":"6429:14:19"},{"expression":{"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3260,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"6453:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":3262,"indexExpression":{"hexValue":"31","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6459:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6453:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3263,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"6464:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6466:1:19","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":3101,"src":"6464:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6453:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3266,"nodeType":"ExpressionStatement","src":"6453:14:19"},{"expression":{"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3267,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"6477:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":3269,"indexExpression":{"hexValue":"32","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6483:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6477:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3270,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"6488:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6477:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3272,"nodeType":"ExpressionStatement","src":"6477:12:19"},{"assignments":[3274],"declarations":[{"constant":false,"id":3274,"mutability":"mutable","name":"success","nameLocation":"6504:7:19","nodeType":"VariableDeclaration","scope":3282,"src":"6499:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3273,"name":"bool","nodeType":"ElementaryTypeName","src":"6499:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3275,"nodeType":"VariableDeclarationStatement","src":"6499:12:19"},{"AST":{"nativeSrc":"6530:77:19","nodeType":"YulBlock","src":"6530:77:19","statements":[{"nativeSrc":"6544:53:19","nodeType":"YulAssignment","src":"6544:53:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"6566:3:19","nodeType":"YulIdentifier","src":"6566:3:19"},"nativeSrc":"6566:5:19","nodeType":"YulFunctionCall","src":"6566:5:19"},{"kind":"number","nativeSrc":"6573:1:19","nodeType":"YulLiteral","src":"6573:1:19","type":"","value":"7"},{"name":"input","nativeSrc":"6576:5:19","nodeType":"YulIdentifier","src":"6576:5:19"},{"kind":"number","nativeSrc":"6583:4:19","nodeType":"YulLiteral","src":"6583:4:19","type":"","value":"0x60"},{"name":"r","nativeSrc":"6589:1:19","nodeType":"YulIdentifier","src":"6589:1:19"},{"kind":"number","nativeSrc":"6592:4:19","nodeType":"YulLiteral","src":"6592:4:19","type":"","value":"0x40"}],"functionName":{"name":"staticcall","nativeSrc":"6555:10:19","nodeType":"YulIdentifier","src":"6555:10:19"},"nativeSrc":"6555:42:19","nodeType":"YulFunctionCall","src":"6555:42:19"},"variableNames":[{"name":"success","nativeSrc":"6544:7:19","nodeType":"YulIdentifier","src":"6544:7:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3251,"isOffset":false,"isSlot":false,"src":"6576:5:19","valueSize":1},{"declaration":3244,"isOffset":false,"isSlot":false,"src":"6589:1:19","valueSize":1},{"declaration":3274,"isOffset":false,"isSlot":false,"src":"6544:7:19","valueSize":1}],"id":3276,"nodeType":"InlineAssembly","src":"6521:86:19"},{"expression":{"arguments":[{"id":3278,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"6624:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5363616c6172206d756c7469706c69636174696f6e206661696c6564","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6633:30:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_aec8a284a78a201a84f98ad09ad278bdbe6b3c60587f7ec5cd66b29ea2ae8962","typeString":"literal_string \"Scalar multiplication failed\""},"value":"Scalar multiplication failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aec8a284a78a201a84f98ad09ad278bdbe6b3c60587f7ec5cd66b29ea2ae8962","typeString":"literal_string \"Scalar multiplication failed\""}],"id":3277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6616:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6616:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3281,"nodeType":"ExpressionStatement","src":"6616:48:19"}]},"id":3283,"implemented":true,"kind":"function","modifiers":[],"name":"scalar_mul","nameLocation":"6305:10:19","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"p","nameLocation":"6331:1:19","nodeType":"VariableDeclaration","scope":3283,"src":"6316:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3237,"nodeType":"UserDefinedTypeName","pathNode":{"id":3236,"name":"G1Point","nameLocations":["6316:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"6316:7:19"},"referencedDeclaration":3102,"src":"6316:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"s","nameLocation":"6342:1:19","nodeType":"VariableDeclaration","scope":3283,"src":"6334:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3239,"name":"uint256","nodeType":"ElementaryTypeName","src":"6334:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6315:29:19"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"r","nameLocation":"6383:1:19","nodeType":"VariableDeclaration","scope":3283,"src":"6368:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3243,"nodeType":"UserDefinedTypeName","pathNode":{"id":3242,"name":"G1Point","nameLocations":["6368:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"6368:7:19"},"referencedDeclaration":3102,"src":"6368:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"}],"src":"6367:18:19"},"scope":3473,"src":"6296:375:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3471,"nodeType":"Block","src":"6945:770:19","statements":[{"assignments":[3317],"declarations":[{"constant":false,"id":3317,"mutability":"mutable","name":"p1","nameLocation":"6973:2:19","nodeType":"VariableDeclaration","scope":3471,"src":"6955:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_memory_ptr_$4_memory_ptr","typeString":"struct Pairing.G1Point[4]"},"typeName":{"baseType":{"id":3315,"nodeType":"UserDefinedTypeName","pathNode":{"id":3314,"name":"G1Point","nameLocations":["6955:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"6955:7:19"},"referencedDeclaration":3102,"src":"6955:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"id":3316,"length":{"hexValue":"34","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6963:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"6955:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_storage_$4_storage_ptr","typeString":"struct Pairing.G1Point[4]"}},"visibility":"internal"}],"id":3323,"initialValue":{"components":[{"id":3318,"name":"a1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"6979:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"id":3319,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"6983:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"id":3320,"name":"c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"6987:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},{"id":3321,"name":"d1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"6991:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}}],"id":3322,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6978:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_memory_ptr_$4_memory_ptr","typeString":"struct Pairing.G1Point memory[4] memory"}},"nodeType":"VariableDeclarationStatement","src":"6955:39:19"},{"assignments":[3329],"declarations":[{"constant":false,"id":3329,"mutability":"mutable","name":"p2","nameLocation":"7022:2:19","nodeType":"VariableDeclaration","scope":3471,"src":"7004:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$3111_memory_ptr_$4_memory_ptr","typeString":"struct Pairing.G2Point[4]"},"typeName":{"baseType":{"id":3327,"nodeType":"UserDefinedTypeName","pathNode":{"id":3326,"name":"G2Point","nameLocations":["7004:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3111,"src":"7004:7:19"},"referencedDeclaration":3111,"src":"7004:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"}},"id":3328,"length":{"hexValue":"34","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7012:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"7004:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$3111_storage_$4_storage_ptr","typeString":"struct Pairing.G2Point[4]"}},"visibility":"internal"}],"id":3335,"initialValue":{"components":[{"id":3330,"name":"a2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"7028:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},{"id":3331,"name":"b2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"7032:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},{"id":3332,"name":"c2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"7036:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},{"id":3333,"name":"d2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"7040:2:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}}],"id":3334,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7027:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$3111_memory_ptr_$4_memory_ptr","typeString":"struct Pairing.G2Point memory[4] memory"}},"nodeType":"VariableDeclarationStatement","src":"7004:39:19"},{"assignments":[3337],"declarations":[{"constant":false,"id":3337,"mutability":"mutable","name":"inputSize","nameLocation":"7061:9:19","nodeType":"VariableDeclaration","scope":3471,"src":"7053:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"7053:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3339,"initialValue":{"hexValue":"3234","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7073:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"VariableDeclarationStatement","src":"7053:22:19"},{"assignments":[3344],"declarations":[{"constant":false,"id":3344,"mutability":"mutable","name":"input","nameLocation":"7102:5:19","nodeType":"VariableDeclaration","scope":3471,"src":"7085:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"7085:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ArrayTypeName","src":"7085:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3350,"initialValue":{"arguments":[{"id":3348,"name":"inputSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"7124:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7110:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"7114:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3346,"nodeType":"ArrayTypeName","src":"7114:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7110:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7085:49:19"},{"body":{"id":3447,"nodeType":"Block","src":"7182:263:19","statements":[{"expression":{"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3361,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"7196:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3367,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7202:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7206:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"7202:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7210:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7202:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7196:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3368,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"7215:2:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_memory_ptr_$4_memory_ptr","typeString":"struct Pairing.G1Point memory[4] memory"}},"id":3370,"indexExpression":{"id":3369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7218:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7215:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7221:1:19","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"7215:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7196:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3373,"nodeType":"ExpressionStatement","src":"7196:26:19"},{"expression":{"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3374,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"7236:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3380,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7242:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7246:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"7242:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7250:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7242:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7236:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3381,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"7255:2:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G1Point_$3102_memory_ptr_$4_memory_ptr","typeString":"struct Pairing.G1Point memory[4] memory"}},"id":3383,"indexExpression":{"id":3382,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7258:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7255:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point memory"}},"id":3384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7261:1:19","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":3101,"src":"7255:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7236:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3386,"nodeType":"ExpressionStatement","src":"7236:26:19"},{"expression":{"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3387,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"7276:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3393,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7282:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7286:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"7282:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7290:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7282:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7276:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":3394,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"7295:2:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$3111_memory_ptr_$4_memory_ptr","typeString":"struct Pairing.G2Point memory[4] memory"}},"id":3396,"indexExpression":{"id":3395,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7298:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7295:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":3397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7301:1:19","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"7295:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3399,"indexExpression":{"hexValue":"30","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7303:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7295:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7276:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3401,"nodeType":"ExpressionStatement","src":"7276:29:19"},{"expression":{"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3402,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"7319:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3408,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7325:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7329:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"7325:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"33","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7333:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"7325:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7319:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":3409,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"7338:2:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$3111_memory_ptr_$4_memory_ptr","typeString":"struct Pairing.G2Point memory[4] memory"}},"id":3411,"indexExpression":{"id":3410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7341:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7338:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":3412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7344:1:19","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"7338:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3414,"indexExpression":{"hexValue":"31","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7346:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7338:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7319:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3416,"nodeType":"ExpressionStatement","src":"7319:29:19"},{"expression":{"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3417,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"7362:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3423,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7368:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7372:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"7368:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7376:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7368:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7362:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":3424,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"7381:2:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$3111_memory_ptr_$4_memory_ptr","typeString":"struct Pairing.G2Point memory[4] memory"}},"id":3426,"indexExpression":{"id":3425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7384:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7381:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":3427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7387:1:19","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":3110,"src":"7381:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3429,"indexExpression":{"hexValue":"30","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7389:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7381:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7362:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3431,"nodeType":"ExpressionStatement","src":"7362:29:19"},{"expression":{"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3432,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"7405:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3438,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7411:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"36","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7415:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"7411:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"35","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7419:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"7411:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7405:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":3439,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"7424:2:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_G2Point_$3111_memory_ptr_$4_memory_ptr","typeString":"struct Pairing.G2Point memory[4] memory"}},"id":3441,"indexExpression":{"id":3440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7427:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7424:5:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point memory"}},"id":3442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7430:1:19","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":3110,"src":"7424:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3444,"indexExpression":{"hexValue":"31","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7432:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7424:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7405:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3446,"nodeType":"ExpressionStatement","src":"7405:29:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7170:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"34","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7174:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7170:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3448,"initializationExpression":{"assignments":[3352],"declarations":[{"constant":false,"id":3352,"mutability":"mutable","name":"i","nameLocation":"7163:1:19","nodeType":"VariableDeclaration","scope":3448,"src":"7158:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint","nodeType":"ElementaryTypeName","src":"7158:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3354,"initialValue":{"hexValue":"30","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7167:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7158:10:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7177:3:19","subExpression":{"id":3358,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7177:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3360,"nodeType":"ExpressionStatement","src":"7177:3:19"},"nodeType":"ForStatement","src":"7153:292:19"},{"assignments":[3454],"declarations":[{"constant":false,"id":3454,"mutability":"mutable","name":"out","nameLocation":"7481:3:19","nodeType":"VariableDeclaration","scope":3471,"src":"7463:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_memory_ptr","typeString":"uint256[1]"},"typeName":{"baseType":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"7463:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3453,"length":{"hexValue":"31","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7471:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"ArrayTypeName","src":"7463:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_storage_ptr","typeString":"uint256[1]"}},"visibility":"internal"}],"id":3455,"nodeType":"VariableDeclarationStatement","src":"7463:21:19"},{"assignments":[3457],"declarations":[{"constant":false,"id":3457,"mutability":"mutable","name":"success","nameLocation":"7499:7:19","nodeType":"VariableDeclaration","scope":3471,"src":"7494:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3456,"name":"bool","nodeType":"ElementaryTypeName","src":"7494:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3458,"nodeType":"VariableDeclarationStatement","src":"7494:12:19"},{"AST":{"nativeSrc":"7525:106:19","nodeType":"YulBlock","src":"7525:106:19","statements":[{"nativeSrc":"7539:82:19","nodeType":"YulAssignment","src":"7539:82:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"7561:3:19","nodeType":"YulIdentifier","src":"7561:3:19"},"nativeSrc":"7561:5:19","nodeType":"YulFunctionCall","src":"7561:5:19"},{"kind":"number","nativeSrc":"7568:1:19","nodeType":"YulLiteral","src":"7568:1:19","type":"","value":"8"},{"arguments":[{"name":"input","nativeSrc":"7575:5:19","nodeType":"YulIdentifier","src":"7575:5:19"},{"kind":"number","nativeSrc":"7582:4:19","nodeType":"YulLiteral","src":"7582:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7571:3:19","nodeType":"YulIdentifier","src":"7571:3:19"},"nativeSrc":"7571:16:19","nodeType":"YulFunctionCall","src":"7571:16:19"},{"arguments":[{"name":"inputSize","nativeSrc":"7593:9:19","nodeType":"YulIdentifier","src":"7593:9:19"},{"kind":"number","nativeSrc":"7604:4:19","nodeType":"YulLiteral","src":"7604:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"7589:3:19","nodeType":"YulIdentifier","src":"7589:3:19"},"nativeSrc":"7589:20:19","nodeType":"YulFunctionCall","src":"7589:20:19"},{"name":"out","nativeSrc":"7611:3:19","nodeType":"YulIdentifier","src":"7611:3:19"},{"kind":"number","nativeSrc":"7616:4:19","nodeType":"YulLiteral","src":"7616:4:19","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"7550:10:19","nodeType":"YulIdentifier","src":"7550:10:19"},"nativeSrc":"7550:71:19","nodeType":"YulFunctionCall","src":"7550:71:19"},"variableNames":[{"name":"success","nativeSrc":"7539:7:19","nodeType":"YulIdentifier","src":"7539:7:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3344,"isOffset":false,"isSlot":false,"src":"7575:5:19","valueSize":1},{"declaration":3337,"isOffset":false,"isSlot":false,"src":"7593:9:19","valueSize":1},{"declaration":3454,"isOffset":false,"isSlot":false,"src":"7611:3:19","valueSize":1},{"declaration":3457,"isOffset":false,"isSlot":false,"src":"7539:7:19","valueSize":1}],"id":3459,"nodeType":"InlineAssembly","src":"7516:115:19"},{"expression":{"arguments":[{"id":3461,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"7648:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50616972696e6720636865636b206661696c6564","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7657:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad901311f30fae059cc664c32e3223f276e4758c2c7195886208d914ea53eb34","typeString":"literal_string \"Pairing check failed\""},"value":"Pairing check failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad901311f30fae059cc664c32e3223f276e4758c2c7195886208d914ea53eb34","typeString":"literal_string \"Pairing check failed\""}],"id":3460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7640:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7640:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3464,"nodeType":"ExpressionStatement","src":"7640:40:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3465,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"7697:3:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_memory_ptr","typeString":"uint256[1] memory"}},"id":3467,"indexExpression":{"hexValue":"30","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7701:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7697:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7707:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7697:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3311,"id":3470,"nodeType":"Return","src":"7690:18:19"}]},"id":3472,"implemented":true,"kind":"function","modifiers":[],"name":"pairing","nameLocation":"6686:7:19","nodeType":"FunctionDefinition","parameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"a1","nameLocation":"6718:2:19","nodeType":"VariableDeclaration","scope":3472,"src":"6703:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3285,"nodeType":"UserDefinedTypeName","pathNode":{"id":3284,"name":"G1Point","nameLocations":["6703:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"6703:7:19"},"referencedDeclaration":3102,"src":"6703:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"a2","nameLocation":"6745:2:19","nodeType":"VariableDeclaration","scope":3472,"src":"6730:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":3288,"nodeType":"UserDefinedTypeName","pathNode":{"id":3287,"name":"G2Point","nameLocations":["6730:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3111,"src":"6730:7:19"},"referencedDeclaration":3111,"src":"6730:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"b1","nameLocation":"6772:2:19","nodeType":"VariableDeclaration","scope":3472,"src":"6757:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3291,"nodeType":"UserDefinedTypeName","pathNode":{"id":3290,"name":"G1Point","nameLocations":["6757:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"6757:7:19"},"referencedDeclaration":3102,"src":"6757:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"b2","nameLocation":"6799:2:19","nodeType":"VariableDeclaration","scope":3472,"src":"6784:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":3294,"nodeType":"UserDefinedTypeName","pathNode":{"id":3293,"name":"G2Point","nameLocations":["6784:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3111,"src":"6784:7:19"},"referencedDeclaration":3111,"src":"6784:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":3298,"mutability":"mutable","name":"c1","nameLocation":"6826:2:19","nodeType":"VariableDeclaration","scope":3472,"src":"6811:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3297,"nodeType":"UserDefinedTypeName","pathNode":{"id":3296,"name":"G1Point","nameLocations":["6811:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"6811:7:19"},"referencedDeclaration":3102,"src":"6811:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":3301,"mutability":"mutable","name":"c2","nameLocation":"6853:2:19","nodeType":"VariableDeclaration","scope":3472,"src":"6838:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":3300,"nodeType":"UserDefinedTypeName","pathNode":{"id":3299,"name":"G2Point","nameLocations":["6838:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3111,"src":"6838:7:19"},"referencedDeclaration":3111,"src":"6838:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"},{"constant":false,"id":3304,"mutability":"mutable","name":"d1","nameLocation":"6880:2:19","nodeType":"VariableDeclaration","scope":3472,"src":"6865:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_memory_ptr","typeString":"struct Pairing.G1Point"},"typeName":{"id":3303,"nodeType":"UserDefinedTypeName","pathNode":{"id":3302,"name":"G1Point","nameLocations":["6865:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"6865:7:19"},"referencedDeclaration":3102,"src":"6865:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G1Point_$3102_storage_ptr","typeString":"struct Pairing.G1Point"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"d2","nameLocation":"6907:2:19","nodeType":"VariableDeclaration","scope":3472,"src":"6892:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_memory_ptr","typeString":"struct Pairing.G2Point"},"typeName":{"id":3306,"nodeType":"UserDefinedTypeName","pathNode":{"id":3305,"name":"G2Point","nameLocations":["6892:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3111,"src":"6892:7:19"},"referencedDeclaration":3111,"src":"6892:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_G2Point_$3111_storage_ptr","typeString":"struct Pairing.G2Point"}},"visibility":"internal"}],"src":"6693:222:19"},"returnParameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3472,"src":"6939:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3309,"name":"bool","nodeType":"ElementaryTypeName","src":"6939:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6938:6:19"},"scope":3473,"src":"6677:1038:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3474,"src":"4813:2904:19","usedErrors":[],"usedEvents":[]}],"src":"32:7686:19"},"id":19},"contracts/NovaProofAggregator.sol":{"ast":{"absolutePath":"contracts/NovaProofAggregator.sol","exportedSymbols":{"AggregatorV3Interface":[1084],"AutomationCompatibleInterface":[67],"FunctionsClient":[854],"FunctionsRequest":[678],"Groth16Verifier":[3094],"NovaProofAggregator":[4335],"Pairing":[3473],"VRFConsumerBaseV2Plus":[2544],"VRFV2PlusClient":[2707],"ZKProofAggregator":[5929]},"id":4336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3475,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:20"},{"absolutePath":"contracts/ZKProofAggregator.sol","file":"./ZKProofAggregator.sol","id":3476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4336,"sourceUnit":5930,"src":"58:33:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","file":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","id":3478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4336,"sourceUnit":679,"src":"92:111:20","symbolAliases":[{"foreign":{"id":3477,"name":"FunctionsRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"100:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3480,"name":"ZKProofAggregator","nameLocations":["438:17:20"],"nodeType":"IdentifierPath","referencedDeclaration":5929,"src":"438:17:20"},"id":3481,"nodeType":"InheritanceSpecifier","src":"438:17:20"}],"canonicalName":"NovaProofAggregator","contractDependencies":[],"contractKind":"contract","documentation":{"id":3479,"nodeType":"StructuredDocumentation","src":"205:200:20","text":" @title NovaProofAggregator\n @dev Enhanced ZK proof aggregator with Nova recursive proof capabilities\n @notice This contract enables recursive proof composition for scalable verification"},"fullyImplemented":true,"id":4335,"linearizedBaseContracts":[4335,5929,67,854,81,2544,875,1038,1100,2576],"name":"NovaProofAggregator","nameLocation":"415:19:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3485,"libraryName":{"id":3482,"name":"FunctionsRequest","nameLocations":["468:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":678,"src":"468:16:20"},"nodeType":"UsingForDirective","src":"462:52:20","typeName":{"id":3484,"nodeType":"UserDefinedTypeName","pathNode":{"id":3483,"name":"FunctionsRequest.Request","nameLocations":["489:16:20","506:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"489:24:20"},"referencedDeclaration":256,"src":"489:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}}},{"anonymous":false,"eventSelector":"5d74f4c80f98633a9ce8e3f825e7019210bfb85159f33a7fceb58fa9cb8ca621","id":3494,"name":"NovaFoldingStarted","nameLocation":"564:18:20","nodeType":"EventDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"599:7:20","nodeType":"VariableDeclaration","scope":3494,"src":"583:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"583:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3490,"indexed":false,"mutability":"mutable","name":"proofIds","nameLocation":"618:8:20","nodeType":"VariableDeclaration","scope":3494,"src":"608:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"608:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3489,"nodeType":"ArrayTypeName","src":"608:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3492,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"644:9:20","nodeType":"VariableDeclaration","scope":3494,"src":"628:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3491,"name":"address","nodeType":"ElementaryTypeName","src":"628:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"582:72:20"},"src":"558:97:20"},{"anonymous":false,"eventSelector":"e72448dee39249921f3f9c2134dc1ca195a9e3882d4b52e6c3e49c775a4a4311","id":3502,"name":"NovaFoldingCompleted","nameLocation":"666:20:20","nodeType":"EventDefinition","parameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"703:7:20","nodeType":"VariableDeclaration","scope":3502,"src":"687:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3498,"indexed":false,"mutability":"mutable","name":"aggregatedHash","nameLocation":"720:14:20","nodeType":"VariableDeclaration","scope":3502,"src":"712:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"712:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3500,"indexed":false,"mutability":"mutable","name":"isValid","nameLocation":"741:7:20","nodeType":"VariableDeclaration","scope":3502,"src":"736:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3499,"name":"bool","nodeType":"ElementaryTypeName","src":"736:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"686:63:20"},"src":"660:90:20"},{"anonymous":false,"eventSelector":"788c5f43c02f6032d8146c17d8b085814337bacff42a64addf4f97ffcebdacff","id":3510,"name":"RecursiveProofGenerated","nameLocation":"761:23:20","nodeType":"EventDefinition","parameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"801:7:20","nodeType":"VariableDeclaration","scope":3510,"src":"785:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"785:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3506,"indexed":false,"mutability":"mutable","name":"recursionDepth","nameLocation":"818:14:20","nodeType":"VariableDeclaration","scope":3510,"src":"810:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"810:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3508,"indexed":false,"mutability":"mutable","name":"recursiveProof","nameLocation":"840:14:20","nodeType":"VariableDeclaration","scope":3510,"src":"834:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3507,"name":"bytes","nodeType":"ElementaryTypeName","src":"834:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"784:71:20"},"src":"755:101:20"},{"canonicalName":"NovaProofAggregator.NovaInstance","id":3525,"members":[{"constant":false,"id":3512,"mutability":"mutable","name":"stepIn","nameLocation":"928:6:20","nodeType":"VariableDeclaration","scope":3525,"src":"920:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"920:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"stepOut","nameLocation":"952:7:20","nodeType":"VariableDeclaration","scope":3525,"src":"944:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"programCounter","nameLocation":"977:14:20","nodeType":"VariableDeclaration","scope":3525,"src":"969:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"stateRootIn","nameLocation":"1009:11:20","nodeType":"VariableDeclaration","scope":3525,"src":"1001:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1001:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"stateRootOut","nameLocation":"1038:12:20","nodeType":"VariableDeclaration","scope":3525,"src":"1030:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1030:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"nullifierHash","nameLocation":"1068:13:20","nodeType":"VariableDeclaration","scope":3525,"src":"1060:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1060:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"isValid","nameLocation":"1096:7:20","nodeType":"VariableDeclaration","scope":3525,"src":"1091:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3523,"name":"bool","nodeType":"ElementaryTypeName","src":"1091:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"NovaInstance","nameLocation":"897:12:20","nodeType":"StructDefinition","scope":4335,"src":"890:220:20","visibility":"public"},{"canonicalName":"NovaProofAggregator.RecursiveProofBatch","id":3552,"members":[{"constant":false,"id":3528,"mutability":"mutable","name":"proofIds","nameLocation":"1167:8:20","nodeType":"VariableDeclaration","scope":3552,"src":"1157:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3527,"nodeType":"ArrayTypeName","src":"1157:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3530,"mutability":"mutable","name":"requester","nameLocation":"1193:9:20","nodeType":"VariableDeclaration","scope":3552,"src":"1185:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3529,"name":"address","nodeType":"ElementaryTypeName","src":"1185:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"timestamp","nameLocation":"1220:9:20","nodeType":"VariableDeclaration","scope":3552,"src":"1212:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3534,"mutability":"mutable","name":"recursionDepth","nameLocation":"1247:14:20","nodeType":"VariableDeclaration","scope":3552,"src":"1239:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"aggregatedHash","nameLocation":"1279:14:20","nodeType":"VariableDeclaration","scope":3552,"src":"1271:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1271:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3539,"mutability":"mutable","name":"foldedInstance","nameLocation":"1316:14:20","nodeType":"VariableDeclaration","scope":3552,"src":"1303:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_NovaInstance_$3525_storage_ptr","typeString":"struct NovaProofAggregator.NovaInstance"},"typeName":{"id":3538,"nodeType":"UserDefinedTypeName","pathNode":{"id":3537,"name":"NovaInstance","nameLocations":["1303:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3525,"src":"1303:12:20"},"referencedDeclaration":3525,"src":"1303:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_NovaInstance_$3525_storage_ptr","typeString":"struct NovaProofAggregator.NovaInstance"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"isCompleted","nameLocation":"1345:11:20","nodeType":"VariableDeclaration","scope":3552,"src":"1340:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3540,"name":"bool","nodeType":"ElementaryTypeName","src":"1340:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"proofHashes","nameLocation":"1394:11:20","nodeType":"VariableDeclaration","scope":3552,"src":"1366:39:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":3544,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1374:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1366:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1385:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"},{"constant":false,"id":3551,"mutability":"mutable","name":"publicInputs","nameLocation":"1446:12:20","nodeType":"VariableDeclaration","scope":3552,"src":"1415:43:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$4_storage_$","typeString":"mapping(uint256 => uint256[4])"},"typeName":{"id":3550,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1415:30:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$4_storage_$","typeString":"mapping(uint256 => uint256[4])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1434:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3549,"length":{"hexValue":"34","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1442:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"1434:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_storage_ptr","typeString":"uint256[4]"}}},"visibility":"internal"}],"name":"RecursiveProofBatch","nameLocation":"1127:19:20","nodeType":"StructDefinition","scope":4335,"src":"1120:345:20","visibility":"public"},{"constant":false,"functionSelector":"223b6637","id":3557,"mutability":"mutable","name":"recursiveProofBatches","nameLocation":"1554:21:20","nodeType":"VariableDeclaration","scope":4335,"src":"1507:68:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RecursiveProofBatch_$3552_storage_$","typeString":"mapping(uint256 => struct NovaProofAggregator.RecursiveProofBatch)"},"typeName":{"id":3556,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1515:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1507:39:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RecursiveProofBatch_$3552_storage_$","typeString":"mapping(uint256 => struct NovaProofAggregator.RecursiveProofBatch)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3555,"nodeType":"UserDefinedTypeName","pathNode":{"id":3554,"name":"RecursiveProofBatch","nameLocations":["1526:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":3552,"src":"1526:19:20"},"referencedDeclaration":3552,"src":"1526:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"}}},"visibility":"public"},{"constant":false,"functionSelector":"206137aa","id":3561,"mutability":"mutable","name":"usedNullifiers","nameLocation":"1613:14:20","nodeType":"VariableDeclaration","scope":4335,"src":"1581:46:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":3560,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1589:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1581:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3559,"name":"bool","nodeType":"ElementaryTypeName","src":"1600:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"10a14c40","id":3565,"mutability":"mutable","name":"proofToBatch","nameLocation":"1694:12:20","nodeType":"VariableDeclaration","scope":4335,"src":"1659:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":3564,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1667:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1659:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"68233eef","id":3567,"mutability":"mutable","name":"batchCounter","nameLocation":"1760:12:20","nodeType":"VariableDeclaration","scope":4335,"src":"1745:27:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1745:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"457b2e41","id":3570,"mutability":"mutable","name":"maxRecursionDepth","nameLocation":"1793:17:20","nodeType":"VariableDeclaration","scope":4335,"src":"1778:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3136","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1813:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"public"},{"constant":false,"functionSelector":"e2ecf1e2","id":3573,"mutability":"mutable","name":"minProofsPerBatch","nameLocation":"1836:17:20","nodeType":"VariableDeclaration","scope":4335,"src":"1821:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1821:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1856:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":false,"functionSelector":"57aabcac","id":3576,"mutability":"mutable","name":"maxProofsPerBatch","nameLocation":"1878:17:20","nodeType":"VariableDeclaration","scope":4335,"src":"1863:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1863:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1898:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"visibility":"public"},{"constant":false,"functionSelector":"28606775","id":3578,"mutability":"mutable","name":"novaVerifier","nameLocation":"1985:12:20","nodeType":"VariableDeclaration","scope":4335,"src":"1970:27:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3577,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":3594,"nodeType":"Block","src":"2045:95:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3583,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"2063:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2063:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"2078:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3587,"name":"batchCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"2089:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2063:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206261746368204944","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2103:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b","typeString":"literal_string \"Invalid batch ID\""},"value":"Invalid batch ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b","typeString":"literal_string \"Invalid batch ID\""}],"id":3582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2055:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2055:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3592,"nodeType":"ExpressionStatement","src":"2055:67:20"},{"id":3593,"nodeType":"PlaceholderStatement","src":"2132:1:20"}]},"id":3595,"name":"validBatch","nameLocation":"2017:10:20","nodeType":"ModifierDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"batchId","nameLocation":"2036:7:20","nodeType":"VariableDeclaration","scope":3595,"src":"2028:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2028:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2027:17:20"},"src":"2008:132:20","virtual":false,"visibility":"internal"},{"body":{"id":3611,"nodeType":"Block","src":"2195:114:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3600,"name":"recursiveProofBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"2213:21:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RecursiveProofBatch_$3552_storage_$","typeString":"mapping(uint256 => struct NovaProofAggregator.RecursiveProofBatch storage ref)"}},"id":3602,"indexExpression":{"id":3601,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"2235:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2213:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage ref"}},"id":3603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2244:9:20","memberName":"requester","nodeType":"MemberAccess","referencedDeclaration":3530,"src":"2213:40:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3604,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2257:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2261:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2257:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2213:54:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420626174636820726571756573746572","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2269:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b2ffbd5a02e5e66abc192c8e296c7f0784596139b374b2824871535ff6ce6f4","typeString":"literal_string \"Not batch requester\""},"value":"Not batch requester"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b2ffbd5a02e5e66abc192c8e296c7f0784596139b374b2824871535ff6ce6f4","typeString":"literal_string \"Not batch requester\""}],"id":3599,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2205:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2205:86:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3609,"nodeType":"ExpressionStatement","src":"2205:86:20"},{"id":3610,"nodeType":"PlaceholderStatement","src":"2301:1:20"}]},"id":3612,"name":"onlyBatchRequester","nameLocation":"2159:18:20","nodeType":"ModifierDefinition","parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"batchId","nameLocation":"2186:7:20","nodeType":"VariableDeclaration","scope":3612,"src":"2178:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2177:17:20"},"src":"2150:159:20","virtual":false,"visibility":"internal"},{"body":{"id":3644,"nodeType":"Block","src":"2817:45:20","statements":[{"expression":{"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3640,"name":"novaVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"2827:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3641,"name":"_novaVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"2842:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2827:28:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3643,"nodeType":"ExpressionStatement","src":"2827:28:20"}]},"id":3645,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3631,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"2635:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3632,"name":"functionsRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"2659:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3633,"name":"vrfSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"2684:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3634,"name":"vrfKeyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"2711:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3635,"name":"functionsSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"2731:23:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3636,"name":"functionsDonId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"2764:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3637,"name":"groth16VerifierAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"2788:22:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3638,"kind":"baseConstructorSpecifier","modifierName":{"id":3630,"name":"ZKProofAggregator","nameLocations":["2608:17:20"],"nodeType":"IdentifierPath","referencedDeclaration":5929,"src":"2608:17:20"},"nodeType":"ModifierInvocation","src":"2608:208:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"2348:14:20","nodeType":"VariableDeclaration","scope":3645,"src":"2340:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3613,"name":"address","nodeType":"ElementaryTypeName","src":"2340:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"functionsRouter","nameLocation":"2380:15:20","nodeType":"VariableDeclaration","scope":3645,"src":"2372:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3615,"name":"address","nodeType":"ElementaryTypeName","src":"2372:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"vrfSubscriptionId","nameLocation":"2413:17:20","nodeType":"VariableDeclaration","scope":3645,"src":"2405:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"2405:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3620,"mutability":"mutable","name":"vrfKeyHash","nameLocation":"2448:10:20","nodeType":"VariableDeclaration","scope":3645,"src":"2440:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3622,"mutability":"mutable","name":"functionsSubscriptionId","nameLocation":"2475:23:20","nodeType":"VariableDeclaration","scope":3645,"src":"2468:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3621,"name":"uint64","nodeType":"ElementaryTypeName","src":"2468:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"functionsDonId","nameLocation":"2516:14:20","nodeType":"VariableDeclaration","scope":3645,"src":"2508:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2508:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"groth16VerifierAddress","nameLocation":"2548:22:20","nodeType":"VariableDeclaration","scope":3645,"src":"2540:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3625,"name":"address","nodeType":"ElementaryTypeName","src":"2540:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"_novaVerifier","nameLocation":"2588:13:20","nodeType":"VariableDeclaration","scope":3645,"src":"2580:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3627,"name":"address","nodeType":"ElementaryTypeName","src":"2580:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2330:277:20"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[],"src":"2817:0:20"},"scope":4335,"src":"2319:543:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3850,"nodeType":"Block","src":"3189:1965:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3655,"name":"proofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"3220:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3229:6:20","memberName":"length","nodeType":"MemberAccess","src":"3220:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3657,"name":"minProofsPerBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"3239:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3220:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3659,"name":"proofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"3260:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3269:6:20","memberName":"length","nodeType":"MemberAccess","src":"3260:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3661,"name":"maxProofsPerBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"3279:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3260:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3220:76:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6f6620636f756e74","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3311:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f81b5458a5c565259832b8b61b5bc4c914c336b5ec73e0f8a26f1d1531650916","typeString":"literal_string \"Invalid proof count\""},"value":"Invalid proof count"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f81b5458a5c565259832b8b61b5bc4c914c336b5ec73e0f8a26f1d1531650916","typeString":"literal_string \"Invalid proof count\""}],"id":3654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3199:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:143:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3666,"nodeType":"ExpressionStatement","src":"3199:143:20"},{"body":{"id":3709,"nodeType":"Block","src":"3460:248:20","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3679,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"3482:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":3683,"indexExpression":{"baseExpression":{"id":3680,"name":"proofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"3496:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3682,"indexExpression":{"id":3681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3505:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3496:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3482:26:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"id":3684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3509:11:20","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":4419,"src":"3482:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f66206e6f7420636f6d706c65746564","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3522:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_e65824a7a99d97e3eae5ffe5515d31cdce28a5a76674475f3cb7ee98ef762808","typeString":"literal_string \"Proof not completed\""},"value":"Proof not completed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e65824a7a99d97e3eae5ffe5515d31cdce28a5a76674475f3cb7ee98ef762808","typeString":"literal_string \"Proof not completed\""}],"id":3678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3474:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3687,"nodeType":"ExpressionStatement","src":"3474:70:20"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3689,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"3566:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":3693,"indexExpression":{"baseExpression":{"id":3690,"name":"proofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"3580:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3692,"indexExpression":{"id":3691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3589:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3580:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3566:26:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"id":3694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3593:7:20","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"3566:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6f66","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3602:15:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","typeString":"literal_string \"Invalid proof\""},"value":"Invalid proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","typeString":"literal_string \"Invalid proof\""}],"id":3688,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3558:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3558:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3697,"nodeType":"ExpressionStatement","src":"3558:60:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3699,"name":"proofToBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"3640:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3703,"indexExpression":{"baseExpression":{"id":3700,"name":"proofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"3653:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3702,"indexExpression":{"id":3701,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3662:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3653:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3640:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3669:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3640:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f6620616c726561647920696e206261746368","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3672:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_dcf049a7bc316840d443f3521acb41821a428812d0322ed0b7c06bac4c62d751","typeString":"literal_string \"Proof already in batch\""},"value":"Proof already in batch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dcf049a7bc316840d443f3521acb41821a428812d0322ed0b7c06bac4c62d751","typeString":"literal_string \"Proof already in batch\""}],"id":3698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3632:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3632:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3708,"nodeType":"ExpressionStatement","src":"3632:65:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3671,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3434:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3672,"name":"proofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"3438:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3447:6:20","memberName":"length","nodeType":"MemberAccess","src":"3438:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3710,"initializationExpression":{"assignments":[3668],"declarations":[{"constant":false,"id":3668,"mutability":"mutable","name":"i","nameLocation":"3427:1:20","nodeType":"VariableDeclaration","scope":3710,"src":"3419:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3419:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3670,"initialValue":{"hexValue":"30","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3431:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3419:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3455:3:20","subExpression":{"id":3675,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3455:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3677,"nodeType":"ExpressionStatement","src":"3455:3:20"},"nodeType":"ForStatement","src":"3414:294:20"},{"expression":{"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3711,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3726:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3736:14:20","subExpression":{"id":3712,"name":"batchCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"3738:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3726:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3715,"nodeType":"ExpressionStatement","src":"3726:24:20"},{"assignments":[3718],"declarations":[{"constant":false,"id":3718,"mutability":"mutable","name":"batch","nameLocation":"3788:5:20","nodeType":"VariableDeclaration","scope":3850,"src":"3760:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"},"typeName":{"id":3717,"nodeType":"UserDefinedTypeName","pathNode":{"id":3716,"name":"RecursiveProofBatch","nameLocations":["3760:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":3552,"src":"3760:19:20"},"referencedDeclaration":3552,"src":"3760:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"}},"visibility":"internal"}],"id":3722,"initialValue":{"baseExpression":{"id":3719,"name":"recursiveProofBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"3796:21:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RecursiveProofBatch_$3552_storage_$","typeString":"mapping(uint256 => struct NovaProofAggregator.RecursiveProofBatch storage ref)"}},"id":3721,"indexExpression":{"id":3720,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3818:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3796:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3760:66:20"},{"expression":{"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3723,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"3845:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":3725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3851:8:20","memberName":"proofIds","nodeType":"MemberAccess","referencedDeclaration":3528,"src":"3845:14:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3726,"name":"proofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"3862:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3845:25:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3728,"nodeType":"ExpressionStatement","src":"3845:25:20"},{"expression":{"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3729,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"3880:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":3731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3886:9:20","memberName":"requester","nodeType":"MemberAccess","referencedDeclaration":3530,"src":"3880:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3732,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3898:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3902:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3898:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3880:28:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3735,"nodeType":"ExpressionStatement","src":"3880:28:20"},{"expression":{"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3736,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"3918:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":3738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3924:9:20","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3532,"src":"3918:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3739,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3936:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3942:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"3936:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3918:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3742,"nodeType":"ExpressionStatement","src":"3918:33:20"},{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3743,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"3961:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":3745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3967:14:20","memberName":"recursionDepth","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"3961:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3984:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3961:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"3961:24:20"},{"expression":{"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3749,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"3995:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":3751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4001:11:20","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":3541,"src":"3995:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4015:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3995:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3754,"nodeType":"ExpressionStatement","src":"3995:25:20"},{"body":{"id":3835,"nodeType":"Block","src":"4133:803:20","statements":[{"assignments":[3767],"declarations":[{"constant":false,"id":3767,"mutability":"mutable","name":"proofId","nameLocation":"4155:7:20","nodeType":"VariableDeclaration","scope":3835,"src":"4147:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"4147:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3771,"initialValue":{"baseExpression":{"id":3768,"name":"proofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"4165:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3770,"indexExpression":{"id":3769,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"4174:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4165:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4147:29:20"},{"expression":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3772,"name":"proofToBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"4190:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3774,"indexExpression":{"id":3773,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4203:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4190:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3775,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4214:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4190:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3777,"nodeType":"ExpressionStatement","src":"4190:31:20"},{"expression":{"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3778,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"4316:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":3781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4322:11:20","memberName":"proofHashes","nodeType":"MemberAccess","referencedDeclaration":3545,"src":"4316:17:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":3782,"indexExpression":{"id":3780,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"4334:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4316:20:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3786,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"4404:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":3788,"indexExpression":{"id":3787,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4418:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4404:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"id":3789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4427:9:20","memberName":"stateRoot","nodeType":"MemberAccess","referencedDeclaration":4417,"src":"4404:32:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"baseExpression":{"id":3790,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"4458:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":3792,"indexExpression":{"id":3791,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4472:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4458:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"id":3793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4481:11:20","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"4458:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":3794,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"4514:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":3796,"indexExpression":{"id":3795,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4528:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4514:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"id":3797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4537:11:20","memberName":"sourceChain","nodeType":"MemberAccess","referencedDeclaration":4413,"src":"4514:34:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3784,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4366:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4370:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"4366:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:200:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3783,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4339:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4339:241:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4316:264:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3801,"nodeType":"ExpressionStatement","src":"4316:264:20"},{"expression":{"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3802,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"4664:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":3805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4670:12:20","memberName":"publicInputs","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"4664:18:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$4_storage_$","typeString":"mapping(uint256 => uint256[4] storage ref)"}},"id":3806,"indexExpression":{"id":3804,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"4683:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4664:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_storage","typeString":"uint256[4] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"arguments":[{"expression":{"baseExpression":{"id":3809,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"4714:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":3811,"indexExpression":{"id":3810,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4728:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4714:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"id":3812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4737:9:20","memberName":"stateRoot","nodeType":"MemberAccess","referencedDeclaration":4417,"src":"4714:32:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4706:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"4706:7:20","typeDescriptions":{}}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4706:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":3814,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"4765:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":3816,"indexExpression":{"id":3815,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4779:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4765:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"id":3817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4788:11:20","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"4765:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3823,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"4841:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":3825,"indexExpression":{"id":3824,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4855:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4841:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"id":3826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4864:11:20","memberName":"sourceChain","nodeType":"MemberAccess","referencedDeclaration":4413,"src":"4841:34:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4835:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3821,"name":"bytes","nodeType":"ElementaryTypeName","src":"4835:5:20","typeDescriptions":{}}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4835:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3820,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4825:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4825:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4817:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"4817:7:20","typeDescriptions":{}}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4817:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3830,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4896:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4902:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"4896:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3832,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4688:237:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4] memory"}},"src":"4664:261:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_storage","typeString":"uint256[4] storage ref"}},"id":3834,"nodeType":"ExpressionStatement","src":"4664:261:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"4107:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3760,"name":"proofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"4111:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4120:6:20","memberName":"length","nodeType":"MemberAccess","src":"4111:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4107:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3836,"initializationExpression":{"assignments":[3756],"declarations":[{"constant":false,"id":3756,"mutability":"mutable","name":"i","nameLocation":"4100:1:20","nodeType":"VariableDeclaration","scope":3836,"src":"4092:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"4092:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3758,"initialValue":{"hexValue":"30","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4104:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4092:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4128:3:20","subExpression":{"id":3763,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"4128:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3765,"nodeType":"ExpressionStatement","src":"4128:3:20"},"nodeType":"ForStatement","src":"4087:849:20"},{"eventCall":{"arguments":[{"id":3838,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4978:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3839,"name":"proofIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"4987:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3840,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4997:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5001:6:20","memberName":"sender","nodeType":"MemberAccess","src":"4997:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3837,"name":"NovaFoldingStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"4959:18:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (uint256,uint256[] memory,address)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4959:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3843,"nodeType":"EmitStatement","src":"4954:54:20"},{"expression":{"arguments":[{"id":3845,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"5106:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3844,"name":"_requestRecursiveProofGeneration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"5073:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3847,"nodeType":"ExpressionStatement","src":"5073:41:20"},{"expression":{"id":3848,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"5140:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3653,"id":3849,"nodeType":"Return","src":"5133:14:20"}]},"documentation":{"id":3646,"nodeType":"StructuredDocumentation","src":"2872:201:20","text":" @dev Start Nova folding process for multiple proofs\n @param proofIds Array of proof IDs to aggregate recursively\n @return batchId Unique identifier for this folding batch"},"functionSelector":"62625bc1","id":3851,"implemented":true,"kind":"function","modifiers":[],"name":"startNovaFolding","nameLocation":"3087:16:20","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3649,"mutability":"mutable","name":"proofIds","nameLocation":"3121:8:20","nodeType":"VariableDeclaration","scope":3851,"src":"3104:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"3104:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3648,"nodeType":"ArrayTypeName","src":"3104:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3103:27:20"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"batchId","nameLocation":"3175:7:20","nodeType":"VariableDeclaration","scope":3851,"src":"3167:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3166:17:20"},"scope":4335,"src":"3078:2076:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3908,"nodeType":"Block","src":"5316:1493:20","statements":[{"assignments":[3859],"declarations":[{"constant":false,"id":3859,"mutability":"mutable","name":"batch","nameLocation":"5354:5:20","nodeType":"VariableDeclaration","scope":3908,"src":"5326:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"},"typeName":{"id":3858,"nodeType":"UserDefinedTypeName","pathNode":{"id":3857,"name":"RecursiveProofBatch","nameLocations":["5326:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":3552,"src":"5326:19:20"},"referencedDeclaration":3552,"src":"5326:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"}},"visibility":"internal"}],"id":3863,"initialValue":{"baseExpression":{"id":3860,"name":"recursiveProofBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"5362:21:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RecursiveProofBatch_$3552_storage_$","typeString":"mapping(uint256 => struct NovaProofAggregator.RecursiveProofBatch storage ref)"}},"id":3862,"indexExpression":{"id":3861,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"5384:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5362:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5326:66:20"},{"assignments":[3865],"declarations":[{"constant":false,"id":3865,"mutability":"mutable","name":"source","nameLocation":"5480:6:20","nodeType":"VariableDeclaration","scope":3908,"src":"5466:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3864,"name":"string","nodeType":"ElementaryTypeName","src":"5466:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3897,"initialValue":{"arguments":[{"arguments":[{"hexValue":"636f6e73742062617463684964203d207061727365496e7428617267735b305d293b","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5526:36:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_97c5ca88a36c35aa125eeafcb420244a2beb01f969e3f2841e4fcb41db23913a","typeString":"literal_string \"const batchId = parseInt(args[0]);\""},"value":"const batchId = parseInt(args[0]);"},{"hexValue":"636f6e73742070726f6f66436f756e74203d207061727365496e7428617267735b315d293b","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5576:39:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c1a8486bc510a7ede2d6ec7dfb30c45202dc43afde15fdf2501cc3eeae30cf5","typeString":"literal_string \"const proofCount = parseInt(args[1]);\""},"value":"const proofCount = parseInt(args[1]);"},{"hexValue":"636f6e73742073746570496e203d207061727365496e7428617267735b325d293b","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5629:35:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_abe52d44c20f744b69d5481751ec298eb2db180f0ca56993a16e428f92e70f5d","typeString":"literal_string \"const stepIn = parseInt(args[2]);\""},"value":"const stepIn = parseInt(args[2]);"},{"hexValue":"2f2f2047656e6572617465204e6f7661207265637572736976652070726f6f66202d2073696d706c696669656420666f722064656d6f","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5678:56:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_7904cec2a94e31692dc0f81e147ea092663ba9a84cb087e66ce6dde125e15e2d","typeString":"literal_string \"// Generate Nova recursive proof - simplified for demo\""},"value":"// Generate Nova recursive proof - simplified for demo"},{"hexValue":"636f6e7374206167677265676174656448617368203d206574686572732e7574696c732e6b656363616b32353628","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5748:48:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_195643d118744d2ec0d1a54e5e7f0ea1c9423b74953f4069b3a84feee9b6881b","typeString":"literal_string \"const aggregatedHash = ethers.utils.keccak256(\""},"value":"const aggregatedHash = ethers.utils.keccak256("},{"hexValue":"20206574686572732e7574696c732e64656661756c74416269436f6465722e656e636f646528","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5810:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_167ff92b50bacc7dde088c1c29391d26d1166935775a4b241ca28c200cb5523c","typeString":"literal_string \"  ethers.utils.defaultAbiCoder.encode(\""},"value":"  ethers.utils.defaultAbiCoder.encode("},{"hexValue":"202020205b2775696e74323536272c202775696e74323536272c202775696e74323536275d2c","id":3876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5864:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1a5a58189ce70945f2adc2866d4f78d2c3754cf44eda4d6d01a3b4ef1527026","typeString":"literal_string \"    ['uint256', 'uint256', 'uint256'],\""},"value":"    ['uint256', 'uint256', 'uint256'],"},{"hexValue":"202020205b626174636849642c2070726f6f66436f756e742c2073746570496e5d","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5918:35:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_233ea5e82a565c37a49a26a6f51c90e452e28bf61c65d14553c307a3fbad43c7","typeString":"literal_string \"    [batchId, proofCount, stepIn]\""},"value":"    [batchId, proofCount, stepIn]"},{"hexValue":"202029","id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5967:5:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_a7baf54e7d9b01d6902c91b91bd0d193708bb0a03188923090e4b106456eeeda","typeString":"literal_string \"  )\""},"value":"  )"},{"hexValue":"293b","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5986:4:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_e92f0f20cf2e4b3379c539a9e910e973f63a7af257896912c7f9bc34a6b94b8a","typeString":"literal_string \");\""},"value":");"},{"hexValue":"636f6e737420666f6c646564496e7374616e6365203d207b","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6004:26:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_dddd1b140004b8a49f9886037019001f9912783746c304a0bba47dc5a4cc3a05","typeString":"literal_string \"const foldedInstance = {\""},"value":"const foldedInstance = {"},{"hexValue":"202073746570496e3a2073746570496e2c","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6044:19:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c73ddd9e0728cba6b8cfa27d052a56a3cf1d2ae51e7e9aabda667f79ffd6c9bc","typeString":"literal_string \"  stepIn: stepIn,\""},"value":"  stepIn: stepIn,"},{"hexValue":"2020737465704f75743a2073746570496e202b20312c","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6077:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_bec37fa356d20147934b96c96762ce353f14ae2beff350de9c52e52dc4fce340","typeString":"literal_string \"  stepOut: stepIn + 1,\""},"value":"  stepOut: stepIn + 1,"},{"hexValue":"202070726f6772616d436f756e7465723a20446174652e6e6f7728292c","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6115:31:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d9acc5f6a6f8a0c9941c4bbe52d13fa4a2efb9e4b1cf349647037193fab30c6","typeString":"literal_string \"  programCounter: Date.now(),\""},"value":"  programCounter: Date.now(),"},{"hexValue":"20207374617465526f6f74496e3a2061676772656761746564486173682c","id":3884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6160:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_e86253ec96000936e6fe1afd65764db26b7efc856d57150d56eaefd1be8d0a70","typeString":"literal_string \"  stateRootIn: aggregatedHash,\""},"value":"  stateRootIn: aggregatedHash,"},{"hexValue":"20207374617465526f6f744f75743a2061676772656761746564486173682c","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6206:33:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_497036d4081dbfbe64373055aa42c447f9b42c553571dc7ebb2874a0ce99d17e","typeString":"literal_string \"  stateRootOut: aggregatedHash,\""},"value":"  stateRootOut: aggregatedHash,"},{"hexValue":"20206e756c6c6966696572486173683a206574686572732e7574696c732e6b656363616b323536286167677265676174656448617368292c","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6253:58:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ae6719a851cbd5b4b2159c8ff3b6d15e904f94c0a3df94aa68ecf5ad0457e02","typeString":"literal_string \"  nullifierHash: ethers.utils.keccak256(aggregatedHash),\""},"value":"  nullifierHash: ethers.utils.keccak256(aggregatedHash),"},{"hexValue":"2020697356616c69643a2074727565","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6325:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe389bd85ae975b87e54edde95a44a61f1c0f41cf51154203448b439e43ac7d1","typeString":"literal_string \"  isValid: true\""},"value":"  isValid: true"},{"hexValue":"7d3b","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6356:4:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_943df9c5405306d093ea45555cf4cfd33f8847a816d9cdf458312be5e1213a35","typeString":"literal_string \"};\""},"value":"};"},{"hexValue":"72657475726e2046756e6374696f6e732e656e636f6465537472696e67284a534f4e2e737472696e67696679287b","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6374:48:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecb40148d8ce761ddb6a0e6e83e2d61f354f392d6811b9eb896e6e4a5cab9bca","typeString":"literal_string \"return Functions.encodeString(JSON.stringify({\""},"value":"return Functions.encodeString(JSON.stringify({"},{"hexValue":"2020626174636849643a20626174636849642c","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6436:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_665d22c96fd2f439dd292838a93aa990deb3eba586a38fb2d473bf8a5227f924","typeString":"literal_string \"  batchId: batchId,\""},"value":"  batchId: batchId,"},{"hexValue":"202061676772656761746564486173683a2061676772656761746564486173682c","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6471:35:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec2099114aa0a5a4ef072018a8f4a860405d6043914bc38802dd6b9b515a4b5a","typeString":"literal_string \"  aggregatedHash: aggregatedHash,\""},"value":"  aggregatedHash: aggregatedHash,"},{"hexValue":"2020666f6c646564496e7374616e63653a20666f6c646564496e7374616e63652c","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6520:35:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8360992845659a25c15a0c572183a971b5fc8a87f3c01d9c8500787c89aac37b","typeString":"literal_string \"  foldedInstance: foldedInstance,\""},"value":"  foldedInstance: foldedInstance,"},{"hexValue":"202072656375727369766550726f6f663a206167677265676174656448617368","id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6569:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4eb625f355b1658fadccbe4802628c373be9c9f2970b389002dea34aa59ccd52","typeString":"literal_string \"  recursiveProof: aggregatedHash\""},"value":"  recursiveProof: aggregatedHash"},{"hexValue":"7d29293b","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6617:6:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_a822f8f23141acb3616f78a8e9fcb514c4ff8ac33981c0a2eed971211d904f8a","typeString":"literal_string \"}));\""},"value":"}));"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_97c5ca88a36c35aa125eeafcb420244a2beb01f969e3f2841e4fcb41db23913a","typeString":"literal_string \"const batchId = parseInt(args[0]);\""},{"typeIdentifier":"t_stringliteral_0c1a8486bc510a7ede2d6ec7dfb30c45202dc43afde15fdf2501cc3eeae30cf5","typeString":"literal_string \"const proofCount = parseInt(args[1]);\""},{"typeIdentifier":"t_stringliteral_abe52d44c20f744b69d5481751ec298eb2db180f0ca56993a16e428f92e70f5d","typeString":"literal_string \"const stepIn = parseInt(args[2]);\""},{"typeIdentifier":"t_stringliteral_7904cec2a94e31692dc0f81e147ea092663ba9a84cb087e66ce6dde125e15e2d","typeString":"literal_string \"// Generate Nova recursive proof - simplified for demo\""},{"typeIdentifier":"t_stringliteral_195643d118744d2ec0d1a54e5e7f0ea1c9423b74953f4069b3a84feee9b6881b","typeString":"literal_string \"const aggregatedHash = ethers.utils.keccak256(\""},{"typeIdentifier":"t_stringliteral_167ff92b50bacc7dde088c1c29391d26d1166935775a4b241ca28c200cb5523c","typeString":"literal_string \"  ethers.utils.defaultAbiCoder.encode(\""},{"typeIdentifier":"t_stringliteral_c1a5a58189ce70945f2adc2866d4f78d2c3754cf44eda4d6d01a3b4ef1527026","typeString":"literal_string \"    ['uint256', 'uint256', 'uint256'],\""},{"typeIdentifier":"t_stringliteral_233ea5e82a565c37a49a26a6f51c90e452e28bf61c65d14553c307a3fbad43c7","typeString":"literal_string \"    [batchId, proofCount, stepIn]\""},{"typeIdentifier":"t_stringliteral_a7baf54e7d9b01d6902c91b91bd0d193708bb0a03188923090e4b106456eeeda","typeString":"literal_string \"  )\""},{"typeIdentifier":"t_stringliteral_e92f0f20cf2e4b3379c539a9e910e973f63a7af257896912c7f9bc34a6b94b8a","typeString":"literal_string \");\""},{"typeIdentifier":"t_stringliteral_dddd1b140004b8a49f9886037019001f9912783746c304a0bba47dc5a4cc3a05","typeString":"literal_string \"const foldedInstance = {\""},{"typeIdentifier":"t_stringliteral_c73ddd9e0728cba6b8cfa27d052a56a3cf1d2ae51e7e9aabda667f79ffd6c9bc","typeString":"literal_string \"  stepIn: stepIn,\""},{"typeIdentifier":"t_stringliteral_bec37fa356d20147934b96c96762ce353f14ae2beff350de9c52e52dc4fce340","typeString":"literal_string \"  stepOut: stepIn + 1,\""},{"typeIdentifier":"t_stringliteral_1d9acc5f6a6f8a0c9941c4bbe52d13fa4a2efb9e4b1cf349647037193fab30c6","typeString":"literal_string \"  programCounter: Date.now(),\""},{"typeIdentifier":"t_stringliteral_e86253ec96000936e6fe1afd65764db26b7efc856d57150d56eaefd1be8d0a70","typeString":"literal_string \"  stateRootIn: aggregatedHash,\""},{"typeIdentifier":"t_stringliteral_497036d4081dbfbe64373055aa42c447f9b42c553571dc7ebb2874a0ce99d17e","typeString":"literal_string \"  stateRootOut: aggregatedHash,\""},{"typeIdentifier":"t_stringliteral_1ae6719a851cbd5b4b2159c8ff3b6d15e904f94c0a3df94aa68ecf5ad0457e02","typeString":"literal_string \"  nullifierHash: ethers.utils.keccak256(aggregatedHash),\""},{"typeIdentifier":"t_stringliteral_fe389bd85ae975b87e54edde95a44a61f1c0f41cf51154203448b439e43ac7d1","typeString":"literal_string \"  isValid: true\""},{"typeIdentifier":"t_stringliteral_943df9c5405306d093ea45555cf4cfd33f8847a816d9cdf458312be5e1213a35","typeString":"literal_string \"};\""},{"typeIdentifier":"t_stringliteral_ecb40148d8ce761ddb6a0e6e83e2d61f354f392d6811b9eb896e6e4a5cab9bca","typeString":"literal_string \"return Functions.encodeString(JSON.stringify({\""},{"typeIdentifier":"t_stringliteral_665d22c96fd2f439dd292838a93aa990deb3eba586a38fb2d473bf8a5227f924","typeString":"literal_string \"  batchId: batchId,\""},{"typeIdentifier":"t_stringliteral_ec2099114aa0a5a4ef072018a8f4a860405d6043914bc38802dd6b9b515a4b5a","typeString":"literal_string \"  aggregatedHash: aggregatedHash,\""},{"typeIdentifier":"t_stringliteral_8360992845659a25c15a0c572183a971b5fc8a87f3c01d9c8500787c89aac37b","typeString":"literal_string \"  foldedInstance: foldedInstance,\""},{"typeIdentifier":"t_stringliteral_4eb625f355b1658fadccbe4802628c373be9c9f2970b389002dea34aa59ccd52","typeString":"literal_string \"  recursiveProof: aggregatedHash\""},{"typeIdentifier":"t_stringliteral_a822f8f23141acb3616f78a8e9fcb514c4ff8ac33981c0a2eed971211d904f8a","typeString":"literal_string \"}));\""}],"expression":{"id":3868,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5496:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5500:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"5496:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:1137:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3866,"name":"string","nodeType":"ElementaryTypeName","src":"5489:6:20","typeDescriptions":{}}},"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5489:1145:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"5466:1168:20"},{"expression":{"arguments":[{"id":3899,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"6741:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3900,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"6750:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"expression":{"id":3901,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"6758:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":3902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6764:8:20","memberName":"proofIds","nodeType":"MemberAccess","referencedDeclaration":3528,"src":"6758:14:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6773:6:20","memberName":"length","nodeType":"MemberAccess","src":"6758:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3904,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"6781:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":3905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6787:14:20","memberName":"recursionDepth","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"6781:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3898,"name":"_sendNovaFunctionsRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"6715:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,uint256,uint256)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6715:87:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3907,"nodeType":"ExpressionStatement","src":"6715:87:20"}]},"documentation":{"id":3852,"nodeType":"StructuredDocumentation","src":"5164:79:20","text":" @dev Internal function to request recursive proof generation"},"id":3909,"implemented":true,"kind":"function","modifiers":[],"name":"_requestRecursiveProofGeneration","nameLocation":"5257:32:20","nodeType":"FunctionDefinition","parameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"batchId","nameLocation":"5298:7:20","nodeType":"VariableDeclaration","scope":3909,"src":"5290:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"5290:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5289:17:20"},"returnParameters":{"id":3856,"nodeType":"ParameterList","parameters":[],"src":"5316:0:20"},"scope":4335,"src":"5248:1561:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3999,"nodeType":"Block","src":"7059:828:20","statements":[{"assignments":[3925],"declarations":[{"constant":false,"id":3925,"mutability":"mutable","name":"req","nameLocation":"7101:3:20","nodeType":"VariableDeclaration","scope":3999,"src":"7069:35:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":3924,"nodeType":"UserDefinedTypeName","pathNode":{"id":3923,"name":"FunctionsRequest.Request","nameLocations":["7069:16:20","7086:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"7069:24:20"},"referencedDeclaration":256,"src":"7069:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"}],"id":3926,"nodeType":"VariableDeclarationStatement","src":"7069:35:20"},{"expression":{"arguments":[{"id":3930,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"7155:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3927,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"7114:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":3929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7118:36:20","memberName":"initializeRequestForInlineJavaScript","nodeType":"MemberAccess","referencedDeclaration":535,"src":"7114:40:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$256_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_Request_$256_memory_ptr_$","typeString":"function (struct FunctionsRequest.Request memory,string memory) pure"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7114:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3932,"nodeType":"ExpressionStatement","src":"7114:48:20"},{"assignments":[3937],"declarations":[{"constant":false,"id":3937,"mutability":"mutable","name":"args","nameLocation":"7252:4:20","nodeType":"VariableDeclaration","scope":3999,"src":"7236:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3935,"name":"string","nodeType":"ElementaryTypeName","src":"7236:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3936,"nodeType":"ArrayTypeName","src":"7236:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":3943,"initialValue":{"arguments":[{"hexValue":"33","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7272:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7259:12:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":3938,"name":"string","nodeType":"ElementaryTypeName","src":"7263:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3939,"nodeType":"ArrayTypeName","src":"7263:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7259:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7236:38:20"},{"expression":{"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3944,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"7284:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3946,"indexExpression":{"hexValue":"30","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7289:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3948,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"7310:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3947,"name":"uint256ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"7294:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7294:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7284:34:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3951,"nodeType":"ExpressionStatement","src":"7284:34:20"},{"expression":{"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3952,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"7328:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3954,"indexExpression":{"hexValue":"31","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7333:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7328:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3956,"name":"proofCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"7354:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3955,"name":"uint256ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"7338:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7338:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7328:37:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3959,"nodeType":"ExpressionStatement","src":"7328:37:20"},{"expression":{"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3960,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"7375:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3962,"indexExpression":{"hexValue":"32","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7380:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7375:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3964,"name":"recursionDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"7401:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3963,"name":"uint256ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"7385:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7385:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7375:41:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3967,"nodeType":"ExpressionStatement","src":"7375:41:20"},{"expression":{"arguments":[{"id":3971,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"7438:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"expression":{"id":3968,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"7426:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":3970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7430:7:20","memberName":"setArgs","nodeType":"MemberAccess","referencedDeclaration":652,"src":"7426:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$256_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$attached_to$_t_struct$_Request_$256_memory_ptr_$","typeString":"function (struct FunctionsRequest.Request memory,string memory[] memory) pure"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7426:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3973,"nodeType":"ExpressionStatement","src":"7426:17:20"},{"assignments":[3975],"declarations":[{"constant":false,"id":3975,"mutability":"mutable","name":"functionsRequestId","nameLocation":"7462:18:20","nodeType":"VariableDeclaration","scope":3999,"src":"7454:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7454:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3984,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3977,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"7509:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":3978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7513:10:20","memberName":"encodeCBOR","nodeType":"MemberAccess","referencedDeclaration":471,"src":"7509:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$256_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_struct$_Request_$256_memory_ptr_$","typeString":"function (struct FunctionsRequest.Request memory) pure returns (bytes memory)"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7509:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3980,"name":"s_functionsSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"7539:25:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3981,"name":"s_functionsGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"7578:19:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3982,"name":"s_functionsDonId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"7611:16:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3976,"name":"_sendRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"7483:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint64_$_t_uint32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint64,uint32,bytes32) returns (bytes32)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:154:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7454:183:20"},{"expression":{"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3985,"name":"functionsRequestToProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"7730:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3987,"indexExpression":{"id":3986,"name":"functionsRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"7756:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7730:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"7778:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3130303030","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7788:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7778:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7730:63:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3992,"nodeType":"ExpressionStatement","src":"7730:63:20"},{"eventCall":{"arguments":[{"id":3994,"name":"functionsRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"7838:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"6e6f76612d6261746368","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7858:12:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_2603e44af7c11b25ec36eff7f2b4037c68b54cec3b59aa2b19db0ff3a6c0d0af","typeString":"literal_string \"nova-batch\""},"value":"nova-batch"},{"id":3996,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"7872:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_2603e44af7c11b25ec36eff7f2b4037c68b54cec3b59aa2b19db0ff3a6c0d0af","typeString":"literal_string \"nova-batch\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3993,"name":"FunctionsRequestSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"7817:20:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,string memory,uint256)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7817:63:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3998,"nodeType":"EmitStatement","src":"7812:68:20"}]},"documentation":{"id":3910,"nodeType":"StructuredDocumentation","src":"6819:70:20","text":" @dev Helper function to send Nova Functions request"},"id":4000,"implemented":true,"kind":"function","modifiers":[],"name":"_sendNovaFunctionsRequest","nameLocation":"6903:25:20","nodeType":"FunctionDefinition","parameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"batchId","nameLocation":"6946:7:20","nodeType":"VariableDeclaration","scope":4000,"src":"6938:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"6938:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3914,"mutability":"mutable","name":"source","nameLocation":"6977:6:20","nodeType":"VariableDeclaration","scope":4000,"src":"6963:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3913,"name":"string","nodeType":"ElementaryTypeName","src":"6963:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"proofCount","nameLocation":"7001:10:20","nodeType":"VariableDeclaration","scope":4000,"src":"6993:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"6993:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"recursionDepth","nameLocation":"7029:14:20","nodeType":"VariableDeclaration","scope":4000,"src":"7021:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"7021:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6928:121:20"},"returnParameters":{"id":3920,"nodeType":"ParameterList","parameters":[],"src":"7059:0:20"},"scope":4335,"src":"6894:993:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5241],"body":{"id":4043,"nodeType":"Block","src":"8112:379:20","statements":[{"assignments":[4012],"declarations":[{"constant":false,"id":4012,"mutability":"mutable","name":"requestType","nameLocation":"8130:11:20","nodeType":"VariableDeclaration","scope":4043,"src":"8122:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"8122:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4016,"initialValue":{"baseExpression":{"id":4013,"name":"functionsRequestToProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"8144:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4015,"indexExpression":{"id":4014,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"8170:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8144:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8122:58:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"requestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"8203:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3130303030","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8217:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8203:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4041,"nodeType":"Block","src":"8367:118:20","statements":[{"expression":{"arguments":[{"id":4036,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"8449:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4037,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"8460:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4038,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"8470:3:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4033,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8427:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NovaProofAggregator_$4335_$","typeString":"type(contract super NovaProofAggregator)"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8433:15:20","memberName":"_fulfillRequest","nodeType":"MemberAccess","referencedDeclaration":5241,"src":"8427:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory,bytes memory)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8427:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4040,"nodeType":"ExpressionStatement","src":"8427:47:20"}]},"id":4042,"nodeType":"IfStatement","src":"8199:286:20","trueBody":{"id":4032,"nodeType":"Block","src":"8224:137:20","statements":[{"assignments":[4021],"declarations":[{"constant":false,"id":4021,"mutability":"mutable","name":"batchId","nameLocation":"8264:7:20","nodeType":"VariableDeclaration","scope":4032,"src":"8256:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"8256:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4025,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4022,"name":"requestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"8274:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3130303030","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8288:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8274:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8256:37:20"},{"expression":{"arguments":[{"id":4027,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"8327:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4028,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"8336:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4029,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"8346:3:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4026,"name":"_handleNovaResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"8307:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,bytes memory,bytes memory)"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8307:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4031,"nodeType":"ExpressionStatement","src":"8307:43:20"}]}}]},"documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"7893:73:20","text":" @dev Override fulfillRequest to handle Nova operations"},"id":4044,"implemented":true,"kind":"function","modifiers":[],"name":"_fulfillRequest","nameLocation":"7980:15:20","nodeType":"FunctionDefinition","overrides":{"id":4009,"nodeType":"OverrideSpecifier","overrides":[],"src":"8103:8:20"},"parameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"requestId","nameLocation":"8013:9:20","nodeType":"VariableDeclaration","scope":4044,"src":"8005:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8005:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"response","nameLocation":"8045:8:20","nodeType":"VariableDeclaration","scope":4044,"src":"8032:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4004,"name":"bytes","nodeType":"ElementaryTypeName","src":"8032:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"err","nameLocation":"8076:3:20","nodeType":"VariableDeclaration","scope":4044,"src":"8063:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4006,"name":"bytes","nodeType":"ElementaryTypeName","src":"8063:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7995:90:20"},"returnParameters":{"id":4010,"nodeType":"ParameterList","parameters":[],"src":"8112:0:20"},"scope":4335,"src":"7971:520:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4092,"nodeType":"Block","src":"8768:394:20","statements":[{"assignments":[4058],"declarations":[{"constant":false,"id":4058,"mutability":"mutable","name":"batch","nameLocation":"8806:5:20","nodeType":"VariableDeclaration","scope":4092,"src":"8778:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"},"typeName":{"id":4057,"nodeType":"UserDefinedTypeName","pathNode":{"id":4056,"name":"RecursiveProofBatch","nameLocations":["8778:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":3552,"src":"8778:19:20"},"referencedDeclaration":3552,"src":"8778:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"}},"visibility":"internal"}],"id":4062,"initialValue":{"baseExpression":{"id":4059,"name":"recursiveProofBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"8814:21:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RecursiveProofBatch_$3552_storage_$","typeString":"mapping(uint256 => struct NovaProofAggregator.RecursiveProofBatch storage ref)"}},"id":4061,"indexExpression":{"id":4060,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"8836:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8814:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8778:66:20"},{"expression":{"arguments":[{"expression":{"id":4064,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"8862:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8868:11:20","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":3541,"src":"8862:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726576696f757320666f6c64696e67206e6f7420636f6d706c65746564","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8881:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f5c5e606d88fc8e1a1b298fd20e1a9b5be31b7996a54cdae9581524c45e3d1c","typeString":"literal_string \"Previous folding not completed\""},"value":"Previous folding not completed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f5c5e606d88fc8e1a1b298fd20e1a9b5be31b7996a54cdae9581524c45e3d1c","typeString":"literal_string \"Previous folding not completed\""}],"id":4063,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8854:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8854:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4068,"nodeType":"ExpressionStatement","src":"8854:60:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4070,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"8932:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8938:14:20","memberName":"recursionDepth","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"8932:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4072,"name":"maxRecursionDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"8955:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820726563757273696f6e2064657074682072656163686564","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8974:29:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee600787fa50fc8df6ccef19161937e2fd7e64c2efb06c9a5f29dd80283eaa47","typeString":"literal_string \"Max recursion depth reached\""},"value":"Max recursion depth reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee600787fa50fc8df6ccef19161937e2fd7e64c2efb06c9a5f29dd80283eaa47","typeString":"literal_string \"Max recursion depth reached\""}],"id":4069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8924:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8924:80:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4076,"nodeType":"ExpressionStatement","src":"8924:80:20"},{"expression":{"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9023:22:20","subExpression":{"expression":{"id":4077,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"9023:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9029:14:20","memberName":"recursionDepth","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"9023:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4081,"nodeType":"ExpressionStatement","src":"9023:22:20"},{"expression":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4082,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"9055:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9061:11:20","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":3541,"src":"9055:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9075:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9055:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4087,"nodeType":"ExpressionStatement","src":"9055:25:20"},{"expression":{"arguments":[{"id":4089,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"9147:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4088,"name":"_requestRecursiveProofGeneration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"9114:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9114:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4091,"nodeType":"ExpressionStatement","src":"9114:41:20"}]},"documentation":{"id":4045,"nodeType":"StructuredDocumentation","src":"8501:124:20","text":" @dev Continue recursive folding with additional depth\n @param batchId The batch to continue folding"},"functionSelector":"683dd777","id":4093,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4050,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"8719:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4051,"kind":"modifierInvocation","modifierName":{"id":4049,"name":"validBatch","nameLocations":["8708:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":3595,"src":"8708:10:20"},"nodeType":"ModifierInvocation","src":"8708:19:20"},{"arguments":[{"id":4053,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"8755:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4054,"kind":"modifierInvocation","modifierName":{"id":4052,"name":"onlyBatchRequester","nameLocations":["8736:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":3612,"src":"8736:18:20"},"nodeType":"ModifierInvocation","src":"8736:27:20"}],"name":"continueRecursiveFolding","nameLocation":"8639:24:20","nodeType":"FunctionDefinition","parameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"batchId","nameLocation":"8672:7:20","nodeType":"VariableDeclaration","scope":4093,"src":"8664:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"8664:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8663:17:20"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[],"src":"8768:0:20"},"scope":4335,"src":"8630:532:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4186,"nodeType":"Block","src":"9366:1036:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4103,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"9380:3:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9384:6:20","memberName":"length","nodeType":"MemberAccess","src":"9380:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9393:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9380:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4117,"nodeType":"IfStatement","src":"9376:147:20","trueBody":{"id":4116,"nodeType":"Block","src":"9396:127:20","statements":[{"eventCall":{"arguments":[{"arguments":[{"id":4110,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"9445:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9437:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9437:7:20","typeDescriptions":{}}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9437:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4112,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"9455:3:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4107,"name":"FunctionsRequestError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"9415:21:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9415:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4114,"nodeType":"EmitStatement","src":"9410:49:20"},{"functionReturnParameters":4102,"id":4115,"nodeType":"Return","src":"9506:7:20"}]}},{"assignments":[4120],"declarations":[{"constant":false,"id":4120,"mutability":"mutable","name":"batch","nameLocation":"9569:5:20","nodeType":"VariableDeclaration","scope":4186,"src":"9541:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"},"typeName":{"id":4119,"nodeType":"UserDefinedTypeName","pathNode":{"id":4118,"name":"RecursiveProofBatch","nameLocations":["9541:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":3552,"src":"9541:19:20"},"referencedDeclaration":3552,"src":"9541:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"}},"visibility":"internal"}],"id":4124,"initialValue":{"baseExpression":{"id":4121,"name":"recursiveProofBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"9577:21:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RecursiveProofBatch_$3552_storage_$","typeString":"mapping(uint256 => struct NovaProofAggregator.RecursiveProofBatch storage ref)"}},"id":4123,"indexExpression":{"id":4122,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"9599:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9577:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9541:66:20"},{"expression":{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4125,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"9679:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9685:14:20","memberName":"aggregatedHash","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"9679:20:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4129,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"9712:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4128,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9702:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9679:42:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4132,"nodeType":"ExpressionStatement","src":"9679:42:20"},{"expression":{"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4133,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"9731:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9737:11:20","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":3541,"src":"9731:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9751:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9731:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4138,"nodeType":"ExpressionStatement","src":"9731:24:20"},{"expression":{"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4139,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"9827:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9833:14:20","memberName":"foldedInstance","nodeType":"MemberAccess","referencedDeclaration":3539,"src":"9827:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_NovaInstance_$3525_storage","typeString":"struct NovaProofAggregator.NovaInstance storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4143,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"9885:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9891:14:20","memberName":"recursionDepth","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"9885:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4145,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"9928:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9934:14:20","memberName":"recursionDepth","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"9928:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9951:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9928:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4149,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9982:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9988:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"9982:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"expression":{"id":4154,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"10051:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10057:8:20","memberName":"proofIds","nodeType":"MemberAccess","referencedDeclaration":3528,"src":"10051:14:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}],"expression":{"id":4152,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10034:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10038:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"10034:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10034:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4151,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10024:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10024:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4158,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"10095:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10101:14:20","memberName":"aggregatedHash","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"10095:20:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":4163,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"10171:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4164,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"10180:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10186:9:20","memberName":"requester","nodeType":"MemberAccess","referencedDeclaration":3530,"src":"10180:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4161,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10154:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10158:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"10154:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10154:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4160,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10144:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"74727565","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10220:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4142,"name":"NovaInstance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"9850:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_NovaInstance_$3525_storage_ptr_$","typeString":"type(struct NovaProofAggregator.NovaInstance storage pointer)"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9877:6:20","9919:7:20","9966:14:20","10011:11:20","10081:12:20","10129:13:20","10211:7:20"],"names":["stepIn","stepOut","programCounter","stateRootIn","stateRootOut","nullifierHash","isValid"],"nodeType":"FunctionCall","src":"9850:385:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NovaInstance_$3525_memory_ptr","typeString":"struct NovaProofAggregator.NovaInstance memory"}},"src":"9827:408:20","typeDescriptions":{"typeIdentifier":"t_struct$_NovaInstance_$3525_storage","typeString":"struct NovaProofAggregator.NovaInstance storage ref"}},"id":4171,"nodeType":"ExpressionStatement","src":"9827:408:20"},{"eventCall":{"arguments":[{"id":4173,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"10280:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4174,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"10289:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10295:14:20","memberName":"aggregatedHash","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"10289:20:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"74727565","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10311:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4172,"name":"NovaFoldingCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"10259:20:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$","typeString":"function (uint256,bytes32,bool)"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10259:57:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4178,"nodeType":"EmitStatement","src":"10254:62:20"},{"eventCall":{"arguments":[{"id":4180,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"10355:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4181,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"10364:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10370:14:20","memberName":"recursionDepth","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"10364:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4183,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"10386:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4179,"name":"RecursiveProofGenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"10331:23:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,bytes memory)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10331:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4185,"nodeType":"EmitStatement","src":"10326:69:20"}]},"documentation":{"id":4094,"nodeType":"StructuredDocumentation","src":"9172:61:20","text":" @dev Handle Nova proof generation response"},"id":4187,"implemented":true,"kind":"function","modifiers":[],"name":"_handleNovaResponse","nameLocation":"9247:19:20","nodeType":"FunctionDefinition","parameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"batchId","nameLocation":"9284:7:20","nodeType":"VariableDeclaration","scope":4187,"src":"9276:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4095,"name":"uint256","nodeType":"ElementaryTypeName","src":"9276:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4098,"mutability":"mutable","name":"response","nameLocation":"9315:8:20","nodeType":"VariableDeclaration","scope":4187,"src":"9302:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4097,"name":"bytes","nodeType":"ElementaryTypeName","src":"9302:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"err","nameLocation":"9347:3:20","nodeType":"VariableDeclaration","scope":4187,"src":"9334:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4099,"name":"bytes","nodeType":"ElementaryTypeName","src":"9334:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9266:90:20"},"returnParameters":{"id":4102,"nodeType":"ParameterList","parameters":[],"src":"9366:0:20"},"scope":4335,"src":"9238:1164:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4224,"nodeType":"Block","src":"10764:297:20","statements":[{"assignments":[4202],"declarations":[{"constant":false,"id":4202,"mutability":"mutable","name":"batch","nameLocation":"10802:5:20","nodeType":"VariableDeclaration","scope":4224,"src":"10774:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"},"typeName":{"id":4201,"nodeType":"UserDefinedTypeName","pathNode":{"id":4200,"name":"RecursiveProofBatch","nameLocations":["10774:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":3552,"src":"10774:19:20"},"referencedDeclaration":3552,"src":"10774:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"}},"visibility":"internal"}],"id":4206,"initialValue":{"baseExpression":{"id":4203,"name":"recursiveProofBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"10810:21:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RecursiveProofBatch_$3552_storage_$","typeString":"mapping(uint256 => struct NovaProofAggregator.RecursiveProofBatch storage ref)"}},"id":4205,"indexExpression":{"id":4204,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"10832:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10810:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10774:66:20"},{"expression":{"arguments":[{"expression":{"id":4208,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"10858:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10864:11:20","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":3541,"src":"10858:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4261746368206e6f7420636f6d706c65746564","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10877:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_503f70121a3cdb9143b195fb3a20fc628c6845f37f560a724a08f833250c7909","typeString":"literal_string \"Batch not completed\""},"value":"Batch not completed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_503f70121a3cdb9143b195fb3a20fc628c6845f37f560a724a08f833250c7909","typeString":"literal_string \"Batch not completed\""}],"id":4207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10850:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10850:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4212,"nodeType":"ExpressionStatement","src":"10850:49:20"},{"assignments":[4214],"declarations":[{"constant":false,"id":4214,"mutability":"mutable","name":"computedHash","nameLocation":"10970:12:20","nodeType":"VariableDeclaration","scope":4224,"src":"10962:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10962:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4218,"initialValue":{"arguments":[{"id":4216,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"10995:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4215,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10985:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10985:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10962:39:20"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4219,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"11018:12:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4220,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"11034:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11040:14:20","memberName":"aggregatedHash","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"11034:20:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11018:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4199,"id":4223,"nodeType":"Return","src":"11011:43:20"}]},"documentation":{"id":4188,"nodeType":"StructuredDocumentation","src":"10412:205:20","text":" @dev Verify Nova recursive proof on-chain\n @param batchId The batch ID to verify\n @param proof The recursive proof to verify\n @return isValid Whether the proof is valid"},"functionSelector":"3f5ef0de","id":4225,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4195,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"10732:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4196,"kind":"modifierInvocation","modifierName":{"id":4194,"name":"validBatch","nameLocations":["10721:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":3595,"src":"10721:10:20"},"nodeType":"ModifierInvocation","src":"10721:19:20"}],"name":"verifyNovaProof","nameLocation":"10631:15:20","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4190,"mutability":"mutable","name":"batchId","nameLocation":"10664:7:20","nodeType":"VariableDeclaration","scope":4225,"src":"10656:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"10656:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4192,"mutability":"mutable","name":"proof","nameLocation":"10695:5:20","nodeType":"VariableDeclaration","scope":4225,"src":"10682:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4191,"name":"bytes","nodeType":"ElementaryTypeName","src":"10682:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10646:60:20"},"returnParameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"isValid","nameLocation":"10755:7:20","nodeType":"VariableDeclaration","scope":4225,"src":"10750:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4197,"name":"bool","nodeType":"ElementaryTypeName","src":"10750:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10749:14:20"},"scope":4335,"src":"10622:439:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4268,"nodeType":"Block","src":"11479:295:20","statements":[{"assignments":[4249],"declarations":[{"constant":false,"id":4249,"mutability":"mutable","name":"batch","nameLocation":"11517:5:20","nodeType":"VariableDeclaration","scope":4268,"src":"11489:33:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"},"typeName":{"id":4248,"nodeType":"UserDefinedTypeName","pathNode":{"id":4247,"name":"RecursiveProofBatch","nameLocations":["11489:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":3552,"src":"11489:19:20"},"referencedDeclaration":3552,"src":"11489:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch"}},"visibility":"internal"}],"id":4253,"initialValue":{"baseExpression":{"id":4250,"name":"recursiveProofBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"11525:21:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RecursiveProofBatch_$3552_storage_$","typeString":"mapping(uint256 => struct NovaProofAggregator.RecursiveProofBatch storage ref)"}},"id":4252,"indexExpression":{"id":4251,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"11547:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11525:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11489:66:20"},{"expression":{"components":[{"expression":{"id":4254,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11586:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11592:8:20","memberName":"proofIds","nodeType":"MemberAccess","referencedDeclaration":3528,"src":"11586:14:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},{"expression":{"id":4256,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11614:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11620:9:20","memberName":"requester","nodeType":"MemberAccess","referencedDeclaration":3530,"src":"11614:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4258,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11643:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11649:9:20","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3532,"src":"11643:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4260,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11672:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11678:14:20","memberName":"recursionDepth","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"11672:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4262,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11706:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11712:14:20","memberName":"aggregatedHash","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"11706:20:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4264,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11740:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage_ptr","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage pointer"}},"id":4265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11746:11:20","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":3541,"src":"11740:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11572:195:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_storage_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bool_$","typeString":"tuple(uint256[] storage ref,address,uint256,uint256,bytes32,bool)"}},"functionReturnParameters":4246,"id":4267,"nodeType":"Return","src":"11565:202:20"}]},"documentation":{"id":4226,"nodeType":"StructuredDocumentation","src":"11071:57:20","text":" @dev Get recursive proof batch details"},"functionSelector":"84a088e5","id":4269,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4231,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"11234:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4232,"kind":"modifierInvocation","modifierName":{"id":4230,"name":"validBatch","nameLocations":["11223:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":3595,"src":"11223:10:20"},"nodeType":"ModifierInvocation","src":"11223:19:20"}],"name":"getRecursiveProofBatch","nameLocation":"11142:22:20","nodeType":"FunctionDefinition","parameters":{"id":4229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"batchId","nameLocation":"11173:7:20","nodeType":"VariableDeclaration","scope":4269,"src":"11165:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4227,"name":"uint256","nodeType":"ElementaryTypeName","src":"11165:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11164:17:20"},"returnParameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"proofIds","nameLocation":"11291:8:20","nodeType":"VariableDeclaration","scope":4269,"src":"11274:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4233,"name":"uint256","nodeType":"ElementaryTypeName","src":"11274:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4234,"nodeType":"ArrayTypeName","src":"11274:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"requester","nameLocation":"11321:9:20","nodeType":"VariableDeclaration","scope":4269,"src":"11313:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4236,"name":"address","nodeType":"ElementaryTypeName","src":"11313:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"timestamp","nameLocation":"11352:9:20","nodeType":"VariableDeclaration","scope":4269,"src":"11344:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4238,"name":"uint256","nodeType":"ElementaryTypeName","src":"11344:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4241,"mutability":"mutable","name":"recursionDepth","nameLocation":"11383:14:20","nodeType":"VariableDeclaration","scope":4269,"src":"11375:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4240,"name":"uint256","nodeType":"ElementaryTypeName","src":"11375:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4243,"mutability":"mutable","name":"aggregatedHash","nameLocation":"11419:14:20","nodeType":"VariableDeclaration","scope":4269,"src":"11411:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11411:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4245,"mutability":"mutable","name":"isCompleted","nameLocation":"11452:11:20","nodeType":"VariableDeclaration","scope":4269,"src":"11447:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4244,"name":"bool","nodeType":"ElementaryTypeName","src":"11447:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11260:213:20"},"scope":4335,"src":"11133:641:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4286,"nodeType":"Block","src":"11993:69:20","statements":[{"expression":{"expression":{"baseExpression":{"id":4281,"name":"recursiveProofBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"12010:21:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RecursiveProofBatch_$3552_storage_$","typeString":"mapping(uint256 => struct NovaProofAggregator.RecursiveProofBatch storage ref)"}},"id":4283,"indexExpression":{"id":4282,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"12032:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12010:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_RecursiveProofBatch_$3552_storage","typeString":"struct NovaProofAggregator.RecursiveProofBatch storage ref"}},"id":4284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12041:14:20","memberName":"foldedInstance","nodeType":"MemberAccess","referencedDeclaration":3539,"src":"12010:45:20","typeDescriptions":{"typeIdentifier":"t_struct$_NovaInstance_$3525_storage","typeString":"struct NovaProofAggregator.NovaInstance storage ref"}},"functionReturnParameters":4280,"id":4285,"nodeType":"Return","src":"12003:52:20"}]},"documentation":{"id":4270,"nodeType":"StructuredDocumentation","src":"11784:55:20","text":" @dev Get folded instance for a batch"},"functionSelector":"fa0c7a18","id":4287,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4275,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"11940:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4276,"kind":"modifierInvocation","modifierName":{"id":4274,"name":"validBatch","nameLocations":["11929:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":3595,"src":"11929:10:20"},"nodeType":"ModifierInvocation","src":"11929:19:20"}],"name":"getFoldedInstance","nameLocation":"11853:17:20","nodeType":"FunctionDefinition","parameters":{"id":4273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4272,"mutability":"mutable","name":"batchId","nameLocation":"11879:7:20","nodeType":"VariableDeclaration","scope":4287,"src":"11871:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"11871:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11870:17:20"},"returnParameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4287,"src":"11967:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_NovaInstance_$3525_memory_ptr","typeString":"struct NovaProofAggregator.NovaInstance"},"typeName":{"id":4278,"nodeType":"UserDefinedTypeName","pathNode":{"id":4277,"name":"NovaInstance","nameLocations":["11967:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3525,"src":"11967:12:20"},"referencedDeclaration":3525,"src":"11967:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_NovaInstance_$3525_storage_ptr","typeString":"struct NovaProofAggregator.NovaInstance"}},"visibility":"internal"}],"src":"11966:21:20"},"scope":4335,"src":"11844:218:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4333,"nodeType":"Block","src":"12318:359:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4300,"name":"_maxRecursionDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"12336:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12336:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4303,"name":"_maxRecursionDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"12362:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3332","id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12384:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12362:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12336:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d6178206465707468","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12388:19:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_56992a7e93edff0678df9abc6c047ed75c907e31e743b45c951b87a8e94e7252","typeString":"literal_string \"Invalid max depth\""},"value":"Invalid max depth"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56992a7e93edff0678df9abc6c047ed75c907e31e743b45c951b87a8e94e7252","typeString":"literal_string \"Invalid max depth\""}],"id":4299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12328:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12328:80:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4309,"nodeType":"ExpressionStatement","src":"12328:80:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"_minProofsPerBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"12426:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12448:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12426:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4314,"name":"_minProofsPerBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"12453:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4315,"name":"_maxProofsPerBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"12475:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12453:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12426:67:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642062617463682073697a6573","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12495:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_651ce6a26faa81a066524f243c405c22eca4bc6a332e2bc8b32a5d7988b35ad7","typeString":"literal_string \"Invalid batch sizes\""},"value":"Invalid batch sizes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_651ce6a26faa81a066524f243c405c22eca4bc6a332e2bc8b32a5d7988b35ad7","typeString":"literal_string \"Invalid batch sizes\""}],"id":4310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12418:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12418:99:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4320,"nodeType":"ExpressionStatement","src":"12418:99:20"},{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4321,"name":"maxRecursionDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"12536:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4322,"name":"_maxRecursionDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"12556:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12536:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4324,"nodeType":"ExpressionStatement","src":"12536:38:20"},{"expression":{"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4325,"name":"minProofsPerBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"12584:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4326,"name":"_minProofsPerBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"12604:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12584:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4328,"nodeType":"ExpressionStatement","src":"12584:38:20"},{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4329,"name":"maxProofsPerBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"12632:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4330,"name":"_maxProofsPerBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"12652:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12632:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4332,"nodeType":"ExpressionStatement","src":"12632:38:20"}]},"documentation":{"id":4288,"nodeType":"StructuredDocumentation","src":"12072:69:20","text":" @dev Admin function to update recursion parameters"},"functionSelector":"2091f938","id":4334,"implemented":true,"kind":"function","modifiers":[{"id":4297,"kind":"modifierInvocation","modifierName":{"id":4296,"name":"onlyContractOwner","nameLocations":["12300:17:20"],"nodeType":"IdentifierPath","referencedDeclaration":4542,"src":"12300:17:20"},"nodeType":"ModifierInvocation","src":"12300:17:20"}],"name":"updateRecursionParams","nameLocation":"12155:21:20","nodeType":"FunctionDefinition","parameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"_maxRecursionDepth","nameLocation":"12194:18:20","nodeType":"VariableDeclaration","scope":4334,"src":"12186:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"12186:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4292,"mutability":"mutable","name":"_minProofsPerBatch","nameLocation":"12230:18:20","nodeType":"VariableDeclaration","scope":4334,"src":"12222:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4291,"name":"uint256","nodeType":"ElementaryTypeName","src":"12222:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"_maxProofsPerBatch","nameLocation":"12266:18:20","nodeType":"VariableDeclaration","scope":4334,"src":"12258:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4293,"name":"uint256","nodeType":"ElementaryTypeName","src":"12258:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12176:114:20"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[],"src":"12318:0:20"},"scope":4335,"src":"12146:531:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4336,"src":"406:12273:20","usedErrors":[258,262,264,764,2400,2408,2410],"usedEvents":[758,762,892,898,2569,3494,3502,3510,4369,4377,4385,4393,4401,4407]}],"src":"32:12648:20"},"id":20},"contracts/ZKProofAggregator.sol":{"ast":{"absolutePath":"contracts/ZKProofAggregator.sol","exportedSymbols":{"AggregatorV3Interface":[1084],"AutomationCompatibleInterface":[67],"FunctionsClient":[854],"FunctionsRequest":[678],"Groth16Verifier":[3094],"Pairing":[3473],"VRFConsumerBaseV2Plus":[2544],"VRFV2PlusClient":[2707],"ZKProofAggregator":[5929]},"id":5930,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4337,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:21"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","id":4339,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5930,"sourceUnit":1085,"src":"58:112:21","symbolAliases":[{"foreign":{"id":4338,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"66:21:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","file":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","id":4341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5930,"sourceUnit":2545,"src":"171:102:21","symbolAliases":[{"foreign":{"id":4340,"name":"VRFConsumerBaseV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"179:21:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","id":4343,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5930,"sourceUnit":2708,"src":"274:100:21","symbolAliases":[{"foreign":{"id":4342,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"282:15:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_3_0/FunctionsClient.sol","file":"@chainlink/contracts/src/v0.8/functions/v1_3_0/FunctionsClient.sol","id":4345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5930,"sourceUnit":855,"src":"375:99:21","symbolAliases":[{"foreign":{"id":4344,"name":"FunctionsClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"383:15:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","file":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","id":4347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5930,"sourceUnit":679,"src":"475:111:21","symbolAliases":[{"foreign":{"id":4346,"name":"FunctionsRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"483:16:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","file":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","id":4349,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5930,"sourceUnit":49,"src":"587:112:21","symbolAliases":[{"foreign":{"id":4348,"name":"AutomationCompatibleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"595:29:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/Groth16Verifier.sol","file":"./Groth16Verifier.sol","id":4350,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5930,"sourceUnit":3474,"src":"763:31:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4352,"name":"VRFConsumerBaseV2Plus","nameLocations":["1037:21:21"],"nodeType":"IdentifierPath","referencedDeclaration":2544,"src":"1037:21:21"},"id":4353,"nodeType":"InheritanceSpecifier","src":"1037:21:21"},{"baseName":{"id":4354,"name":"FunctionsClient","nameLocations":["1060:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"1060:15:21"},"id":4355,"nodeType":"InheritanceSpecifier","src":"1060:15:21"},{"baseName":{"id":4356,"name":"AutomationCompatibleInterface","nameLocations":["1077:29:21"],"nodeType":"IdentifierPath","referencedDeclaration":67,"src":"1077:29:21"},"id":4357,"nodeType":"InheritanceSpecifier","src":"1077:29:21"}],"canonicalName":"ZKProofAggregator","contractDependencies":[],"contractKind":"contract","documentation":{"id":4351,"nodeType":"StructuredDocumentation","src":"796:210:21","text":" @title ZKProofAggregator\n @dev Main contract for aggregating ZK proofs with Chainlink services\n @notice This contract enables trustless cross-chain state verification through ZK proof aggregation"},"fullyImplemented":true,"id":5929,"linearizedBaseContracts":[5929,67,854,81,2544,875,1038,1100,2576],"name":"ZKProofAggregator","nameLocation":"1016:17:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4361,"libraryName":{"id":4358,"name":"FunctionsRequest","nameLocations":["1119:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":678,"src":"1119:16:21"},"nodeType":"UsingForDirective","src":"1113:52:21","typeName":{"id":4360,"nodeType":"UserDefinedTypeName","pathNode":{"id":4359,"name":"FunctionsRequest.Request","nameLocations":["1140:16:21","1157:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"1140:24:21"},"referencedDeclaration":256,"src":"1140:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}}},{"anonymous":false,"eventSelector":"7ef8ca77fdc89c79f093f2a6b2348b1fcda0beb941ce31ce9f2d9d260c4db9d2","id":4369,"name":"ProofRequested","nameLocation":"1191:14:21","nodeType":"EventDefinition","parameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1222:9:21","nodeType":"VariableDeclaration","scope":4369,"src":"1206:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1206:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4365,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"1249:9:21","nodeType":"VariableDeclaration","scope":4369,"src":"1233:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4364,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4367,"indexed":false,"mutability":"mutable","name":"blockNumber","nameLocation":"1268:11:21","nodeType":"VariableDeclaration","scope":4369,"src":"1260:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1260:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1205:75:21"},"src":"1185:96:21"},{"anonymous":false,"eventSelector":"6dd2118914ad2b9a98780fafd92846eebe9361998a810f1a05f67033b17e2cdd","id":4377,"name":"ProofVerified","nameLocation":"1292:13:21","nodeType":"EventDefinition","parameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4371,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1322:9:21","nodeType":"VariableDeclaration","scope":4377,"src":"1306:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4373,"indexed":false,"mutability":"mutable","name":"isValid","nameLocation":"1338:7:21","nodeType":"VariableDeclaration","scope":4377,"src":"1333:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4372,"name":"bool","nodeType":"ElementaryTypeName","src":"1333:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4375,"indexed":false,"mutability":"mutable","name":"stateRoot","nameLocation":"1355:9:21","nodeType":"VariableDeclaration","scope":4377,"src":"1347:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1347:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1305:60:21"},"src":"1286:80:21"},{"anonymous":false,"eventSelector":"2374d5481494ad7962d4bd1b98b91e9f3117c9b66533b2804be3d76c41a49088","id":4385,"name":"RandomnessReceived","nameLocation":"1377:18:21","nodeType":"EventDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1412:9:21","nodeType":"VariableDeclaration","scope":4385,"src":"1396:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1396:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4381,"indexed":false,"mutability":"mutable","name":"randomValue","nameLocation":"1431:11:21","nodeType":"VariableDeclaration","scope":4385,"src":"1423:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4383,"indexed":false,"mutability":"mutable","name":"selectedBlock","nameLocation":"1452:13:21","nodeType":"VariableDeclaration","scope":4385,"src":"1444:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1444:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1395:71:21"},"src":"1371:96:21"},{"anonymous":false,"eventSelector":"89652d00e157965d54f5ad31af9352416c4e90b879711ec122680d4e3a1de9a6","id":4393,"name":"FunctionsRequestSent","nameLocation":"1478:20:21","nodeType":"EventDefinition","parameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1515:9:21","nodeType":"VariableDeclaration","scope":4393,"src":"1499:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1499:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4389,"indexed":false,"mutability":"mutable","name":"sourceChain","nameLocation":"1533:11:21","nodeType":"VariableDeclaration","scope":4393,"src":"1526:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4388,"name":"string","nodeType":"ElementaryTypeName","src":"1526:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4391,"indexed":false,"mutability":"mutable","name":"blockNumber","nameLocation":"1554:11:21","nodeType":"VariableDeclaration","scope":4393,"src":"1546:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1546:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1498:68:21"},"src":"1472:95:21"},{"anonymous":false,"eventSelector":"50348c1af87d1d2e61e0a7e9bf83a9c67f047d8de73be6b88acac8655a97581e","id":4401,"name":"FunctionsResponseReceived","nameLocation":"1578:25:21","nodeType":"EventDefinition","parameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4395,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1620:9:21","nodeType":"VariableDeclaration","scope":4401,"src":"1604:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4397,"indexed":false,"mutability":"mutable","name":"proof","nameLocation":"1637:5:21","nodeType":"VariableDeclaration","scope":4401,"src":"1631:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4396,"name":"bytes","nodeType":"ElementaryTypeName","src":"1631:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4399,"indexed":false,"mutability":"mutable","name":"publicInputs","nameLocation":"1650:12:21","nodeType":"VariableDeclaration","scope":4401,"src":"1644:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4398,"name":"bytes","nodeType":"ElementaryTypeName","src":"1644:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1603:60:21"},"src":"1572:92:21"},{"anonymous":false,"eventSelector":"8117ad48db1a08344670d33acdeb14d7ec953b1119dafa9ab361e5e721d43562","id":4407,"name":"FunctionsRequestError","nameLocation":"1675:21:21","nodeType":"EventDefinition","parameters":{"id":4406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4403,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1713:9:21","nodeType":"VariableDeclaration","scope":4407,"src":"1697:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1697:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4405,"indexed":false,"mutability":"mutable","name":"error","nameLocation":"1730:5:21","nodeType":"VariableDeclaration","scope":4407,"src":"1724:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4404,"name":"bytes","nodeType":"ElementaryTypeName","src":"1724:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1696:40:21"},"src":"1669:68:21"},{"canonicalName":"ZKProofAggregator.ProofRequest","id":4422,"members":[{"constant":false,"id":4409,"mutability":"mutable","name":"requester","nameLocation":"1796:9:21","nodeType":"VariableDeclaration","scope":4422,"src":"1788:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4408,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4411,"mutability":"mutable","name":"timestamp","nameLocation":"1823:9:21","nodeType":"VariableDeclaration","scope":4422,"src":"1815:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4413,"mutability":"mutable","name":"sourceChain","nameLocation":"1849:11:21","nodeType":"VariableDeclaration","scope":4422,"src":"1842:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4412,"name":"string","nodeType":"ElementaryTypeName","src":"1842:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4415,"mutability":"mutable","name":"blockNumber","nameLocation":"1878:11:21","nodeType":"VariableDeclaration","scope":4422,"src":"1870:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4417,"mutability":"mutable","name":"stateRoot","nameLocation":"1907:9:21","nodeType":"VariableDeclaration","scope":4422,"src":"1899:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1899:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4419,"mutability":"mutable","name":"isCompleted","nameLocation":"1931:11:21","nodeType":"VariableDeclaration","scope":4422,"src":"1926:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4418,"name":"bool","nodeType":"ElementaryTypeName","src":"1926:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4421,"mutability":"mutable","name":"isValid","nameLocation":"1957:7:21","nodeType":"VariableDeclaration","scope":4422,"src":"1952:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4420,"name":"bool","nodeType":"ElementaryTypeName","src":"1952:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ProofRequest","nameLocation":"1765:12:21","nodeType":"StructDefinition","scope":5929,"src":"1758:213:21","visibility":"public"},{"canonicalName":"ZKProofAggregator.ZKProof","id":4440,"members":[{"constant":false,"id":4426,"mutability":"mutable","name":"a","nameLocation":"2013:1:21","nodeType":"VariableDeclaration","scope":4440,"src":"2002:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"2002:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4425,"length":{"hexValue":"32","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2010:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"2002:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4432,"mutability":"mutable","name":"b","nameLocation":"2038:1:21","nodeType":"VariableDeclaration","scope":4440,"src":"2024:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":4427,"name":"uint256","nodeType":"ElementaryTypeName","src":"2024:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4429,"length":{"hexValue":"32","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2032:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"2024:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":4431,"length":{"hexValue":"32","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2035:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"2024:13:21","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":4436,"mutability":"mutable","name":"c","nameLocation":"2060:1:21","nodeType":"VariableDeclaration","scope":4440,"src":"2049:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2049:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"length":{"hexValue":"32","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2057:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"2049:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4439,"mutability":"mutable","name":"publicInputs","nameLocation":"2081:12:21","nodeType":"VariableDeclaration","scope":4440,"src":"2071:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2071:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4438,"nodeType":"ArrayTypeName","src":"2071:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"ZKProof","nameLocation":"1984:7:21","nodeType":"StructDefinition","scope":5929,"src":"1977:123:21","visibility":"public"},{"constant":false,"functionSelector":"25825746","id":4445,"mutability":"mutable","name":"proofRequests","nameLocation":"2169:13:21","nodeType":"VariableDeclaration","scope":5929,"src":"2129:53:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest)"},"typeName":{"id":4444,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2129:32:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4443,"nodeType":"UserDefinedTypeName","pathNode":{"id":4442,"name":"ProofRequest","nameLocations":["2148:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"2148:12:21"},"referencedDeclaration":4422,"src":"2148:12:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest"}}},"visibility":"public"},{"constant":false,"functionSelector":"56959332","id":4449,"mutability":"mutable","name":"functionsRequestToProofId","nameLocation":"2223:25:21","nodeType":"VariableDeclaration","scope":5929,"src":"2188:60:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":4448,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2188:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"973a814e","id":4451,"mutability":"mutable","name":"requestCounter","nameLocation":"2274:14:21","nodeType":"VariableDeclaration","scope":5929,"src":"2259:29:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2259:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"624cffd4","id":4453,"mutability":"mutable","name":"lastUpkeepTimestamp","nameLocation":"2309:19:21","nodeType":"VariableDeclaration","scope":5929,"src":"2294:34:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2294:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5a74373c","id":4456,"mutability":"mutable","name":"upkeepInterval","nameLocation":"2349:14:21","nodeType":"VariableDeclaration","scope":5929,"src":"2334:36:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4454,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33363030","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2366:4:21","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"3600"},"visibility":"public"},{"constant":false,"id":4458,"mutability":"mutable","name":"s_subscriptionId","nameLocation":"2438:16:21","nodeType":"VariableDeclaration","scope":5929,"src":"2422:32:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"2422:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4460,"mutability":"mutable","name":"s_keyHash","nameLocation":"2476:9:21","nodeType":"VariableDeclaration","scope":5929,"src":"2460:25:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2460:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4463,"mutability":"mutable","name":"s_callbackGasLimit","nameLocation":"2506:18:21","nodeType":"VariableDeclaration","scope":5929,"src":"2491:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4461,"name":"uint32","nodeType":"ElementaryTypeName","src":"2491:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"32353030303030","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2527:7:21","typeDescriptions":{"typeIdentifier":"t_rational_2500000_by_1","typeString":"int_const 2500000"},"value":"2500000"},"visibility":"private"},{"constant":false,"id":4466,"mutability":"mutable","name":"s_requestConfirmations","nameLocation":"2555:22:21","nodeType":"VariableDeclaration","scope":5929,"src":"2540:41:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4464,"name":"uint16","nodeType":"ElementaryTypeName","src":"2540:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2580:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":false,"id":4469,"mutability":"mutable","name":"s_numWords","nameLocation":"2602:10:21","nodeType":"VariableDeclaration","scope":5929,"src":"2587:29:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4467,"name":"uint32","nodeType":"ElementaryTypeName","src":"2587:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2615:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":4471,"mutability":"mutable","name":"s_functionsSubscriptionId","nameLocation":"2680:25:21","nodeType":"VariableDeclaration","scope":5929,"src":"2664:41:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4470,"name":"uint64","nodeType":"ElementaryTypeName","src":"2664:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4474,"mutability":"mutable","name":"s_functionsGasLimit","nameLocation":"2727:19:21","nodeType":"VariableDeclaration","scope":5929,"src":"2711:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4472,"name":"uint32","nodeType":"ElementaryTypeName","src":"2711:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"333030303030","id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2749:6:21","typeDescriptions":{"typeIdentifier":"t_rational_300000_by_1","typeString":"int_const 300000"},"value":"300000"},"visibility":"internal"},{"constant":false,"id":4476,"mutability":"mutable","name":"s_functionsDonId","nameLocation":"2778:16:21","nodeType":"VariableDeclaration","scope":5929,"src":"2761:33:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2761:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4478,"mutability":"mutable","name":"s_functionsSource","nameLocation":"2816:17:21","nodeType":"VariableDeclaration","scope":5929,"src":"2800:33:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4477,"name":"string","nodeType":"ElementaryTypeName","src":"2800:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4480,"mutability":"mutable","name":"s_proofServiceUrl","nameLocation":"2881:17:21","nodeType":"VariableDeclaration","scope":5929,"src":"2865:33:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4479,"name":"string","nodeType":"ElementaryTypeName","src":"2865:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4483,"mutability":"mutable","name":"merkleDepth","nameLocation":"2952:11:21","nodeType":"VariableDeclaration","scope":5929,"src":"2937:30:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4481,"name":"uint8","nodeType":"ElementaryTypeName","src":"2937:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"38","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2966:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"visibility":"internal"},{"constant":false,"functionSelector":"176d80c4","id":4487,"mutability":"mutable","name":"verifiedProofs","nameLocation":"3062:14:21","nodeType":"VariableDeclaration","scope":5929,"src":"3030:46:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":4486,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3030:24:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4485,"name":"bool","nodeType":"ElementaryTypeName","src":"3049:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"19c813be","id":4490,"mutability":"immutable","name":"groth16Verifier","nameLocation":"3115:15:21","nodeType":"VariableDeclaration","scope":5929,"src":"3082:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Groth16Verifier_$3094","typeString":"contract Groth16Verifier"},"typeName":{"id":4489,"nodeType":"UserDefinedTypeName","pathNode":{"id":4488,"name":"Groth16Verifier","nameLocations":["3082:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":3094,"src":"3082:15:21"},"referencedDeclaration":3094,"src":"3082:15:21","typeDescriptions":{"typeIdentifier":"t_contract$_Groth16Verifier_$3094","typeString":"contract Groth16Verifier"}},"visibility":"public"},{"constant":false,"functionSelector":"39a9e4b3","id":4495,"mutability":"mutable","name":"aggregatedProofHashes","nameLocation":"3212:21:21","nodeType":"VariableDeclaration","scope":5929,"src":"3175:58:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[])"},"typeName":{"id":4494,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3175:29:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3194:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4493,"nodeType":"ArrayTypeName","src":"3194:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"d87318b2","id":4499,"mutability":"mutable","name":"usedProofHashes","nameLocation":"3271:15:21","nodeType":"VariableDeclaration","scope":5929,"src":"3239:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":4498,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3247:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3239:24:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4497,"name":"bool","nodeType":"ElementaryTypeName","src":"3258:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"536fff6c","id":4503,"mutability":"mutable","name":"authorizedCallers","nameLocation":"3351:17:21","nodeType":"VariableDeclaration","scope":5929,"src":"3319:49:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":4502,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4500,"name":"address","nodeType":"ElementaryTypeName","src":"3327:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3319:24:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4501,"name":"bool","nodeType":"ElementaryTypeName","src":"3338:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"id":4505,"mutability":"mutable","name":"_owner","nameLocation":"3390:6:21","nodeType":"VariableDeclaration","scope":5929,"src":"3374:22:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4504,"name":"address","nodeType":"ElementaryTypeName","src":"3374:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":4521,"nodeType":"Block","src":"3429:108:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4508,"name":"authorizedCallers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"3447:17:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4511,"indexExpression":{"expression":{"id":4509,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3465:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:6:21","memberName":"sender","nodeType":"MemberAccess","src":"3465:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3447:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4512,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3480:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3484:6:21","memberName":"sender","nodeType":"MemberAccess","src":"3480:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4514,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"3494:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3480:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3447:53:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3502:16:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":4507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3439:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3439:80:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4519,"nodeType":"ExpressionStatement","src":"3439:80:21"},{"id":4520,"nodeType":"PlaceholderStatement","src":"3529:1:21"}]},"id":4522,"name":"onlyAuthorized","nameLocation":"3412:14:21","nodeType":"ModifierDefinition","parameters":{"id":4506,"nodeType":"ParameterList","parameters":[],"src":"3426:2:21"},"src":"3403:134:21","virtual":false,"visibility":"internal"},{"body":{"id":4529,"nodeType":"Block","src":"3602:30:21","statements":[{"expression":{"id":4527,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"3619:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4526,"id":4528,"nodeType":"Return","src":"3612:13:21"}]},"functionSelector":"ce606ee0","id":4530,"implemented":true,"kind":"function","modifiers":[],"name":"contractOwner","nameLocation":"3556:13:21","nodeType":"FunctionDefinition","parameters":{"id":4523,"nodeType":"ParameterList","parameters":[],"src":"3569:2:21"},"returnParameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4530,"src":"3593:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4524,"name":"address","nodeType":"ElementaryTypeName","src":"3593:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3592:9:21"},"scope":5929,"src":"3547:85:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4541,"nodeType":"Block","src":"3671:71:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4533,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3689:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3693:6:21","memberName":"sender","nodeType":"MemberAccess","src":"3689:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4535,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"3703:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3689:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e6572","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3711:12:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""},"value":"Only owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""}],"id":4532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3681:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3681:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4539,"nodeType":"ExpressionStatement","src":"3681:43:21"},{"id":4540,"nodeType":"PlaceholderStatement","src":"3734:1:21"}]},"id":4542,"name":"onlyContractOwner","nameLocation":"3651:17:21","nodeType":"ModifierDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[],"src":"3668:2:21"},"src":"3642:100:21","virtual":false,"visibility":"internal"},{"body":{"id":4604,"nodeType":"Block","src":"4077:378:21","statements":[{"expression":{"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4565,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"4087:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4566,"name":"vrfSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"4106:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4087:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4568,"nodeType":"ExpressionStatement","src":"4087:36:21"},{"expression":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4569,"name":"s_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"4133:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4570,"name":"vrfKeyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"4145:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4133:22:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4572,"nodeType":"ExpressionStatement","src":"4133:22:21"},{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4573,"name":"s_functionsSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"4165:25:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4574,"name":"functionsSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"4193:23:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"4165:51:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4576,"nodeType":"ExpressionStatement","src":"4165:51:21"},{"expression":{"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4577,"name":"s_functionsDonId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"4226:16:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4578,"name":"functionsDonId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"4245:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4226:33:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4580,"nodeType":"ExpressionStatement","src":"4226:33:21"},{"expression":{"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4581,"name":"groth16Verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"4269:15:21","typeDescriptions":{"typeIdentifier":"t_contract$_Groth16Verifier_$3094","typeString":"contract Groth16Verifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4583,"name":"groth16VerifierAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"4303:22:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4582,"name":"Groth16Verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"4287:15:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Groth16Verifier_$3094_$","typeString":"type(contract Groth16Verifier)"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Groth16Verifier_$3094","typeString":"contract Groth16Verifier"}},"src":"4269:57:21","typeDescriptions":{"typeIdentifier":"t_contract$_Groth16Verifier_$3094","typeString":"contract Groth16Verifier"}},"id":4586,"nodeType":"ExpressionStatement","src":"4269:57:21"},{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4587,"name":"authorizedCallers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"4336:17:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4590,"indexExpression":{"expression":{"id":4588,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4354:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4358:6:21","memberName":"sender","nodeType":"MemberAccess","src":"4354:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4336:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4368:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4336:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4593,"nodeType":"ExpressionStatement","src":"4336:36:21"},{"expression":{"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4594,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"4382:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4595,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4391:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4395:6:21","memberName":"sender","nodeType":"MemberAccess","src":"4391:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4382:19:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4598,"nodeType":"ExpressionStatement","src":"4382:19:21"},{"expression":{"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4599,"name":"lastUpkeepTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"4411:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4600,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4433:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4439:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"4433:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4411:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4603,"nodeType":"ExpressionStatement","src":"4411:37:21"}]},"id":4605,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4559,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"4028:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4560,"kind":"baseConstructorSpecifier","modifierName":{"id":4558,"name":"VRFConsumerBaseV2Plus","nameLocations":["4006:21:21"],"nodeType":"IdentifierPath","referencedDeclaration":2544,"src":"4006:21:21"},"nodeType":"ModifierInvocation","src":"4006:37:21"},{"arguments":[{"id":4562,"name":"functionsRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"4060:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4563,"kind":"baseConstructorSpecifier","modifierName":{"id":4561,"name":"FunctionsClient","nameLocations":["4044:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"4044:15:21"},"nodeType":"ModifierInvocation","src":"4044:32:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4544,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"3777:14:21","nodeType":"VariableDeclaration","scope":4605,"src":"3769:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4543,"name":"address","nodeType":"ElementaryTypeName","src":"3769:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4546,"mutability":"mutable","name":"functionsRouter","nameLocation":"3809:15:21","nodeType":"VariableDeclaration","scope":4605,"src":"3801:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4545,"name":"address","nodeType":"ElementaryTypeName","src":"3801:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4548,"mutability":"mutable","name":"vrfSubscriptionId","nameLocation":"3842:17:21","nodeType":"VariableDeclaration","scope":4605,"src":"3834:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4547,"name":"uint256","nodeType":"ElementaryTypeName","src":"3834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4550,"mutability":"mutable","name":"vrfKeyHash","nameLocation":"3877:10:21","nodeType":"VariableDeclaration","scope":4605,"src":"3869:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3869:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4552,"mutability":"mutable","name":"functionsSubscriptionId","nameLocation":"3904:23:21","nodeType":"VariableDeclaration","scope":4605,"src":"3897:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4551,"name":"uint64","nodeType":"ElementaryTypeName","src":"3897:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4554,"mutability":"mutable","name":"functionsDonId","nameLocation":"3945:14:21","nodeType":"VariableDeclaration","scope":4605,"src":"3937:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3937:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4556,"mutability":"mutable","name":"groth16VerifierAddress","nameLocation":"3977:22:21","nodeType":"VariableDeclaration","scope":4605,"src":"3969:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4555,"name":"address","nodeType":"ElementaryTypeName","src":"3969:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3759:246:21"},"returnParameters":{"id":4564,"nodeType":"ParameterList","parameters":[],"src":"4077:0:21"},"scope":5929,"src":"3748:707:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4663,"nodeType":"Block","src":"4840:715:21","statements":[{"expression":{"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4615,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"4850:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4862:16:21","subExpression":{"id":4616,"name":"requestCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"4864:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4850:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4619,"nodeType":"ExpressionStatement","src":"4850:28:21"},{"expression":{"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4620,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"4897:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":4622,"indexExpression":{"id":4621,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"4911:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4897:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4624,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4962:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4966:6:21","memberName":"sender","nodeType":"MemberAccess","src":"4962:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4626,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4997:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5003:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"4997:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4628,"name":"sourceChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"5039:11:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4629,"name":"targetBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"5077:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5127:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5119:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5119:7:21","typeDescriptions":{}}},"id":4633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5119:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5156:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5184:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4623,"name":"ProofRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"4924:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ProofRequest_$4422_storage_ptr_$","typeString":"type(struct ZKProofAggregator.ProofRequest storage pointer)"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4951:9:21","4986:9:21","5026:11:21","5064:11:21","5108:9:21","5143:11:21","5175:7:21"],"names":["requester","timestamp","sourceChain","blockNumber","stateRoot","isCompleted","isValid"],"nodeType":"FunctionCall","src":"4924:276:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_memory_ptr","typeString":"struct ZKProofAggregator.ProofRequest memory"}},"src":"4897:303:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"id":4638,"nodeType":"ExpressionStatement","src":"4897:303:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4639,"name":"targetBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"5288:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5309:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5288:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4652,"nodeType":"Block","src":"5373:78:21","statements":[{"expression":{"arguments":[{"id":4648,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"5411:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4649,"name":"targetBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"5422:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4647,"name":"_requestProofGeneration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"5387:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5387:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4651,"nodeType":"ExpressionStatement","src":"5387:53:21"}]},"id":4653,"nodeType":"IfStatement","src":"5284:167:21","trueBody":{"id":4646,"nodeType":"Block","src":"5312:55:21","statements":[{"expression":{"arguments":[{"id":4643,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"5346:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4642,"name":"_requestRandomBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"5326:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5326:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4645,"nodeType":"ExpressionStatement","src":"5326:30:21"}]}},{"eventCall":{"arguments":[{"id":4655,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"5481:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4656,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5492:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5496:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5492:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4658,"name":"targetBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"5504:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4654,"name":"ProofRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"5466:14:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5466:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4660,"nodeType":"EmitStatement","src":"5461:61:21"},{"expression":{"id":4661,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"5539:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4614,"id":4662,"nodeType":"Return","src":"5532:16:21"}]},"documentation":{"id":4606,"nodeType":"StructuredDocumentation","src":"4461:227:21","text":" @dev Request proof verification for a specific chain state\n @param sourceChain The identifier of the source blockchain\n @param targetBlockNumber The block number to verify (0 for random selection)"},"functionSelector":"57efe032","id":4664,"implemented":true,"kind":"function","modifiers":[],"name":"requestProofVerification","nameLocation":"4702:24:21","nodeType":"FunctionDefinition","parameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4608,"mutability":"mutable","name":"sourceChain","nameLocation":"4750:11:21","nodeType":"VariableDeclaration","scope":4664,"src":"4736:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4607,"name":"string","nodeType":"ElementaryTypeName","src":"4736:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"targetBlockNumber","nameLocation":"4779:17:21","nodeType":"VariableDeclaration","scope":4664,"src":"4771:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"4771:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4726:76:21"},"returnParameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"requestId","nameLocation":"4829:9:21","nodeType":"VariableDeclaration","scope":4664,"src":"4821:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"4821:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4820:19:21"},"scope":5929,"src":"4693:862:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4700,"nodeType":"Block","src":"5711:671:21","statements":[{"assignments":[4671],"declarations":[{"constant":false,"id":4671,"mutability":"mutable","name":"vrfRequestId","nameLocation":"5729:12:21","nodeType":"VariableDeclaration","scope":4700,"src":"5721:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"5721:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4690,"initialValue":{"arguments":[{"arguments":[{"id":4676,"name":"s_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"5855:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4677,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"5889:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4678,"name":"s_requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"5945:22:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4679,"name":"s_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"6003:18:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4680,"name":"s_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"6049:10:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"arguments":[{"hexValue":"66616c7365","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6182:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4683,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"6138:15:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2707_$","typeString":"type(library VRFV2PlusClient)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6154:11:21","memberName":"ExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"6138:27:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2678_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}},"id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6167:13:21"],"names":["nativePayment"],"nodeType":"FunctionCall","src":"6138:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2678_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExtraArgsV1_$2678_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":4681,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"6088:15:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2707_$","typeString":"type(library VRFV2PlusClient)"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6104:12:21","memberName":"_argsToBytes","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"6088:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ExtraArgsV1_$2678_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct VRFV2PlusClient.ExtraArgsV1 memory) pure returns (bytes memory)"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6088:119:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4674,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"5793:15:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2707_$","typeString":"type(library VRFV2PlusClient)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5809:18:21","memberName":"RandomWordsRequest","nodeType":"MemberAccess","referencedDeclaration":2691,"src":"5793:34:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RandomWordsRequest_$2691_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.RandomWordsRequest storage pointer)"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5846:7:21","5882:5:21","5923:20:21","5985:16:21","6039:8:21","6077:9:21"],"names":["keyHash","subId","requestConfirmations","callbackGasLimit","numWords","extraArgs"],"nodeType":"FunctionCall","src":"5793:429:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2691_memory_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RandomWordsRequest_$2691_memory_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest memory"}],"expression":{"id":4672,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"5744:16:21","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2562","typeString":"contract IVRFCoordinatorV2Plus"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:18:21","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":2561,"src":"5744:35:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_RandomWordsRequest_$2691_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VRFV2PlusClient.RandomWordsRequest memory) external returns (uint256)"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5744:488:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5721:511:21"},{"expression":{"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4691,"name":"functionsRequestToProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"6310:25:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4696,"indexExpression":{"arguments":[{"id":4694,"name":"vrfRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"6344:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6336:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6336:7:21","typeDescriptions":{}}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6336:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6310:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4697,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"6361:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6310:65:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4699,"nodeType":"ExpressionStatement","src":"6310:65:21"}]},"documentation":{"id":4665,"nodeType":"StructuredDocumentation","src":"5561:83:21","text":" @dev Internal function to request random block selection via VRF"},"id":4701,"implemented":true,"kind":"function","modifiers":[],"name":"_requestRandomBlock","nameLocation":"5658:19:21","nodeType":"FunctionDefinition","parameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"proofRequestId","nameLocation":"5686:14:21","nodeType":"VariableDeclaration","scope":4701,"src":"5678:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"5678:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5677:24:21"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[],"src":"5711:0:21"},"scope":5929,"src":"5649:733:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2450],"body":{"id":4761,"nodeType":"Block","src":"6550:591:21","statements":[{"assignments":[4712],"declarations":[{"constant":false,"id":4712,"mutability":"mutable","name":"proofRequestId","nameLocation":"6568:14:21","nodeType":"VariableDeclaration","scope":4761,"src":"6560:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"6560:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4719,"initialValue":{"baseExpression":{"id":4713,"name":"functionsRequestToProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"6585:25:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4718,"indexExpression":{"arguments":[{"id":4716,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"6619:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6611:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6611:7:21","typeDescriptions":{}}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6611:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6585:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6560:70:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4721,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"6648:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6666:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964205652462072657175657374","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6669:21:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2468e6e622a6c8632a9b27b4179b323fa97886f7fff3909df1dc64435db0d6","typeString":"literal_string \"Invalid VRF request\""},"value":"Invalid VRF request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e2468e6e622a6c8632a9b27b4179b323fa97886f7fff3909df1dc64435db0d6","typeString":"literal_string \"Invalid VRF request\""}],"id":4720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6640:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6640:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4726,"nodeType":"ExpressionStatement","src":"6640:51:21"},{"assignments":[4728],"declarations":[{"constant":false,"id":4728,"mutability":"mutable","name":"selectedBlock","nameLocation":"6777:13:21","nodeType":"VariableDeclaration","scope":4761,"src":"6769:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"6769:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4740,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4729,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6793:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6799:6:21","memberName":"number","nodeType":"MemberAccess","src":"6793:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31303030","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6808:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"6793:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4733,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"6816:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4735,"indexExpression":{"hexValue":"30","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6828:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6816:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"31303030","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6833:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"6816:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6815:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6793:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6769:69:21"},{"expression":{"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4741,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"6857:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":4743,"indexExpression":{"id":4742,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"6871:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6857:29:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"id":4744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6887:11:21","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"6857:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4745,"name":"selectedBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"6901:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6857:57:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4747,"nodeType":"ExpressionStatement","src":"6857:57:21"},{"eventCall":{"arguments":[{"id":4749,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"6957:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4750,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"6968:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4752,"indexExpression":{"hexValue":"30","id":4751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6980:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6968:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4753,"name":"selectedBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"6984:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4748,"name":"RandomnessReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"6938:18:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6938:60:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4755,"nodeType":"EmitStatement","src":"6933:65:21"},{"expression":{"arguments":[{"id":4757,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"7104:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4758,"name":"selectedBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"7120:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4756,"name":"_requestProofGeneration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"7080:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4760,"nodeType":"ExpressionStatement","src":"7080:54:21"}]},"documentation":{"id":4702,"nodeType":"StructuredDocumentation","src":"6388:60:21","text":" @dev Callback function for VRF randomness"},"id":4762,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6462:18:21","nodeType":"FunctionDefinition","overrides":{"id":4709,"nodeType":"OverrideSpecifier","overrides":[],"src":"6541:8:21"},"parameters":{"id":4708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4704,"mutability":"mutable","name":"requestId","nameLocation":"6489:9:21","nodeType":"VariableDeclaration","scope":4762,"src":"6481:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"6481:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4707,"mutability":"mutable","name":"randomWords","nameLocation":"6519:11:21","nodeType":"VariableDeclaration","scope":4762,"src":"6500:30:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4705,"name":"uint256","nodeType":"ElementaryTypeName","src":"6500:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4706,"nodeType":"ArrayTypeName","src":"6500:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6480:51:21"},"returnParameters":{"id":4710,"nodeType":"ParameterList","parameters":[],"src":"6550:0:21"},"scope":5929,"src":"6453:688:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4897,"nodeType":"Block","src":"7332:1731:21","statements":[{"assignments":[4772],"declarations":[{"constant":false,"id":4772,"mutability":"mutable","name":"request","nameLocation":"7363:7:21","nodeType":"VariableDeclaration","scope":4897,"src":"7342:28:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest"},"typeName":{"id":4771,"nodeType":"UserDefinedTypeName","pathNode":{"id":4770,"name":"ProofRequest","nameLocations":["7342:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"7342:12:21"},"referencedDeclaration":4422,"src":"7342:12:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest"}},"visibility":"internal"}],"id":4776,"initialValue":{"baseExpression":{"id":4773,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"7373:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":4775,"indexExpression":{"id":4774,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"7387:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7373:29:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7342:60:21"},{"assignments":[4778],"declarations":[{"constant":false,"id":4778,"mutability":"mutable","name":"source","nameLocation":"7581:6:21","nodeType":"VariableDeclaration","scope":4897,"src":"7567:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4777,"name":"string","nodeType":"ElementaryTypeName","src":"7567:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4780,"initialValue":{"id":4779,"name":"s_functionsSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"7590:17:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7567:40:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4783,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"7627:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7621:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4781,"name":"bytes","nodeType":"ElementaryTypeName","src":"7621:5:21","typeDescriptions":{}}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7621:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7635:6:21","memberName":"length","nodeType":"MemberAccess","src":"7621:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7645:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7621:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4793,"nodeType":"IfStatement","src":"7617:411:21","trueBody":{"id":4792,"nodeType":"Block","src":"7648:380:21","statements":[{"expression":{"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4788,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"7701:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"636f6e737420636861696e49643d7061727365496e7428617267735b305d293b636f6e737420626c6f636b4e756d626572733d4a534f4e2e706172736528617267735b315d293b636f6e737420726573756c743d7b737563636573733a747275652c636861696e49642c626c6f636b4e756d626572732c76616c6964697479486173683a27307831323334353637383930616263646566313233343536373839306162636465663132333435363738393061626364656631323334353637383930616263646566272c6d657461646174613a7b74696d657374616d703a4d6174682e666c6f6f7228446174652e6e6f7728292f31303030297d7d3b72657475726e2046756e6374696f6e732e656e636f6465537472696e67284a534f4e2e737472696e6769667928726573756c7429293b","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7710:307:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f40e170a7d7da84c7febfa6e1da1bba36ef52c0d32d0501f35b2ff37b7dfb86","typeString":"literal_string \"const chainId=parseInt(args[0]);const blockNumbers=JSON.parse(args[1]);const result={success:true,chainId,blockNumbers,validityHash:'0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef',metadata:{timestamp:Math.floor(Date.now()/1000)}};return Functions.encodeString(JSON.stringify(result));\""},"value":"const chainId=parseInt(args[0]);const blockNumbers=JSON.parse(args[1]);const result={success:true,chainId,blockNumbers,validityHash:'0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef',metadata:{timestamp:Math.floor(Date.now()/1000)}};return Functions.encodeString(JSON.stringify(result));"},"src":"7701:316:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4791,"nodeType":"ExpressionStatement","src":"7701:316:21"}]}},{"assignments":[4798],"declarations":[{"constant":false,"id":4798,"mutability":"mutable","name":"req","nameLocation":"8078:3:21","nodeType":"VariableDeclaration","scope":4897,"src":"8046:35:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":4797,"nodeType":"UserDefinedTypeName","pathNode":{"id":4796,"name":"FunctionsRequest.Request","nameLocations":["8046:16:21","8063:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":256,"src":"8046:24:21"},"referencedDeclaration":256,"src":"8046:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"}],"id":4799,"nodeType":"VariableDeclarationStatement","src":"8046:35:21"},{"expression":{"arguments":[{"id":4803,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"8132:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4800,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"8091:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":4802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8095:36:21","memberName":"initializeRequestForInlineJavaScript","nodeType":"MemberAccess","referencedDeclaration":535,"src":"8091:40:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$256_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_Request_$256_memory_ptr_$","typeString":"function (struct FunctionsRequest.Request memory,string memory) pure"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8091:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4805,"nodeType":"ExpressionStatement","src":"8091:48:21"},{"assignments":[4810],"declarations":[{"constant":false,"id":4810,"mutability":"mutable","name":"args","nameLocation":"8271:4:21","nodeType":"VariableDeclaration","scope":4897,"src":"8255:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4808,"name":"string","nodeType":"ElementaryTypeName","src":"8255:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4809,"nodeType":"ArrayTypeName","src":"8255:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":4816,"initialValue":{"arguments":[{"hexValue":"35","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8291:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8278:12:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":4811,"name":"string","nodeType":"ElementaryTypeName","src":"8282:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4812,"nodeType":"ArrayTypeName","src":"8282:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8278:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8255:38:21"},{"expression":{"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4817,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"8303:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4819,"indexExpression":{"hexValue":"30","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8308:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8303:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":4822,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"8340:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest storage pointer"}},"id":4823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8348:11:21","memberName":"sourceChain","nodeType":"MemberAccess","referencedDeclaration":4413,"src":"8340:19:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":4821,"name":"getChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"8329:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory) pure returns (uint256)"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4820,"name":"uint256ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"8313:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8313:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8303:58:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4827,"nodeType":"ExpressionStatement","src":"8303:58:21"},{"expression":{"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4828,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"8371:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4830,"indexExpression":{"hexValue":"31","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8376:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8371:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"5b","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8405:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f50164828976b6baa479ea39c718c745bbc0d2521b67dfde8474cbdc9711057","typeString":"literal_string \"[\""},"value":"["},{"arguments":[{"id":4837,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"8426:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4836,"name":"uint256ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"8410:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"5d","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8440:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29","typeString":"literal_string \"]\""},"value":"]"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f50164828976b6baa479ea39c718c745bbc0d2521b67dfde8474cbdc9711057","typeString":"literal_string \"[\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29","typeString":"literal_string \"]\""}],"expression":{"id":4833,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8388:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8392:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"8388:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8388:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8381:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4831,"name":"string","nodeType":"ElementaryTypeName","src":"8381:6:21","typeDescriptions":{}}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8381:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8371:74:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4843,"nodeType":"ExpressionStatement","src":"8371:74:21"},{"expression":{"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4844,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"8471:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4846,"indexExpression":{"hexValue":"32","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8476:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8471:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4848,"name":"merkleDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"8497:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4847,"name":"uint256ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"8481:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8481:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8471:38:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4851,"nodeType":"ExpressionStatement","src":"8471:38:21"},{"expression":{"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4852,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"8519:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4854,"indexExpression":{"hexValue":"33","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8524:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8519:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4856,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8545:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8551:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"8545:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4855,"name":"uint256ToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"8529:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8529:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8519:40:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4860,"nodeType":"ExpressionStatement","src":"8519:40:21"},{"expression":{"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4861,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"8596:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":4863,"indexExpression":{"hexValue":"34","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8601:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8596:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4864,"name":"s_proofServiceUrl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"8606:17:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"8596:27:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4866,"nodeType":"ExpressionStatement","src":"8596:27:21"},{"expression":{"arguments":[{"id":4870,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"8686:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"expression":{"id":4867,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"8674:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":4869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8678:7:21","memberName":"setArgs","nodeType":"MemberAccess","referencedDeclaration":652,"src":"8674:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$256_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$attached_to$_t_struct$_Request_$256_memory_ptr_$","typeString":"function (struct FunctionsRequest.Request memory,string memory[] memory) pure"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8674:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4872,"nodeType":"ExpressionStatement","src":"8674:17:21"},{"assignments":[4874],"declarations":[{"constant":false,"id":4874,"mutability":"mutable","name":"functionsRequestId","nameLocation":"8710:18:21","nodeType":"VariableDeclaration","scope":4897,"src":"8702:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8702:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4883,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4876,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"8757:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$256_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":4877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8761:10:21","memberName":"encodeCBOR","nodeType":"MemberAccess","referencedDeclaration":471,"src":"8757:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$256_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_struct$_Request_$256_memory_ptr_$","typeString":"function (struct FunctionsRequest.Request memory) pure returns (bytes memory)"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8757:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4879,"name":"s_functionsSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"8787:25:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4880,"name":"s_functionsGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"8826:19:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4881,"name":"s_functionsDonId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"8859:16:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4875,"name":"_sendRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"8731:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint64_$_t_uint32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint64,uint32,bytes32) returns (bytes32)"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8731:154:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8702:183:21"},{"expression":{"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4884,"name":"functionsRequestToProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"8896:25:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4886,"indexExpression":{"id":4885,"name":"functionsRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"8922:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8896:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4887,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"8944:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8896:62:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4889,"nodeType":"ExpressionStatement","src":"8896:62:21"},{"eventCall":{"arguments":[{"id":4891,"name":"functionsRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"9003:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4892,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"9023:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest storage pointer"}},"id":4893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9031:11:21","memberName":"sourceChain","nodeType":"MemberAccess","referencedDeclaration":4413,"src":"9023:19:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":4894,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"9044:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4890,"name":"FunctionsRequestSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"8982:20:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,string memory,uint256)"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8982:74:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4896,"nodeType":"EmitStatement","src":"8977:79:21"}]},"documentation":{"id":4763,"nodeType":"StructuredDocumentation","src":"7147:93:21","text":" @dev Internal function to request proof generation via Chainlink Functions"},"id":4898,"implemented":true,"kind":"function","modifiers":[],"name":"_requestProofGeneration","nameLocation":"7254:23:21","nodeType":"FunctionDefinition","parameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"proofRequestId","nameLocation":"7286:14:21","nodeType":"VariableDeclaration","scope":4898,"src":"7278:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"7278:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4767,"mutability":"mutable","name":"blockNumber","nameLocation":"7310:11:21","nodeType":"VariableDeclaration","scope":4898,"src":"7302:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"7302:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7277:45:21"},"returnParameters":{"id":4769,"nodeType":"ParameterList","parameters":[],"src":"7332:0:21"},"scope":5929,"src":"7245:1818:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4983,"nodeType":"Block","src":"9222:619:21","statements":[{"assignments":[4907],"declarations":[{"constant":false,"id":4907,"mutability":"mutable","name":"chainHash","nameLocation":"9240:9:21","nodeType":"VariableDeclaration","scope":4983,"src":"9232:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9232:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4914,"initialValue":{"arguments":[{"arguments":[{"id":4911,"name":"chainName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"9279:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4909,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9262:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9266:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"9262:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9262:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4908,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9252:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9252:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9232:58:21"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4915,"name":"chainHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"9313:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"657468657265756d","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9353:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_541111248b45b7a8dc3f5579f630e74cb01456ea6ac067d3f4d793245a255155","typeString":"literal_string \"ethereum\""},"value":"ethereum"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_541111248b45b7a8dc3f5579f630e74cb01456ea6ac067d3f4d793245a255155","typeString":"literal_string \"ethereum\""}],"expression":{"id":4917,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9336:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9340:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"9336:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9336:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4916,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9326:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9326:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9313:52:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4925,"nodeType":"IfStatement","src":"9309:66:21","trueBody":{"expression":{"hexValue":"31","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9374:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":4905,"id":4924,"nodeType":"Return","src":"9367:8:21"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"chainHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"9389:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"617262697472756d","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9429:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9186606d55c571b43a756333453d90ab5653c483deb4980cda697bfa36fba5de","typeString":"literal_string \"arbitrum\""},"value":"arbitrum"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9186606d55c571b43a756333453d90ab5653c483deb4980cda697bfa36fba5de","typeString":"literal_string \"arbitrum\""}],"expression":{"id":4928,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9412:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9416:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"9412:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9412:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4927,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9402:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9402:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9389:52:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4936,"nodeType":"IfStatement","src":"9385:70:21","trueBody":{"expression":{"hexValue":"3432313631","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9450:5:21","typeDescriptions":{"typeIdentifier":"t_rational_42161_by_1","typeString":"int_const 42161"},"value":"42161"},"functionReturnParameters":4905,"id":4935,"nodeType":"Return","src":"9443:12:21"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4937,"name":"chainHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"9469:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"6f7074696d69736d","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9509:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_09d0f27659ee556a8134fa56941e42400e672aecc2d4cfc61cdb0fcea4590e05","typeString":"literal_string \"optimism\""},"value":"optimism"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_09d0f27659ee556a8134fa56941e42400e672aecc2d4cfc61cdb0fcea4590e05","typeString":"literal_string \"optimism\""}],"expression":{"id":4939,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9492:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9496:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"9492:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9492:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4938,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9482:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9482:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9469:52:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4947,"nodeType":"IfStatement","src":"9465:67:21","trueBody":{"expression":{"hexValue":"3130","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"functionReturnParameters":4905,"id":4946,"nodeType":"Return","src":"9523:9:21"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4948,"name":"chainHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"9546:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"62617365","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9586:6:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1f3eb40f5bc1ad1344716ced8b8a0431d840b5783aea1fd01786bc26f35ac0f","typeString":"literal_string \"base\""},"value":"base"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f1f3eb40f5bc1ad1344716ced8b8a0431d840b5783aea1fd01786bc26f35ac0f","typeString":"literal_string \"base\""}],"expression":{"id":4950,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9569:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9573:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"9569:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9569:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4949,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9559:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9559:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9546:48:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4958,"nodeType":"IfStatement","src":"9542:65:21","trueBody":{"expression":{"hexValue":"38343533","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9603:4:21","typeDescriptions":{"typeIdentifier":"t_rational_8453_by_1","typeString":"int_const 8453"},"value":"8453"},"functionReturnParameters":4905,"id":4957,"nodeType":"Return","src":"9596:11:21"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"chainHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"9621:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"706f6c79676f6e","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9661:9:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac63fa1fe369e75c38d62f0f4d465b48b3cd5159f0fb416332899402031d1408","typeString":"literal_string \"polygon\""},"value":"polygon"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ac63fa1fe369e75c38d62f0f4d465b48b3cd5159f0fb416332899402031d1408","typeString":"literal_string \"polygon\""}],"expression":{"id":4961,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9644:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9648:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"9644:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4960,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9634:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9634:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9621:51:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4969,"nodeType":"IfStatement","src":"9617:67:21","trueBody":{"expression":{"hexValue":"313337","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9681:3:21","typeDescriptions":{"typeIdentifier":"t_rational_137_by_1","typeString":"int_const 137"},"value":"137"},"functionReturnParameters":4905,"id":4968,"nodeType":"Return","src":"9674:10:21"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"chainHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"9698:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"6176616c616e636865","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9738:11:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55","typeString":"literal_string \"avalanche\""},"value":"avalanche"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55","typeString":"literal_string \"avalanche\""}],"expression":{"id":4972,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9721:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9725:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"9721:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9721:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4971,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9711:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9711:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9698:53:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4980,"nodeType":"IfStatement","src":"9694:71:21","trueBody":{"expression":{"hexValue":"3433313134","id":4978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:5:21","typeDescriptions":{"typeIdentifier":"t_rational_43114_by_1","typeString":"int_const 43114"},"value":"43114"},"functionReturnParameters":4905,"id":4979,"nodeType":"Return","src":"9753:12:21"}},{"expression":{"hexValue":"31","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9833:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":4905,"id":4982,"nodeType":"Return","src":"9826:8:21"}]},"documentation":{"id":4899,"nodeType":"StructuredDocumentation","src":"9069:71:21","text":" @dev Helper function to get chain ID from chain name"},"id":4984,"implemented":true,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"9154:10:21","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"chainName","nameLocation":"9179:9:21","nodeType":"VariableDeclaration","scope":4984,"src":"9165:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4900,"name":"string","nodeType":"ElementaryTypeName","src":"9165:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9164:25:21"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4984,"src":"9213:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4903,"name":"uint256","nodeType":"ElementaryTypeName","src":"9213:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9212:9:21"},"scope":5929,"src":"9145:696:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[819],"body":{"id":5240,"nodeType":"Block","src":"10067:3163:21","statements":[{"assignments":[4996],"declarations":[{"constant":false,"id":4996,"mutability":"mutable","name":"proofRequestId","nameLocation":"10085:14:21","nodeType":"VariableDeclaration","scope":5240,"src":"10077:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"10077:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5000,"initialValue":{"baseExpression":{"id":4997,"name":"functionsRequestToProofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"10102:25:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4999,"indexExpression":{"id":4998,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"10128:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10102:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10077:61:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5002,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"10156:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10174:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10156:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642046756e6374696f6e732072657175657374","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10177:27:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa519acb7863984b0d19475b8286f5e001ed60e98d7c4115f53e1b4ead16f77d","typeString":"literal_string \"Invalid Functions request\""},"value":"Invalid Functions request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa519acb7863984b0d19475b8286f5e001ed60e98d7c4115f53e1b4ead16f77d","typeString":"literal_string \"Invalid Functions request\""}],"id":5001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10148:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10148:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5007,"nodeType":"ExpressionStatement","src":"10148:57:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5008,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"10220:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10224:6:21","memberName":"length","nodeType":"MemberAccess","src":"10220:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10233:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10220:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5026,"nodeType":"IfStatement","src":"10216:197:21","trueBody":{"id":5025,"nodeType":"Block","src":"10236:177:21","statements":[{"expression":{"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5012,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"10278:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":5014,"indexExpression":{"id":5013,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"10292:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10278:29:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"id":5015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10308:11:21","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":4419,"src":"10278:41:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10322:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10278:48:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5018,"nodeType":"ExpressionStatement","src":"10278:48:21"},{"eventCall":{"arguments":[{"id":5020,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"10367:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5021,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"10378:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5019,"name":"FunctionsRequestError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"10345:21:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10345:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5023,"nodeType":"EmitStatement","src":"10340:42:21"},{"functionReturnParameters":4994,"id":5024,"nodeType":"Return","src":"10396:7:21"}]}},{"assignments":[5028],"declarations":[{"constant":false,"id":5028,"mutability":"mutable","name":"jsonResponse","nameLocation":"10483:12:21","nodeType":"VariableDeclaration","scope":5240,"src":"10469:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5027,"name":"string","nodeType":"ElementaryTypeName","src":"10469:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5033,"initialValue":{"arguments":[{"id":5031,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"10505:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10498:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5029,"name":"string","nodeType":"ElementaryTypeName","src":"10498:6:21","typeDescriptions":{}}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10498:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"10469:45:21"},{"assignments":[5035],"declarations":[{"constant":false,"id":5035,"mutability":"mutable","name":"success","nameLocation":"10599:7:21","nodeType":"VariableDeclaration","scope":5240,"src":"10594:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5034,"name":"bool","nodeType":"ElementaryTypeName","src":"10594:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5040,"initialValue":{"arguments":[{"id":5037,"name":"jsonResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"10624:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"73756363657373","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10638:9:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b31cabbe5862282e443c4ac3f4c14761a1d2ba88a3c858a2a36f7758f453a38","typeString":"literal_string \"success\""},"value":"success"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_4b31cabbe5862282e443c4ac3f4c14761a1d2ba88a3c858a2a36f7758f453a38","typeString":"literal_string \"success\""}],"id":5036,"name":"_parseJsonBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"10609:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10609:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10594:54:21"},{"assignments":[5043],"declarations":[{"constant":false,"id":5043,"mutability":"mutable","name":"request","nameLocation":"10688:7:21","nodeType":"VariableDeclaration","scope":5240,"src":"10667:28:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest"},"typeName":{"id":5042,"nodeType":"UserDefinedTypeName","pathNode":{"id":5041,"name":"ProofRequest","nameLocations":["10667:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"10667:12:21"},"referencedDeclaration":4422,"src":"10667:12:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest"}},"visibility":"internal"}],"id":5047,"initialValue":{"baseExpression":{"id":5044,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"10698:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":5046,"indexExpression":{"id":5045,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"10712:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10698:29:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10667:60:21"},{"expression":{"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5048,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"10737:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest storage pointer"}},"id":5050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10745:11:21","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":4419,"src":"10737:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10759:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10737:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5053,"nodeType":"ExpressionStatement","src":"10737:26:21"},{"condition":{"id":5054,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"10786:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5232,"nodeType":"Block","src":"13035:115:21","statements":[{"expression":{"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5217,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"13049:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest storage pointer"}},"id":5219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13057:7:21","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"13049:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13067:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13049:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5222,"nodeType":"ExpressionStatement","src":"13049:23:21"},{"eventCall":{"arguments":[{"id":5224,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"13105:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13121:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13136:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13128:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13128:7:21","typeDescriptions":{}}},"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13128:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5223,"name":"ProofVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"13091:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$","typeString":"function (uint256,bool,bytes32)"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13091:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5231,"nodeType":"EmitStatement","src":"13086:53:21"}]},"id":5233,"nodeType":"IfStatement","src":"10782:2368:21","trueBody":{"id":5216,"nodeType":"Block","src":"10795:2234:21","statements":[{"assignments":[5056],"declarations":[{"constant":false,"id":5056,"mutability":"mutable","name":"hasRealProof","nameLocation":"10866:12:21","nodeType":"VariableDeclaration","scope":5216,"src":"10861:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5055,"name":"bool","nodeType":"ElementaryTypeName","src":"10861:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5061,"initialValue":{"arguments":[{"id":5058,"name":"jsonResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"10896:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6861735265616c50726f6f66","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10910:14:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc86ba7285553398a0ce4483ea9702f5bf2fa4bc5afa4b6071eafcc991f7c173","typeString":"literal_string \"hasRealProof\""},"value":"hasRealProof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_cc86ba7285553398a0ce4483ea9702f5bf2fa4bc5afa4b6071eafcc991f7c173","typeString":"literal_string \"hasRealProof\""}],"id":5057,"name":"_parseJsonBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"10881:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10881:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10861:64:21"},{"condition":{"id":5062,"name":"hasRealProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"10956:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5214,"nodeType":"Block","src":"12502:517:21","statements":[{"assignments":[5173],"declarations":[{"constant":false,"id":5173,"mutability":"mutable","name":"validityHash","nameLocation":"12607:12:21","nodeType":"VariableDeclaration","scope":5214,"src":"12593:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5172,"name":"string","nodeType":"ElementaryTypeName","src":"12593:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5178,"initialValue":{"arguments":[{"id":5175,"name":"jsonResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"12639:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"76616c696469747948617368","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12653:14:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ae3148ccb475de270e1abfe65d7d4ba2786e229def1b2906f5f7b5fb445a7f","typeString":"literal_string \"validityHash\""},"value":"validityHash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_67ae3148ccb475de270e1abfe65d7d4ba2786e229def1b2906f5f7b5fb445a7f","typeString":"literal_string \"validityHash\""}],"id":5174,"name":"_parseJsonString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12622:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory,string memory) pure returns (string memory)"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12622:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"12593:75:21"},{"assignments":[5180],"declarations":[{"constant":false,"id":5180,"mutability":"mutable","name":"stateRoot","nameLocation":"12694:9:21","nodeType":"VariableDeclaration","scope":5214,"src":"12686:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12686:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5189,"initialValue":{"arguments":[{"arguments":[{"id":5184,"name":"validityHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"12733:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":5185,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12747:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12753:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"12747:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5182,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12716:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12720:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"12716:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12716:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5181,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12706:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12706:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"12686:78:21"},{"expression":{"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5190,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"12799:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest storage pointer"}},"id":5192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12807:7:21","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"12799:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12817:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12799:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5195,"nodeType":"ExpressionStatement","src":"12799:22:21"},{"expression":{"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5196,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"12839:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest storage pointer"}},"id":5198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12847:9:21","memberName":"stateRoot","nodeType":"MemberAccess","referencedDeclaration":4417,"src":"12839:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5199,"name":"stateRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"12859:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12839:29:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5201,"nodeType":"ExpressionStatement","src":"12839:29:21"},{"expression":{"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5202,"name":"verifiedProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"12886:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5204,"indexExpression":{"id":5203,"name":"stateRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"12901:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12886:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12914:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12886:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5207,"nodeType":"ExpressionStatement","src":"12886:32:21"},{"eventCall":{"arguments":[{"id":5209,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"12972:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12988:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5211,"name":"stateRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"12994:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5208,"name":"ProofVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"12958:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$","typeString":"function (uint256,bool,bytes32)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5213,"nodeType":"EmitStatement","src":"12953:51:21"}]},"id":5215,"nodeType":"IfStatement","src":"10952:2067:21","trueBody":{"id":5171,"nodeType":"Block","src":"10970:1526:21","statements":[{"assignments":[5064],"declarations":[{"constant":false,"id":5064,"mutability":"mutable","name":"proofData","nameLocation":"11054:9:21","nodeType":"VariableDeclaration","scope":5171,"src":"11040:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5063,"name":"string","nodeType":"ElementaryTypeName","src":"11040:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5069,"initialValue":{"arguments":[{"id":5066,"name":"jsonResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"11083:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"70726f6f66","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11097:7:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5bd20250df117ee1576cde77471907f0792dabd126e96e46ea0b2c71299ea1e","typeString":"literal_string \"proof\""},"value":"proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a5bd20250df117ee1576cde77471907f0792dabd126e96e46ea0b2c71299ea1e","typeString":"literal_string \"proof\""}],"id":5065,"name":"_parseJsonString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"11066:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory,string memory) pure returns (string memory)"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11066:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"11040:65:21"},{"assignments":[5071],"declarations":[{"constant":false,"id":5071,"mutability":"mutable","name":"publicSignalsData","nameLocation":"11137:17:21","nodeType":"VariableDeclaration","scope":5171,"src":"11123:31:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5070,"name":"string","nodeType":"ElementaryTypeName","src":"11123:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5076,"initialValue":{"arguments":[{"id":5073,"name":"jsonResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"11174:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"7075626c69635369676e616c73","id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11188:15:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_65ea7731216d8d2930c089d4d135a485e0d7bab5e0ea8346df02f7b7da161f54","typeString":"literal_string \"publicSignals\""},"value":"publicSignals"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_65ea7731216d8d2930c089d4d135a485e0d7bab5e0ea8346df02f7b7da161f54","typeString":"literal_string \"publicSignals\""}],"id":5072,"name":"_parseJsonString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"11157:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory,string memory) pure returns (string memory)"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11157:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"11123:81:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5079,"name":"proofData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"11249:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11243:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5077,"name":"bytes","nodeType":"ElementaryTypeName","src":"11243:5:21","typeDescriptions":{}}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11243:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11260:6:21","memberName":"length","nodeType":"MemberAccess","src":"11243:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11269:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11243:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5086,"name":"publicSignalsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"11280:17:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11274:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5084,"name":"bytes","nodeType":"ElementaryTypeName","src":"11274:5:21","typeDescriptions":{}}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11274:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11299:6:21","memberName":"length","nodeType":"MemberAccess","src":"11274:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11308:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11274:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11243:66:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5169,"nodeType":"Block","src":"11928:554:21","statements":[{"assignments":[5128],"declarations":[{"constant":false,"id":5128,"mutability":"mutable","name":"validityHash","nameLocation":"12038:12:21","nodeType":"VariableDeclaration","scope":5169,"src":"12024:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5127,"name":"string","nodeType":"ElementaryTypeName","src":"12024:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5133,"initialValue":{"arguments":[{"id":5130,"name":"jsonResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"12070:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"76616c696469747948617368","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12084:14:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ae3148ccb475de270e1abfe65d7d4ba2786e229def1b2906f5f7b5fb445a7f","typeString":"literal_string \"validityHash\""},"value":"validityHash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_67ae3148ccb475de270e1abfe65d7d4ba2786e229def1b2906f5f7b5fb445a7f","typeString":"literal_string \"validityHash\""}],"id":5129,"name":"_parseJsonString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12053:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory,string memory) pure returns (string memory)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12053:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"12024:75:21"},{"assignments":[5135],"declarations":[{"constant":false,"id":5135,"mutability":"mutable","name":"stateRoot","nameLocation":"12129:9:21","nodeType":"VariableDeclaration","scope":5169,"src":"12121:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12121:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5144,"initialValue":{"arguments":[{"arguments":[{"id":5139,"name":"validityHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"12168:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":5140,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12182:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12188:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"12182:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5137,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12151:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12155:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"12151:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12151:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5136,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12141:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12141:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"12121:78:21"},{"expression":{"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5145,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"12242:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest storage pointer"}},"id":5147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12250:7:21","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"12242:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12260:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12242:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5150,"nodeType":"ExpressionStatement","src":"12242:22:21"},{"expression":{"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5151,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"12286:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest storage pointer"}},"id":5153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12294:9:21","memberName":"stateRoot","nodeType":"MemberAccess","referencedDeclaration":4417,"src":"12286:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5154,"name":"stateRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"12306:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12286:29:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5156,"nodeType":"ExpressionStatement","src":"12286:29:21"},{"expression":{"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5157,"name":"verifiedProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"12337:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5159,"indexExpression":{"id":5158,"name":"stateRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"12352:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12365:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12337:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5162,"nodeType":"ExpressionStatement","src":"12337:32:21"},{"eventCall":{"arguments":[{"id":5164,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"12431:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12447:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5166,"name":"stateRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"12453:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5163,"name":"ProofVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"12417:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$","typeString":"function (uint256,bool,bytes32)"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12417:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5168,"nodeType":"EmitStatement","src":"12412:51:21"}]},"id":5170,"nodeType":"IfStatement","src":"11239:1243:21","trueBody":{"id":5126,"nodeType":"Block","src":"11311:611:21","statements":[{"assignments":[5093],"declarations":[{"constant":false,"id":5093,"mutability":"mutable","name":"proofHash","nameLocation":"11570:9:21","nodeType":"VariableDeclaration","scope":5126,"src":"11562:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11562:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5101,"initialValue":{"arguments":[{"arguments":[{"id":5097,"name":"proofData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"11609:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5098,"name":"publicSignalsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"11620:17:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":5095,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11592:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11596:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"11592:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11592:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5094,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11582:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11582:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11562:77:21"},{"expression":{"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5102,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"11682:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest storage pointer"}},"id":5104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11690:7:21","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"11682:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11700:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11682:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5107,"nodeType":"ExpressionStatement","src":"11682:22:21"},{"expression":{"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5108,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"11726:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest storage pointer"}},"id":5110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11734:9:21","memberName":"stateRoot","nodeType":"MemberAccess","referencedDeclaration":4417,"src":"11726:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5111,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"11746:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11726:29:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5113,"nodeType":"ExpressionStatement","src":"11726:29:21"},{"expression":{"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5114,"name":"verifiedProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"11777:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5116,"indexExpression":{"id":5115,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"11792:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11777:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11805:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11777:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5119,"nodeType":"ExpressionStatement","src":"11777:32:21"},{"eventCall":{"arguments":[{"id":5121,"name":"proofRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"11871:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11887:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5123,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"11893:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5120,"name":"ProofVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"11857:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$","typeString":"function (uint256,bool,bytes32)"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11857:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5125,"nodeType":"EmitStatement","src":"11852:51:21"}]}}]}}]}},{"eventCall":{"arguments":[{"id":5235,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"13199:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5236,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"13210:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13220:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":5234,"name":"FunctionsResponseReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"13173:25:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory,bytes memory)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13173:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5239,"nodeType":"EmitStatement","src":"13168:55:21"}]},"documentation":{"id":4985,"nodeType":"StructuredDocumentation","src":"9847:74:21","text":" @dev Callback function for Chainlink Functions response"},"id":5241,"implemented":true,"kind":"function","modifiers":[],"name":"_fulfillRequest","nameLocation":"9935:15:21","nodeType":"FunctionDefinition","overrides":{"id":4993,"nodeType":"OverrideSpecifier","overrides":[],"src":"10058:8:21"},"parameters":{"id":4992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"requestId","nameLocation":"9968:9:21","nodeType":"VariableDeclaration","scope":5241,"src":"9960:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9960:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4989,"mutability":"mutable","name":"response","nameLocation":"10000:8:21","nodeType":"VariableDeclaration","scope":5241,"src":"9987:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4988,"name":"bytes","nodeType":"ElementaryTypeName","src":"9987:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4991,"mutability":"mutable","name":"err","nameLocation":"10031:3:21","nodeType":"VariableDeclaration","scope":5241,"src":"10018:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4990,"name":"bytes","nodeType":"ElementaryTypeName","src":"10018:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9950:90:21"},"returnParameters":{"id":4994,"nodeType":"ParameterList","parameters":[],"src":"10067:0:21"},"scope":5929,"src":"9926:3304:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":5328,"nodeType":"Block","src":"13394:531:21","statements":[{"assignments":[5252],"declarations":[{"constant":false,"id":5252,"mutability":"mutable","name":"jsonBytes","nameLocation":"13417:9:21","nodeType":"VariableDeclaration","scope":5328,"src":"13404:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5251,"name":"bytes","nodeType":"ElementaryTypeName","src":"13404:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5257,"initialValue":{"arguments":[{"id":5255,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"13435:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13429:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5253,"name":"bytes","nodeType":"ElementaryTypeName","src":"13429:5:21","typeDescriptions":{}}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13429:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"13404:36:21"},{"assignments":[5259],"declarations":[{"constant":false,"id":5259,"mutability":"mutable","name":"keyBytes","nameLocation":"13463:8:21","nodeType":"VariableDeclaration","scope":5328,"src":"13450:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5258,"name":"bytes","nodeType":"ElementaryTypeName","src":"13450:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5272,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"22","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13504:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"id":5267,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"13509:3:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"223a74727565","id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13514:8:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5e2fa615c8403a5422d61d44dd9ef428811baa7e97d137f5d7677d6faddc0ad","typeString":"literal_string \"\":true\""},"value":"\":true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_e5e2fa615c8403a5422d61d44dd9ef428811baa7e97d137f5d7677d6faddc0ad","typeString":"literal_string \"\":true\""}],"expression":{"id":5264,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13487:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13491:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"13487:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13487:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13480:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5262,"name":"string","nodeType":"ElementaryTypeName","src":"13480:6:21","typeDescriptions":{}}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13480:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13474:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5260,"name":"bytes","nodeType":"ElementaryTypeName","src":"13474:5:21","typeDescriptions":{}}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13474:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"13450:75:21"},{"body":{"id":5324,"nodeType":"Block","src":"13607:290:21","statements":[{"assignments":[5288],"declarations":[{"constant":false,"id":5288,"mutability":"mutable","name":"isMatch","nameLocation":"13626:7:21","nodeType":"VariableDeclaration","scope":5324,"src":"13621:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5287,"name":"bool","nodeType":"ElementaryTypeName","src":"13621:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5290,"initialValue":{"hexValue":"74727565","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13636:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"13621:19:21"},{"body":{"id":5318,"nodeType":"Block","src":"13697:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5302,"name":"jsonBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"13719:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5306,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5303,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"13729:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5304,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"13733:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13729:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13719:16:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"id":5307,"name":"keyBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"13739:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5309,"indexExpression":{"id":5308,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"13748:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13739:11:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"13719:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5317,"nodeType":"IfStatement","src":"13715:120:21","trueBody":{"id":5316,"nodeType":"Block","src":"13752:83:21","statements":[{"expression":{"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5311,"name":"isMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"13774:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13784:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13774:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5314,"nodeType":"ExpressionStatement","src":"13774:15:21"},{"id":5315,"nodeType":"Break","src":"13811:5:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5295,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"13671:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5296,"name":"keyBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"13675:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13684:6:21","memberName":"length","nodeType":"MemberAccess","src":"13675:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13671:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5319,"initializationExpression":{"assignments":[5292],"declarations":[{"constant":false,"id":5292,"mutability":"mutable","name":"j","nameLocation":"13664:1:21","nodeType":"VariableDeclaration","scope":5319,"src":"13659:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5291,"name":"uint","nodeType":"ElementaryTypeName","src":"13659:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5294,"initialValue":{"hexValue":"30","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13668:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13659:10:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13692:3:21","subExpression":{"id":5299,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"13692:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5301,"nodeType":"ExpressionStatement","src":"13692:3:21"},"nodeType":"ForStatement","src":"13654:195:21"},{"condition":{"id":5320,"name":"isMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"13866:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5323,"nodeType":"IfStatement","src":"13862:24:21","trueBody":{"expression":{"hexValue":"74727565","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13882:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5250,"id":5322,"nodeType":"Return","src":"13875:11:21"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"13561:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5278,"name":"jsonBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"13566:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13576:6:21","memberName":"length","nodeType":"MemberAccess","src":"13566:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5280,"name":"keyBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"13585:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13594:6:21","memberName":"length","nodeType":"MemberAccess","src":"13585:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13566:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13561:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5325,"initializationExpression":{"assignments":[5274],"declarations":[{"constant":false,"id":5274,"mutability":"mutable","name":"i","nameLocation":"13554:1:21","nodeType":"VariableDeclaration","scope":5325,"src":"13549:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5273,"name":"uint","nodeType":"ElementaryTypeName","src":"13549:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5276,"initialValue":{"hexValue":"30","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13558:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13549:10:21"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13602:3:21","subExpression":{"id":5284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"13602:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5286,"nodeType":"ExpressionStatement","src":"13602:3:21"},"nodeType":"ForStatement","src":"13544:353:21"},{"expression":{"hexValue":"66616c7365","id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13913:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5250,"id":5327,"nodeType":"Return","src":"13906:12:21"}]},"documentation":{"id":5242,"nodeType":"StructuredDocumentation","src":"13236:61:21","text":" @dev Simple JSON parser for boolean values"},"id":5329,"implemented":true,"kind":"function","modifiers":[],"name":"_parseJsonBool","nameLocation":"13311:14:21","nodeType":"FunctionDefinition","parameters":{"id":5247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"json","nameLocation":"13340:4:21","nodeType":"VariableDeclaration","scope":5329,"src":"13326:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5243,"name":"string","nodeType":"ElementaryTypeName","src":"13326:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5246,"mutability":"mutable","name":"key","nameLocation":"13360:3:21","nodeType":"VariableDeclaration","scope":5329,"src":"13346:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5245,"name":"string","nodeType":"ElementaryTypeName","src":"13346:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13325:39:21"},"returnParameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5329,"src":"13388:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5248,"name":"bool","nodeType":"ElementaryTypeName","src":"13388:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13387:6:21"},"scope":5929,"src":"13302:623:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5484,"nodeType":"Block","src":"14099:1258:21","statements":[{"assignments":[5340],"declarations":[{"constant":false,"id":5340,"mutability":"mutable","name":"jsonBytes","nameLocation":"14122:9:21","nodeType":"VariableDeclaration","scope":5484,"src":"14109:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5339,"name":"bytes","nodeType":"ElementaryTypeName","src":"14109:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5345,"initialValue":{"arguments":[{"id":5343,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"14140:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14134:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5341,"name":"bytes","nodeType":"ElementaryTypeName","src":"14134:5:21","typeDescriptions":{}}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14134:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"14109:36:21"},{"assignments":[5347],"declarations":[{"constant":false,"id":5347,"mutability":"mutable","name":"searchBytes","nameLocation":"14168:11:21","nodeType":"VariableDeclaration","scope":5484,"src":"14155:24:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5346,"name":"bytes","nodeType":"ElementaryTypeName","src":"14155:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5360,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"22","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14212:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"id":5355,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"14217:3:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"223a22","id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14222:5:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_2bf6bbe47eb01b0051d1ca88f3e10e8b655c1ed5c3e8200977fddf64a223afa0","typeString":"literal_string \"\":\"\""},"value":"\":\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_2bf6bbe47eb01b0051d1ca88f3e10e8b655c1ed5c3e8200977fddf64a223afa0","typeString":"literal_string \"\":\"\""}],"expression":{"id":5352,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14195:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14199:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"14195:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14195:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14188:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5350,"name":"string","nodeType":"ElementaryTypeName","src":"14188:6:21","typeDescriptions":{}}},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14188:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14182:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5348,"name":"bytes","nodeType":"ElementaryTypeName","src":"14182:5:21","typeDescriptions":{}}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14182:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"14155:75:21"},{"body":{"id":5480,"nodeType":"Block","src":"14315:1017:21","statements":[{"assignments":[5376],"declarations":[{"constant":false,"id":5376,"mutability":"mutable","name":"isMatch","nameLocation":"14334:7:21","nodeType":"VariableDeclaration","scope":5480,"src":"14329:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5375,"name":"bool","nodeType":"ElementaryTypeName","src":"14329:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5378,"initialValue":{"hexValue":"74727565","id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14344:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"14329:19:21"},{"body":{"id":5406,"nodeType":"Block","src":"14408:155:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5390,"name":"jsonBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"14430:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5394,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5391,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"14440:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5392,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14444:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14440:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14430:16:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"id":5395,"name":"searchBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"14450:11:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5397,"indexExpression":{"id":5396,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14462:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14450:14:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"14430:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5405,"nodeType":"IfStatement","src":"14426:123:21","trueBody":{"id":5404,"nodeType":"Block","src":"14466:83:21","statements":[{"expression":{"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5399,"name":"isMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"14488:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14498:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"14488:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5402,"nodeType":"ExpressionStatement","src":"14488:15:21"},{"id":5403,"nodeType":"Break","src":"14525:5:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5383,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14379:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5384,"name":"searchBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"14383:11:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14395:6:21","memberName":"length","nodeType":"MemberAccess","src":"14383:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14379:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"initializationExpression":{"assignments":[5380],"declarations":[{"constant":false,"id":5380,"mutability":"mutable","name":"j","nameLocation":"14372:1:21","nodeType":"VariableDeclaration","scope":5407,"src":"14367:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint","nodeType":"ElementaryTypeName","src":"14367:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5382,"initialValue":{"hexValue":"30","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14376:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14367:10:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14403:3:21","subExpression":{"id":5387,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14403:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5389,"nodeType":"ExpressionStatement","src":"14403:3:21"},"nodeType":"ForStatement","src":"14362:201:21"},{"condition":{"id":5408,"name":"isMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"14580:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5479,"nodeType":"IfStatement","src":"14576:746:21","trueBody":{"id":5478,"nodeType":"Block","src":"14589:733:21","statements":[{"assignments":[5410],"declarations":[{"constant":false,"id":5410,"mutability":"mutable","name":"startIndex","nameLocation":"14668:10:21","nodeType":"VariableDeclaration","scope":5478,"src":"14663:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5409,"name":"uint","nodeType":"ElementaryTypeName","src":"14663:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5415,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"14681:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":5412,"name":"searchBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"14685:11:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14697:6:21","memberName":"length","nodeType":"MemberAccess","src":"14685:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14681:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14663:40:21"},{"assignments":[5417],"declarations":[{"constant":false,"id":5417,"mutability":"mutable","name":"endIndex","nameLocation":"14726:8:21","nodeType":"VariableDeclaration","scope":5478,"src":"14721:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint","nodeType":"ElementaryTypeName","src":"14721:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5419,"initialValue":{"id":5418,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"14737:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14721:26:21"},{"body":{"id":5433,"nodeType":"Block","src":"14890:51:21","statements":[{"expression":{"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14912:10:21","subExpression":{"id":5430,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"14912:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5432,"nodeType":"ExpressionStatement","src":"14912:10:21"}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5420,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"14831:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5421,"name":"jsonBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"14842:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14852:6:21","memberName":"length","nodeType":"MemberAccess","src":"14842:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14831:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5424,"name":"jsonBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"14862:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5426,"indexExpression":{"id":5425,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"14872:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14862:19:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"22","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14885:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"14862:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14831:57:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5434,"nodeType":"WhileStatement","src":"14824:117:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"14979:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5436,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"14990:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14979:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5477,"nodeType":"IfStatement","src":"14975:333:21","trueBody":{"id":5476,"nodeType":"Block","src":"15002:306:21","statements":[{"assignments":[5439],"declarations":[{"constant":false,"id":5439,"mutability":"mutable","name":"valueBytes","nameLocation":"15037:10:21","nodeType":"VariableDeclaration","scope":5476,"src":"15024:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5438,"name":"bytes","nodeType":"ElementaryTypeName","src":"15024:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5446,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5442,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"15060:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5443,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"15071:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15060:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15050:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5440,"name":"bytes","nodeType":"ElementaryTypeName","src":"15054:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15050:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15024:58:21"},{"body":{"id":5469,"nodeType":"Block","src":"15153:90:21","statements":[{"expression":{"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5459,"name":"valueBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"15179:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5461,"indexExpression":{"id":5460,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"15190:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15179:13:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5462,"name":"jsonBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"15195:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5466,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5463,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"15205:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5464,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"15218:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15205:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15195:25:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"15179:41:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5468,"nodeType":"ExpressionStatement","src":"15179:41:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"15121:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5452,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"15125:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5453,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"15136:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15125:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15121:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5470,"initializationExpression":{"assignments":[5448],"declarations":[{"constant":false,"id":5448,"mutability":"mutable","name":"k","nameLocation":"15114:1:21","nodeType":"VariableDeclaration","scope":5470,"src":"15109:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5447,"name":"uint","nodeType":"ElementaryTypeName","src":"15109:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5450,"initialValue":{"hexValue":"30","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15118:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15109:10:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15148:3:21","subExpression":{"id":5456,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"15148:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5458,"nodeType":"ExpressionStatement","src":"15148:3:21"},"nodeType":"ForStatement","src":"15104:139:21"},{"expression":{"arguments":[{"id":5473,"name":"valueBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"15278:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15271:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5471,"name":"string","nodeType":"ElementaryTypeName","src":"15271:6:21","typeDescriptions":{}}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15271:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5338,"id":5475,"nodeType":"Return","src":"15264:25:21"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"14266:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5366,"name":"jsonBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"14271:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14281:6:21","memberName":"length","nodeType":"MemberAccess","src":"14271:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5368,"name":"searchBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"14290:11:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14302:6:21","memberName":"length","nodeType":"MemberAccess","src":"14290:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14271:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14266:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5481,"initializationExpression":{"assignments":[5362],"declarations":[{"constant":false,"id":5362,"mutability":"mutable","name":"i","nameLocation":"14259:1:21","nodeType":"VariableDeclaration","scope":5481,"src":"14254:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5361,"name":"uint","nodeType":"ElementaryTypeName","src":"14254:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5364,"initialValue":{"hexValue":"30","id":5363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14263:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14254:10:21"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14310:3:21","subExpression":{"id":5372,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"14310:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5374,"nodeType":"ExpressionStatement","src":"14310:3:21"},"nodeType":"ForStatement","src":"14249:1083:21"},{"expression":{"hexValue":"","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15348:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":5338,"id":5483,"nodeType":"Return","src":"15341:9:21"}]},"documentation":{"id":5330,"nodeType":"StructuredDocumentation","src":"13931:60:21","text":" @dev Simple JSON parser for string values"},"id":5485,"implemented":true,"kind":"function","modifiers":[],"name":"_parseJsonString","nameLocation":"14005:16:21","nodeType":"FunctionDefinition","parameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5332,"mutability":"mutable","name":"json","nameLocation":"14036:4:21","nodeType":"VariableDeclaration","scope":5485,"src":"14022:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5331,"name":"string","nodeType":"ElementaryTypeName","src":"14022:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5334,"mutability":"mutable","name":"key","nameLocation":"14056:3:21","nodeType":"VariableDeclaration","scope":5485,"src":"14042:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5333,"name":"string","nodeType":"ElementaryTypeName","src":"14042:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14021:39:21"},"returnParameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5485,"src":"14084:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5336,"name":"string","nodeType":"ElementaryTypeName","src":"14084:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14083:15:21"},"scope":5929,"src":"13996:1361:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5509,"nodeType":"Block","src":"15625:271:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5495,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"15714:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15720:6:21","memberName":"length","nodeType":"MemberAccess","src":"15714:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15730:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15714:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5499,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"15735:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15748:6:21","memberName":"length","nodeType":"MemberAccess","src":"15735:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15758:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15735:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15714:45:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5506,"nodeType":"IfStatement","src":"15710:63:21","trueBody":{"expression":{"hexValue":"66616c7365","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15768:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5494,"id":5505,"nodeType":"Return","src":"15761:12:21"}},{"expression":{"hexValue":"74727565","id":5507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15885:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5494,"id":5508,"nodeType":"Return","src":"15878:11:21"}]},"documentation":{"id":5486,"nodeType":"StructuredDocumentation","src":"15363:157:21","text":" @dev Verify ZK proof using simplified validation\n Since we're getting JSON data instead of raw proof bytes, we use hash verification"},"id":5510,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyZKProof","nameLocation":"15534:14:21","nodeType":"FunctionDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"proof","nameLocation":"15562:5:21","nodeType":"VariableDeclaration","scope":5510,"src":"15549:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5487,"name":"bytes","nodeType":"ElementaryTypeName","src":"15549:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5490,"mutability":"mutable","name":"publicInputs","nameLocation":"15582:12:21","nodeType":"VariableDeclaration","scope":5510,"src":"15569:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5489,"name":"bytes","nodeType":"ElementaryTypeName","src":"15569:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15548:47:21"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5510,"src":"15619:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5492,"name":"bool","nodeType":"ElementaryTypeName","src":"15619:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15618:6:21"},"scope":5929,"src":"15525:371:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[60],"body":{"id":5535,"nodeType":"Block","src":"16066:123:21","statements":[{"expression":{"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5521,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"16076:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5522,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16092:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16098:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"16092:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5524,"name":"lastUpkeepTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"16110:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16092:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16091:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5527,"name":"upkeepInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"16133:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16091:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16076:71:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5530,"nodeType":"ExpressionStatement","src":"16076:71:21"},{"expression":{"components":[{"id":5531,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"16165:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"","id":5532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16179:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":5533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16164:18:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$","typeString":"tuple(bool,literal_string \"\")"}},"functionReturnParameters":5520,"id":5534,"nodeType":"Return","src":"16157:25:21"}]},"documentation":{"id":5511,"nodeType":"StructuredDocumentation","src":"15902:57:21","text":" @dev Chainlink Automation upkeep check"},"functionSelector":"6e04ff0d","id":5536,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"15973:11:21","nodeType":"FunctionDefinition","overrides":{"id":5515,"nodeType":"OverrideSpecifier","overrides":[],"src":"16015:8:21"},"parameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5536,"src":"15985:14:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5512,"name":"bytes","nodeType":"ElementaryTypeName","src":"15985:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15984:16:21"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5517,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"16038:12:21","nodeType":"VariableDeclaration","scope":5536,"src":"16033:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5516,"name":"bool","nodeType":"ElementaryTypeName","src":"16033:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5536,"src":"16052:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5518,"name":"bytes","nodeType":"ElementaryTypeName","src":"16052:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16032:33:21"},"scope":5929,"src":"15964:225:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[66],"body":{"id":5566,"nodeType":"Block","src":"16316:297:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5544,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16335:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16341:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"16335:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5546,"name":"lastUpkeepTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"16353:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16335:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16334:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5549,"name":"upkeepInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"16376:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16334:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55706b656570206e6f74206e6565646564","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16392:19:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630","typeString":"literal_string \"Upkeep not needed\""},"value":"Upkeep not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630","typeString":"literal_string \"Upkeep not needed\""}],"id":5543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16326:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16326:86:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5553,"nodeType":"ExpressionStatement","src":"16326:86:21"},{"expression":{"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5554,"name":"lastUpkeepTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"16431:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5555,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16453:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16459:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"16453:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16431:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5558,"nodeType":"ExpressionStatement","src":"16431:37:21"},{"expression":{"arguments":[{"hexValue":"657468657265756d","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16564:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_541111248b45b7a8dc3f5579f630e74cb01456ea6ac067d3f4d793245a255155","typeString":"literal_string \"ethereum\""},"value":"ethereum"},{"hexValue":"30","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16576:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_541111248b45b7a8dc3f5579f630e74cb01456ea6ac067d3f4d793245a255155","typeString":"literal_string \"ethereum\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":5559,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16534:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProofAggregator_$5929","typeString":"contract ZKProofAggregator"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16539:24:21","memberName":"requestProofVerification","nodeType":"MemberAccess","referencedDeclaration":4664,"src":"16534:29:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256) external returns (uint256)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16534:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5565,"nodeType":"ExpressionStatement","src":"16534:44:21"}]},"documentation":{"id":5537,"nodeType":"StructuredDocumentation","src":"16195:59:21","text":" @dev Chainlink Automation upkeep perform"},"functionSelector":"4585e33b","id":5567,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"16268:13:21","nodeType":"FunctionDefinition","overrides":{"id":5541,"nodeType":"OverrideSpecifier","overrides":[],"src":"16307:8:21"},"parameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5567,"src":"16282:14:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5538,"name":"bytes","nodeType":"ElementaryTypeName","src":"16282:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16281:16:21"},"returnParameters":{"id":5542,"nodeType":"ParameterList","parameters":[],"src":"16316:0:21"},"scope":5929,"src":"16259:354:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5579,"nodeType":"Block","src":"16760:49:21","statements":[{"expression":{"baseExpression":{"id":5575,"name":"verifiedProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"16777:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5577,"indexExpression":{"id":5576,"name":"stateRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"16792:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16777:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5574,"id":5578,"nodeType":"Return","src":"16770:32:21"}]},"documentation":{"id":5568,"nodeType":"StructuredDocumentation","src":"16619:63:21","text":" @dev Check if a state root has been verified"},"functionSelector":"a9431f23","id":5580,"implemented":true,"kind":"function","modifiers":[],"name":"isStateVerified","nameLocation":"16696:15:21","nodeType":"FunctionDefinition","parameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"stateRoot","nameLocation":"16720:9:21","nodeType":"VariableDeclaration","scope":5580,"src":"16712:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16712:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16711:19:21"},"returnParameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5580,"src":"16754:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5572,"name":"bool","nodeType":"ElementaryTypeName","src":"16754:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16753:6:21"},"scope":5929,"src":"16687:122:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5725,"nodeType":"Block","src":"17261:1256:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5595,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"17279:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17286:6:21","memberName":"length","nodeType":"MemberAccess","src":"17279:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5597,"name":"publicInputsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"17296:17:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17314:6:21","memberName":"length","nodeType":"MemberAccess","src":"17296:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17279:41:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5600,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"17324:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17331:6:21","memberName":"length","nodeType":"MemberAccess","src":"17324:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17340:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17324:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17279:62:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e70757420617272617973","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17343:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_affd930f7b3c80bda8c61d776921b6571909667981ae7c49ebe12bb2e8009ecb","typeString":"literal_string \"Invalid input arrays\""},"value":"Invalid input arrays"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_affd930f7b3c80bda8c61d776921b6571909667981ae7c49ebe12bb2e8009ecb","typeString":"literal_string \"Invalid input arrays\""}],"id":5594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17271:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17271:95:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5607,"nodeType":"ExpressionStatement","src":"17271:95:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5609,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"17384:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17391:6:21","memberName":"length","nodeType":"MemberAccess","src":"17384:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17401:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"17384:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6f206d616e792070726f6f667320746f20616767726567617465","id":5613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17405:30:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b2e9b4bfda2b7982cf3d6f78c96fd65c7b5b5c746d13439b7f32066ae197141","typeString":"literal_string \"Too many proofs to aggregate\""},"value":"Too many proofs to aggregate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b2e9b4bfda2b7982cf3d6f78c96fd65c7b5b5c746d13439b7f32066ae197141","typeString":"literal_string \"Too many proofs to aggregate\""}],"id":5608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17376:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17376:60:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5615,"nodeType":"ExpressionStatement","src":"17376:60:21"},{"assignments":[5620],"declarations":[{"constant":false,"id":5620,"mutability":"mutable","name":"proofHashes","nameLocation":"17500:11:21","nodeType":"VariableDeclaration","scope":5725,"src":"17483:28:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17483:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5619,"nodeType":"ArrayTypeName","src":"17483:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5627,"initialValue":{"arguments":[{"expression":{"id":5624,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"17528:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:21","memberName":"length","nodeType":"MemberAccess","src":"17528:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17514:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17518:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5622,"nodeType":"ArrayTypeName","src":"17518:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17514:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17483:59:21"},{"body":{"id":5685,"nodeType":"Block","src":"17664:407:21","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":5641,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"17701:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5643,"indexExpression":{"id":5642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"17708:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17701:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"baseExpression":{"id":5644,"name":"publicInputsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"17712:17:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5646,"indexExpression":{"id":5645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"17730:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17712:20:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":5640,"name":"_verifyZKProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"17686:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory,bytes memory) view returns (bool)"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17686:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6f6620696e206167677265676174696f6e","id":5648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17735:30:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_09d5103da0ba678b9f1b12ce733e30ce22965c39df951e4838588d232753f958","typeString":"literal_string \"Invalid proof in aggregation\""},"value":"Invalid proof in aggregation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09d5103da0ba678b9f1b12ce733e30ce22965c39df951e4838588d232753f958","typeString":"literal_string \"Invalid proof in aggregation\""}],"id":5639,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17678:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17678:88:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5650,"nodeType":"ExpressionStatement","src":"17678:88:21"},{"assignments":[5652],"declarations":[{"constant":false,"id":5652,"mutability":"mutable","name":"proofHash","nameLocation":"17801:9:21","nodeType":"VariableDeclaration","scope":5685,"src":"17793:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17793:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5664,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":5656,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"17840:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5658,"indexExpression":{"id":5657,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"17847:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17840:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"baseExpression":{"id":5659,"name":"publicInputsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"17851:17:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5661,"indexExpression":{"id":5660,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"17869:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17851:20:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":5654,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17823:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17827:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"17823:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17823:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5653,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"17813:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17813:60:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"17793:80:21"},{"expression":{"arguments":[{"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17895:27:21","subExpression":{"baseExpression":{"id":5666,"name":"usedProofHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"17896:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5668,"indexExpression":{"id":5667,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"17912:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17896:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f6620616c7265616479207573656420696e206167677265676174696f6e","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17924:35:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d0463065ff643258a9fac92ba9dd8493e04b30cb97ac36996389c976d173d01","typeString":"literal_string \"Proof already used in aggregation\""},"value":"Proof already used in aggregation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d0463065ff643258a9fac92ba9dd8493e04b30cb97ac36996389c976d173d01","typeString":"literal_string \"Proof already used in aggregation\""}],"id":5665,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17887:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17887:73:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5672,"nodeType":"ExpressionStatement","src":"17887:73:21"},{"expression":{"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5673,"name":"proofHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"17987:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5675,"indexExpression":{"id":5674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"17999:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17987:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5676,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"18004:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"17987:26:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5678,"nodeType":"ExpressionStatement","src":"17987:26:21"},{"expression":{"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5679,"name":"usedProofHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"18027:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5681,"indexExpression":{"id":5680,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"18043:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18027:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18056:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"18027:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5684,"nodeType":"ExpressionStatement","src":"18027:33:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"17640:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5633,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"17644:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17651:6:21","memberName":"length","nodeType":"MemberAccess","src":"17644:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17640:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5686,"initializationExpression":{"assignments":[5629],"declarations":[{"constant":false,"id":5629,"mutability":"mutable","name":"i","nameLocation":"17633:1:21","nodeType":"VariableDeclaration","scope":5686,"src":"17625:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5628,"name":"uint256","nodeType":"ElementaryTypeName","src":"17625:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5631,"initialValue":{"hexValue":"30","id":5630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17637:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17625:13:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17659:3:21","subExpression":{"id":5636,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"17659:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5638,"nodeType":"ExpressionStatement","src":"17659:3:21"},"nodeType":"ForStatement","src":"17620:451:21"},{"expression":{"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5687,"name":"aggregatedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"18123:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5691,"name":"proofHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"18167:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"expression":{"id":5692,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"18180:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18186:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"18180:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5694,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18197:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18201:6:21","memberName":"sender","nodeType":"MemberAccess","src":"18197:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5689,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18150:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18154:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"18150:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18150:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5688,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"18140:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18140:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18123:86:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5699,"nodeType":"ExpressionStatement","src":"18123:86:21"},{"assignments":[5701],"declarations":[{"constant":false,"id":5701,"mutability":"mutable","name":"requestId","nameLocation":"18269:9:21","nodeType":"VariableDeclaration","scope":5725,"src":"18261:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5700,"name":"uint256","nodeType":"ElementaryTypeName","src":"18261:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5704,"initialValue":{"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"18281:16:21","subExpression":{"id":5702,"name":"requestCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"18283:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18261:36:21"},{"expression":{"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5705,"name":"aggregatedProofHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"18307:21:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(uint256 => bytes32[] storage ref)"}},"id":5707,"indexExpression":{"id":5706,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"18329:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18307:32:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5708,"name":"proofHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"18342:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"18307:46:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5710,"nodeType":"ExpressionStatement","src":"18307:46:21"},{"expression":{"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5711,"name":"verifiedProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"18363:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5713,"indexExpression":{"id":5712,"name":"aggregatedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"18378:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18363:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18396:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"18363:37:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5716,"nodeType":"ExpressionStatement","src":"18363:37:21"},{"eventCall":{"arguments":[{"id":5718,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"18438:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18449:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5720,"name":"aggregatedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"18455:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5717,"name":"ProofVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"18424:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$","typeString":"function (uint256,bool,bytes32)"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18424:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5722,"nodeType":"EmitStatement","src":"18419:51:21"},{"expression":{"id":5723,"name":"aggregatedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"18496:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5593,"id":5724,"nodeType":"Return","src":"18489:21:21"}]},"documentation":{"id":5581,"nodeType":"StructuredDocumentation","src":"16815:276:21","text":" @dev Aggregate multiple ZK proofs into a single verification\n @param proofs Array of proof data to aggregate\n @param publicInputsArray Array of public inputs for each proof\n @return aggregatedHash The hash representing the aggregated proof"},"functionSelector":"d175d81a","id":5726,"implemented":true,"kind":"function","modifiers":[{"id":5590,"kind":"modifierInvocation","modifierName":{"id":5589,"name":"onlyAuthorized","nameLocations":["17213:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":4522,"src":"17213:14:21"},"nodeType":"ModifierInvocation","src":"17213:14:21"}],"name":"aggregateProofs","nameLocation":"17105:15:21","nodeType":"FunctionDefinition","parameters":{"id":5588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5584,"mutability":"mutable","name":"proofs","nameLocation":"17147:6:21","nodeType":"VariableDeclaration","scope":5726,"src":"17130:23:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":5582,"name":"bytes","nodeType":"ElementaryTypeName","src":"17130:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":5583,"nodeType":"ArrayTypeName","src":"17130:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":5587,"mutability":"mutable","name":"publicInputsArray","nameLocation":"17180:17:21","nodeType":"VariableDeclaration","scope":5726,"src":"17163:34:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":5585,"name":"bytes","nodeType":"ElementaryTypeName","src":"17163:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":5586,"nodeType":"ArrayTypeName","src":"17163:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"17120:83:21"},"returnParameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"aggregatedHash","nameLocation":"17245:14:21","nodeType":"VariableDeclaration","scope":5726,"src":"17237:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17237:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17236:24:21"},"scope":5929,"src":"17096:1421:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5739,"nodeType":"Block","src":"18665:48:21","statements":[{"expression":{"baseExpression":{"id":5735,"name":"proofRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"18682:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofRequest_$4422_storage_$","typeString":"mapping(uint256 => struct ZKProofAggregator.ProofRequest storage ref)"}},"id":5737,"indexExpression":{"id":5736,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"18696:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18682:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage","typeString":"struct ZKProofAggregator.ProofRequest storage ref"}},"functionReturnParameters":5734,"id":5738,"nodeType":"Return","src":"18675:31:21"}]},"documentation":{"id":5727,"nodeType":"StructuredDocumentation","src":"18523:49:21","text":" @dev Get proof request details"},"functionSelector":"152a9526","id":5740,"implemented":true,"kind":"function","modifiers":[],"name":"getProofRequest","nameLocation":"18586:15:21","nodeType":"FunctionDefinition","parameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"requestId","nameLocation":"18610:9:21","nodeType":"VariableDeclaration","scope":5740,"src":"18602:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5728,"name":"uint256","nodeType":"ElementaryTypeName","src":"18602:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18601:19:21"},"returnParameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5740,"src":"18644:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_memory_ptr","typeString":"struct ZKProofAggregator.ProofRequest"},"typeName":{"id":5732,"nodeType":"UserDefinedTypeName","pathNode":{"id":5731,"name":"ProofRequest","nameLocations":["18644:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"18644:12:21"},"referencedDeclaration":4422,"src":"18644:12:21","typeDescriptions":{"typeIdentifier":"t_struct$_ProofRequest_$4422_storage_ptr","typeString":"struct ZKProofAggregator.ProofRequest"}},"visibility":"internal"}],"src":"18643:21:21"},"scope":5929,"src":"18577:136:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5752,"nodeType":"Block","src":"18847:45:21","statements":[{"expression":{"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5748,"name":"upkeepInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"18857:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5749,"name":"newInterval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"18874:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18857:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5751,"nodeType":"ExpressionStatement","src":"18857:28:21"}]},"documentation":{"id":5741,"nodeType":"StructuredDocumentation","src":"18719:48:21","text":" @dev Administrative functions"},"functionSelector":"72e4c9f6","id":5753,"implemented":true,"kind":"function","modifiers":[{"id":5746,"kind":"modifierInvocation","modifierName":{"id":5745,"name":"onlyContractOwner","nameLocations":["18829:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":4542,"src":"18829:17:21"},"nodeType":"ModifierInvocation","src":"18829:17:21"}],"name":"setUpkeepInterval","nameLocation":"18781:17:21","nodeType":"FunctionDefinition","parameters":{"id":5744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5743,"mutability":"mutable","name":"newInterval","nameLocation":"18807:11:21","nodeType":"VariableDeclaration","scope":5753,"src":"18799:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5742,"name":"uint256","nodeType":"ElementaryTypeName","src":"18799:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18798:21:21"},"returnParameters":{"id":5747,"nodeType":"ParameterList","parameters":[],"src":"18847:0:21"},"scope":5929,"src":"18772:120:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5768,"nodeType":"Block","src":"18987:55:21","statements":[{"expression":{"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5762,"name":"authorizedCallers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"18997:17:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5764,"indexExpression":{"id":5763,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"19015:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18997:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5765,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"19025:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18997:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5767,"nodeType":"ExpressionStatement","src":"18997:38:21"}]},"functionSelector":"454bbd29","id":5769,"implemented":true,"kind":"function","modifiers":[{"id":5760,"kind":"modifierInvocation","modifierName":{"id":5759,"name":"onlyContractOwner","nameLocations":["18969:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":4542,"src":"18969:17:21"},"nodeType":"ModifierInvocation","src":"18969:17:21"}],"name":"setAuthorizedCaller","nameLocation":"18907:19:21","nodeType":"FunctionDefinition","parameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5755,"mutability":"mutable","name":"caller","nameLocation":"18935:6:21","nodeType":"VariableDeclaration","scope":5769,"src":"18927:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5754,"name":"address","nodeType":"ElementaryTypeName","src":"18927:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5757,"mutability":"mutable","name":"authorized","nameLocation":"18948:10:21","nodeType":"VariableDeclaration","scope":5769,"src":"18943:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5756,"name":"bool","nodeType":"ElementaryTypeName","src":"18943:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18926:33:21"},"returnParameters":{"id":5761,"nodeType":"ParameterList","parameters":[],"src":"18987:0:21"},"scope":5929,"src":"18898:144:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5792,"nodeType":"Block","src":"19193:126:21","statements":[{"expression":{"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5780,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"19203:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5781,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"19222:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19203:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5783,"nodeType":"ExpressionStatement","src":"19203:33:21"},{"expression":{"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5784,"name":"s_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"19246:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5785,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"19258:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19246:19:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5787,"nodeType":"ExpressionStatement","src":"19246:19:21"},{"expression":{"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5788,"name":"s_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"19275:18:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5789,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5775,"src":"19296:16:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"19275:37:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":5791,"nodeType":"ExpressionStatement","src":"19275:37:21"}]},"functionSelector":"b5cce133","id":5793,"implemented":true,"kind":"function","modifiers":[{"id":5778,"kind":"modifierInvocation","modifierName":{"id":5777,"name":"onlyContractOwner","nameLocations":["19175:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":4542,"src":"19175:17:21"},"nodeType":"ModifierInvocation","src":"19175:17:21"}],"name":"setVRFConfig","nameLocation":"19057:12:21","nodeType":"FunctionDefinition","parameters":{"id":5776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5771,"mutability":"mutable","name":"subscriptionId","nameLocation":"19087:14:21","nodeType":"VariableDeclaration","scope":5793,"src":"19079:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5770,"name":"uint256","nodeType":"ElementaryTypeName","src":"19079:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5773,"mutability":"mutable","name":"keyHash","nameLocation":"19119:7:21","nodeType":"VariableDeclaration","scope":5793,"src":"19111:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19111:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5775,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"19143:16:21","nodeType":"VariableDeclaration","scope":5793,"src":"19136:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5774,"name":"uint32","nodeType":"ElementaryTypeName","src":"19136:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"19069:96:21"},"returnParameters":{"id":5779,"nodeType":"ParameterList","parameters":[],"src":"19193:0:21"},"scope":5929,"src":"19048:271:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5816,"nodeType":"Block","src":"19465:133:21","statements":[{"expression":{"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5804,"name":"s_functionsSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"19475:25:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5805,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"19503:14:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"19475:42:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":5807,"nodeType":"ExpressionStatement","src":"19475:42:21"},{"expression":{"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5808,"name":"s_functionsGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"19527:19:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5809,"name":"gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"19549:8:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"19527:30:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":5811,"nodeType":"ExpressionStatement","src":"19527:30:21"},{"expression":{"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5812,"name":"s_functionsDonId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"19567:16:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5813,"name":"donId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"19586:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19567:24:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5815,"nodeType":"ExpressionStatement","src":"19567:24:21"}]},"functionSelector":"1bd6447a","id":5817,"implemented":true,"kind":"function","modifiers":[{"id":5802,"kind":"modifierInvocation","modifierName":{"id":5801,"name":"onlyContractOwner","nameLocations":["19447:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":4542,"src":"19447:17:21"},"nodeType":"ModifierInvocation","src":"19447:17:21"}],"name":"setFunctionsConfig","nameLocation":"19334:18:21","nodeType":"FunctionDefinition","parameters":{"id":5800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"subscriptionId","nameLocation":"19369:14:21","nodeType":"VariableDeclaration","scope":5817,"src":"19362:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5794,"name":"uint64","nodeType":"ElementaryTypeName","src":"19362:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5797,"mutability":"mutable","name":"gasLimit","nameLocation":"19400:8:21","nodeType":"VariableDeclaration","scope":5817,"src":"19393:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5796,"name":"uint32","nodeType":"ElementaryTypeName","src":"19393:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5799,"mutability":"mutable","name":"donId","nameLocation":"19426:5:21","nodeType":"VariableDeclaration","scope":5817,"src":"19418:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19418:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19352:85:21"},"returnParameters":{"id":5803,"nodeType":"ParameterList","parameters":[],"src":"19465:0:21"},"scope":5929,"src":"19325:273:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5828,"nodeType":"Block","src":"19681:43:21","statements":[{"expression":{"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5824,"name":"s_functionsSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"19691:17:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5825,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"19711:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"19691:26:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5827,"nodeType":"ExpressionStatement","src":"19691:26:21"}]},"functionSelector":"36e0025f","id":5829,"implemented":true,"kind":"function","modifiers":[{"id":5822,"kind":"modifierInvocation","modifierName":{"id":5821,"name":"onlyContractOwner","nameLocations":["19663:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":4542,"src":"19663:17:21"},"nodeType":"ModifierInvocation","src":"19663:17:21"}],"name":"setFunctionsSource","nameLocation":"19613:18:21","nodeType":"FunctionDefinition","parameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"source","nameLocation":"19646:6:21","nodeType":"VariableDeclaration","scope":5829,"src":"19632:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5818,"name":"string","nodeType":"ElementaryTypeName","src":"19632:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19631:22:21"},"returnParameters":{"id":5823,"nodeType":"ParameterList","parameters":[],"src":"19681:0:21"},"scope":5929,"src":"19604:120:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5840,"nodeType":"Block","src":"19804:40:21","statements":[{"expression":{"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5836,"name":"s_proofServiceUrl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"19814:17:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5837,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"19834:3:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"19814:23:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5839,"nodeType":"ExpressionStatement","src":"19814:23:21"}]},"functionSelector":"1098241b","id":5841,"implemented":true,"kind":"function","modifiers":[{"id":5834,"kind":"modifierInvocation","modifierName":{"id":5833,"name":"onlyContractOwner","nameLocations":["19786:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":4542,"src":"19786:17:21"},"nodeType":"ModifierInvocation","src":"19786:17:21"}],"name":"setProofServiceUrl","nameLocation":"19739:18:21","nodeType":"FunctionDefinition","parameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"url","nameLocation":"19772:3:21","nodeType":"VariableDeclaration","scope":5841,"src":"19758:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5830,"name":"string","nodeType":"ElementaryTypeName","src":"19758:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19757:19:21"},"returnParameters":{"id":5835,"nodeType":"ParameterList","parameters":[],"src":"19804:0:21"},"scope":5929,"src":"19730:114:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5919,"nodeType":"Block","src":"19999:444:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"20013:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20022:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20013:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5855,"nodeType":"IfStatement","src":"20009:51:21","trueBody":{"id":5854,"nodeType":"Block","src":"20025:35:21","statements":[{"expression":{"hexValue":"30","id":5852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20046:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":5848,"id":5853,"nodeType":"Return","src":"20039:10:21"}]}},{"assignments":[5857],"declarations":[{"constant":false,"id":5857,"mutability":"mutable","name":"temp","nameLocation":"20077:4:21","nodeType":"VariableDeclaration","scope":5919,"src":"20069:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"20069:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5859,"initialValue":{"id":5858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"20084:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20069:20:21"},{"assignments":[5861],"declarations":[{"constant":false,"id":5861,"mutability":"mutable","name":"digits","nameLocation":"20107:6:21","nodeType":"VariableDeclaration","scope":5919,"src":"20099:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5860,"name":"uint256","nodeType":"ElementaryTypeName","src":"20099:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5862,"nodeType":"VariableDeclarationStatement","src":"20099:14:21"},{"body":{"id":5873,"nodeType":"Block","src":"20141:57:21","statements":[{"expression":{"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20155:8:21","subExpression":{"id":5866,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"20155:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5868,"nodeType":"ExpressionStatement","src":"20155:8:21"},{"expression":{"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5869,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"20177:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20185:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"20177:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5872,"nodeType":"ExpressionStatement","src":"20177:10:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5863,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"20130:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20138:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20130:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5874,"nodeType":"WhileStatement","src":"20123:75:21"},{"assignments":[5876],"declarations":[{"constant":false,"id":5876,"mutability":"mutable","name":"buffer","nameLocation":"20220:6:21","nodeType":"VariableDeclaration","scope":5919,"src":"20207:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5875,"name":"bytes","nodeType":"ElementaryTypeName","src":"20207:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5881,"initialValue":{"arguments":[{"id":5879,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"20239:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"20229:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5877,"name":"bytes","nodeType":"ElementaryTypeName","src":"20233:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20229:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"20207:39:21"},{"body":{"id":5912,"nodeType":"Block","src":"20275:131:21","statements":[{"expression":{"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5885,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"20289:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20299:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20289:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5888,"nodeType":"ExpressionStatement","src":"20289:11:21"},{"expression":{"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5889,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"20314:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5891,"indexExpression":{"id":5890,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"20321:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20314:14:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20344:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"20357:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20365:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"20357:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20349:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5897,"name":"uint256","nodeType":"ElementaryTypeName","src":"20349:7:21","typeDescriptions":{}}},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20349:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20344:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20338:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5894,"name":"uint8","nodeType":"ElementaryTypeName","src":"20338:5:21","typeDescriptions":{}}},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20338:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20331:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5892,"name":"bytes1","nodeType":"ElementaryTypeName","src":"20331:6:21","typeDescriptions":{}}},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20331:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"20314:56:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5907,"nodeType":"ExpressionStatement","src":"20314:56:21"},{"expression":{"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"20384:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20393:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"20384:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5911,"nodeType":"ExpressionStatement","src":"20384:11:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"20263:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20272:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20263:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5913,"nodeType":"WhileStatement","src":"20256:150:21"},{"expression":{"arguments":[{"id":5916,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"20429:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20422:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5914,"name":"string","nodeType":"ElementaryTypeName","src":"20422:6:21","typeDescriptions":{}}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20422:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5848,"id":5918,"nodeType":"Return","src":"20415:21:21"}]},"documentation":{"id":5842,"nodeType":"StructuredDocumentation","src":"19850:66:21","text":" @dev Utility function to convert uint to string"},"id":5920,"implemented":true,"kind":"function","modifiers":[],"name":"uint256ToString","nameLocation":"19930:15:21","nodeType":"FunctionDefinition","parameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"value","nameLocation":"19954:5:21","nodeType":"VariableDeclaration","scope":5920,"src":"19946:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5843,"name":"uint256","nodeType":"ElementaryTypeName","src":"19946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19945:15:21"},"returnParameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5920,"src":"19984:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5846,"name":"string","nodeType":"ElementaryTypeName","src":"19984:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19983:15:21"},"scope":5929,"src":"19921:522:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5927,"nodeType":"Block","src":"20508:40:21","statements":[{"expression":{"id":5925,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"20525:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5924,"id":5926,"nodeType":"Return","src":"20518:23:21"}]},"functionSelector":"de3d9fb7","id":5928,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscriptionId","nameLocation":"20458:17:21","nodeType":"FunctionDefinition","parameters":{"id":5921,"nodeType":"ParameterList","parameters":[],"src":"20475:2:21"},"returnParameters":{"id":5924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5928,"src":"20499:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5922,"name":"uint256","nodeType":"ElementaryTypeName","src":"20499:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20498:9:21"},"scope":5929,"src":"20449:99:21","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":5930,"src":"1007:19543:21","usedErrors":[258,262,264,764,2400,2408,2410],"usedEvents":[758,762,892,898,2569,4369,4377,4385,4393,4401,4407]}],"src":"32:20519:21"},"id":21}},"contracts":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"AutomationBase":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601357603a908160198239f35b600080fdfe600080fdfea2646970667358221220b668674665f736fbb26e6ed5cc2ff3a79b54c73292da122c34dabec4a38b0e9064736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH9 0x674665F736FBB26E6E 0xD5 0xCC 0x2F RETURN 0xA7 SWAP12 SLOAD 0xC7 ORIGIN SWAP3 0xDA SLT 0x2C CALLVALUE 0xDA 0xBE 0xC4 LOG3 DUP12 0xE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"57:634:0:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b668674665f736fbb26e6ed5cc2ff3a79b54c73292da122c34dabec4a38b0e9064736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH9 0x674665F736FBB26E6E 0xD5 0xCC 0x2F RETURN 0xA7 SWAP12 SLOAD 0xC7 ORIGIN SWAP3 0xDA SLT 0x2C CALLVALUE 0xDA 0xBE 0xC4 LOG3 DUP12 0xE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"57:634:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"AutomationCompatible":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol":{"IFunctionsClient":{"abi":[{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"}],"name":"handleOracleFulfillment","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"handleOracleFulfillment(bytes32,bytes,bytes)":"0ca76175"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"handleOracleFulfillment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"details\":\"Either response or error parameter will be set, but never both.\",\"params\":{\"err\":\"Aggregated error either from the request's source code or from the execution pipeline.\",\"requestId\":\"The requestId returned by FunctionsClient.sendRequest().\",\"response\":\"Aggregated response from the request's source code.\"}}},\"title\":\"Chainlink Functions client interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"notice\":\"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":\"IFunctionsClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"keccak256\":\"0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e0828ef423afef9f6f709bb173a7e3991fe555bf9337a4941d65da525ac4ad3\",\"dweb:/ipfs/QmXz1jHRZFTqdnNxP2tffVQ9NnUE1xgtBMRWuyUrTVY4pm\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol":{"IFunctionsRouter":{"abi":[{"inputs":[{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"},{"internalType":"uint96","name":"juelsPerGas","type":"uint96"},{"internalType":"uint96","name":"costWithoutFulfillment","type":"uint96"},{"internalType":"address","name":"transmitter","type":"address"},{"components":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"address","name":"coordinator","type":"address"},{"internalType":"uint96","name":"estimatedTotalCostJuels","type":"uint96"},{"internalType":"address","name":"client","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint72","name":"adminFee","type":"uint72"},{"internalType":"uint72","name":"donFee","type":"uint72"},{"internalType":"uint40","name":"gasOverheadBeforeCallback","type":"uint40"},{"internalType":"uint40","name":"gasOverheadAfterCallback","type":"uint40"},{"internalType":"uint32","name":"timeoutTimestamp","type":"uint32"}],"internalType":"struct FunctionsResponse.Commitment","name":"commitment","type":"tuple"}],"name":"fulfill","outputs":[{"internalType":"enum FunctionsResponse.FulfillResult","name":"","type":"uint8"},{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAdminFee","outputs":[{"internalType":"uint72","name":"adminFee","type":"uint72"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllowListId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getContractById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getProposedContractById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProposedContractSet","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"},{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"name":"isValidCallbackGasLimit","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"proposalSetIds","type":"bytes32[]"},{"internalType":"address[]","name":"proposalSetAddresses","type":"address[]"}],"name":"proposeContractsUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint16","name":"dataVersion","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"bytes32","name":"donId","type":"bytes32"}],"name":"sendRequest","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint16","name":"dataVersion","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"bytes32","name":"donId","type":"bytes32"}],"name":"sendRequestToProposed","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"allowListId","type":"bytes32"}],"name":"setAllowListId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"updateContracts","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))":"33060529","getAdminFee()":"2a905ccc","getAllowListId()":"aab396bd","getContractById(bytes32)":"a9c9a918","getProposedContractById(bytes32)":"6a2215de","getProposedContractSet()":"badc3eb6","isValidCallbackGasLimit(uint64,uint32)":"10fc49c1","pause()":"8456cb59","proposeContractsUpdate(bytes32[],address[])":"3e871e4d","sendRequest(uint64,bytes,uint16,uint32,bytes32)":"461d2762","sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)":"41db4ca3","setAllowListId(bytes32)":"ea320e0b","unpause()":"3f4ba83a","updateContracts()":"b734c0f4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"},{\"internalType\":\"uint96\",\"name\":\"juelsPerGas\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"costWithoutFulfillment\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"transmitter\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"estimatedTotalCostJuels\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint72\",\"name\":\"adminFee\",\"type\":\"uint72\"},{\"internalType\":\"uint72\",\"name\":\"donFee\",\"type\":\"uint72\"},{\"internalType\":\"uint40\",\"name\":\"gasOverheadBeforeCallback\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"gasOverheadAfterCallback\",\"type\":\"uint40\"},{\"internalType\":\"uint32\",\"name\":\"timeoutTimestamp\",\"type\":\"uint32\"}],\"internalType\":\"struct FunctionsResponse.Commitment\",\"name\":\"commitment\",\"type\":\"tuple\"}],\"name\":\"fulfill\",\"outputs\":[{\"internalType\":\"enum FunctionsResponse.FulfillResult\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminFee\",\"outputs\":[{\"internalType\":\"uint72\",\"name\":\"adminFee\",\"type\":\"uint72\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowListId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getContractById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getProposedContractById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposedContractSet\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"name\":\"isValidCallbackGasLimit\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proposalSetIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"proposalSetAddresses\",\"type\":\"address[]\"}],\"name\":\"proposeContractsUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"dataVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"donId\",\"type\":\"bytes32\"}],\"name\":\"sendRequest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"dataVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"donId\",\"type\":\"bytes32\"}],\"name\":\"sendRequestToProposed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"allowListId\",\"type\":\"bytes32\"}],\"name\":\"setAllowListId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))\":{\"details\":\"Only callable by the Coordinator contract that is saved in the commitment\",\"params\":{\"commitment\":\"- The parameters of the request that must be held consistent between request and response time\",\"costWithoutFulfillment\":\"- The cost of processing the request (in Juels of LINK ), without fulfillment\",\"err\":\"error from DON consensus\",\"juelsPerGas\":\"- current rate of juels/gas\",\"response\":\"response data from DON consensus\",\"transmitter\":\"- The Node that transmitted the OCR report\"},\"returns\":{\"_0\":\"fulfillResult -\",\"_1\":\"callbackGasCostJuels -\"}},\"getAdminFee()\":{\"returns\":{\"adminFee\":\"adminFee\"}},\"getAllowListId()\":{\"returns\":{\"_0\":\"id - bytes32 id that can be passed to the \\\"getContractById\\\" of the Router\"}},\"getContractById(bytes32)\":{\"params\":{\"id\":\"A bytes32 identifier for the route\"},\"returns\":{\"_0\":\"contract The current contract address\"}},\"getProposedContractById(bytes32)\":{\"params\":{\"id\":\"A bytes32 identifier for the route\"},\"returns\":{\"_0\":\"contract The current or proposed contract address\"}},\"getProposedContractSet()\":{\"returns\":{\"_0\":\"ids The identifiers of the contracts to update\",\"_1\":\"to The addresses of the contracts that will be updated to\"}},\"isValidCallbackGasLimit(uint64,uint32)\":{\"params\":{\"callbackGasLimit\":\"desired callback gas limit\",\"subscriptionId\":\"subscription ID\"}},\"pause()\":{\"details\":\"Puts the system into an emergency stopped state.Only callable by owner\"},\"proposeContractsUpdate(bytes32[],address[])\":{\"details\":\"Only callable by owner\"},\"sendRequest(uint64,bytes,uint16,uint32,bytes32)\":{\"params\":{\"callbackGasLimit\":\"- Gas limit for the fulfillment callback\",\"data\":\"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\",\"dataVersion\":\"- Gas limit for the fulfillment callback\",\"donId\":\"- An identifier used to determine which route to send the request along\",\"subscriptionId\":\"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription\"},\"returns\":{\"_0\":\"requestId - A unique request identifier\"}},\"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)\":{\"params\":{\"callbackGasLimit\":\"- Gas limit for the fulfillment callback\",\"data\":\"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\",\"dataVersion\":\"- Gas limit for the fulfillment callback\",\"donId\":\"- An identifier used to determine which route to send the request along\",\"subscriptionId\":\"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription\"},\"returns\":{\"_0\":\"requestId - A unique request identifier\"}},\"unpause()\":{\"details\":\"Takes the system out of an emergency stopped state.Only callable by owner\"},\"updateContracts()\":{\"details\":\"Only callable by owner\"}},\"title\":\"Chainlink Functions Router interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))\":{\"notice\":\"Fulfill the request by: - calling back the data that the Oracle returned to the client contract - pay the DON for processing the request\"},\"getAdminFee()\":{\"notice\":\"Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\"},\"getAllowListId()\":{\"notice\":\"The identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions\"},\"getContractById(bytes32)\":{\"notice\":\"Get the current contract given an ID\"},\"getProposedContractById(bytes32)\":{\"notice\":\"Get the proposed next contract given an ID\"},\"getProposedContractSet()\":{\"notice\":\"Return the latest proprosal set\"},\"isValidCallbackGasLimit(uint64,uint32)\":{\"notice\":\"Validate requested gas limit is below the subscription max.\"},\"proposeContractsUpdate(bytes32[],address[])\":{\"notice\":\"Proposes one or more updates to the contract routes\"},\"sendRequest(uint64,bytes,uint16,uint32,bytes32)\":{\"notice\":\"Sends a request using the provided subscriptionId\"},\"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)\":{\"notice\":\"Sends a request to the proposed contracts\"},\"setAllowListId(bytes32)\":{\"notice\":\"Set the identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions\"},\"updateContracts()\":{\"notice\":\"Updates the current contract routes to the proposed contracts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":\"IFunctionsRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c3228edc2cff7c55301d3764e54cd7ada6af81ef9aadf8bc116a2c982523d6\",\"dweb:/ipfs/QmXjJQgCu2gvX6QQJ9GC1gEoy3vrmpf1PiRPLqWqKddwRe\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeeaeadc797b7656fd30201ab8c8ed24fe8fb3f83a480142bb55c7c7babb2b4b\",\"dweb:/ipfs/Qmdb55a1iWJetog7qUpZ6FHKGSA8g3Vu68LGsXfqfec9k5\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol":{"FunctionsRequest":{"abi":[{"inputs":[],"name":"EmptyArgs","type":"error"},{"inputs":[],"name":"EmptySecrets","type":"error"},{"inputs":[],"name":"EmptySource","type":"error"},{"inputs":[],"name":"NoInlineSecrets","type":"error"},{"inputs":[],"name":"REQUEST_DATA_VERSION","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346018576075908161001e823930815050f35b600080fdfe6080806040526004361015601257600080fd5b60003560e01c635d641dfc14602657600080fd5b6000366003190112603a5780600160209252f35b600080fdfea2646970667358221220c2d57645db98ceca88888c6a3a0200a2539e07067da6466f93a8f2804797939664736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x18 JUMPI PUSH1 0x75 SWAP1 DUP2 PUSH2 0x1E DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5D641DFC EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x3A JUMPI DUP1 PUSH1 0x1 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xD5 PUSH23 0x45DB98CECA88888C6A3A0200A2539E07067DA6466F93A8 CALLCODE DUP1 SELFBALANCE SWAP8 SWAP4 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"212:6086:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080806040526004361015601257600080fd5b60003560e01c635d641dfc14602657600080fd5b6000366003190112603a5780600160209252f35b600080fdfea2646970667358221220c2d57645db98ceca88888c6a3a0200a2539e07067da6466f93a8f2804797939664736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5D641DFC EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x3A JUMPI DUP1 PUSH1 0x1 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xD5 PUSH23 0x45DB98CECA88888C6A3A0200A2539E07067DA6466F93A8 CALLCODE DUP1 SELFBALANCE SWAP8 SWAP4 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"212:6086:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;212:6086:5;;;;;322:1;212:6086;;;;;;;"},"methodIdentifiers":{"REQUEST_DATA_VERSION()":"5d641dfc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptyArgs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySecrets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySource\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoInlineSecrets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REQUEST_DATA_VERSION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for encoding the input data of a Functions request into CBOR\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":\"FunctionsRequest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"keccak256\":\"0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7c96e993b253723ed5461008c34b847d7b067221736068d45f029db4d92b0d\",\"dweb:/ipfs/QmTMMXAWXeDgSChnToydej6e3p331KiJZT3S27ZiPkht9t\"]},\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd\",\"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol":{"FunctionsResponse":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c54db5ed8362ba3a892ed73e7db9510dc88b744b4352825112d5312c64881e5964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0x4D 0xB5 0xED DUP4 PUSH3 0xBA3A89 0x2E 0xD7 RETURNDATACOPY PUSH30 0xB9510DC88B744B4352825112D5312C64881E5964736F6C63430008180033 ","sourceMap":"139:3258:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c54db5ed8362ba3a892ed73e7db9510dc88b744b4352825112d5312c64881e5964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0x4D 0xB5 0xED DUP4 PUSH3 0xBA3A89 0x2E 0xD7 RETURNDATACOPY PUSH30 0xB9510DC88B744B4352825112D5312C64881E5964736F6C63430008180033 ","sourceMap":"139:3258:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library of types that are used for fulfillment of a Functions request\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":\"FunctionsResponse\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeeaeadc797b7656fd30201ab8c8ed24fe8fb3f83a480142bb55c7c7babb2b4b\",\"dweb:/ipfs/Qmdb55a1iWJetog7qUpZ6FHKGSA8g3Vu68LGsXfqfec9k5\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/functions/v1_3_0/FunctionsClient.sol":{"FunctionsClient":{"abi":[{"inputs":[],"name":"OnlyRouterCanFulfill","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestSent","type":"event"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"}],"name":"handleOracleFulfillment","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"handleOracleFulfillment(bytes32,bytes,bytes)":"0ca76175"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlyRouterCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"handleOracleFulfillment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"details\":\"Either response or error parameter will be set, but never both.\",\"params\":{\"err\":\"Aggregated error either from the request's source code or from the execution pipeline.\",\"requestId\":\"The requestId returned by FunctionsClient.sendRequest().\",\"response\":\"Aggregated response from the request's source code.\"}}},\"title\":\"The Chainlink Functions client contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"notice\":\"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round.\"}},\"notice\":\"Contract developers can inherit this contract in order to make Chainlink Functions requests\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_3_0/FunctionsClient.sol\":\"FunctionsClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"keccak256\":\"0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e0828ef423afef9f6f709bb173a7e3991fe555bf9337a4941d65da525ac4ad3\",\"dweb:/ipfs/QmXz1jHRZFTqdnNxP2tffVQ9NnUE1xgtBMRWuyUrTVY4pm\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c3228edc2cff7c55301d3764e54cd7ada6af81ef9aadf8bc116a2c982523d6\",\"dweb:/ipfs/QmXjJQgCu2gvX6QQJ9GC1gEoy3vrmpf1PiRPLqWqKddwRe\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"keccak256\":\"0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7c96e993b253723ed5461008c34b847d7b067221736068d45f029db4d92b0d\",\"dweb:/ipfs/QmTMMXAWXeDgSChnToydej6e3p331KiJZT3S27ZiPkht9t\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeeaeadc797b7656fd30201ab8c8ed24fe8fb3f83a480142bb55c7c7babb2b4b\",\"dweb:/ipfs/Qmdb55a1iWJetog7qUpZ6FHKGSA8g3Vu68LGsXfqfec9k5\"]},\"@chainlink/contracts/src/v0.8/functions/v1_3_0/FunctionsClient.sol\":{\"keccak256\":\"0xdc40f1e9dea8a572d43d310afa68e978c35218d16097b9cfd9d1b6137df3cd0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec1f247a0c4c401d69fa5ad383b6d2ba8dcd31011ce7edd4cb69fedb89ac3e5\",\"dweb:/ipfs/QmV55NBD35u96AYV4F4U9JYmf5uGm4mVoUsqs3mcw3tu4S\"]},\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd\",\"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ConfirmedOwner":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100bf57601f61031e38819003918201601f19168301916001600160401b038311848410176100c4578084926020946040528339810103126100bf57516001600160a01b038116908190036100bf57801561007a57600080546001600160a01b03191691909117905560405161024390816100db8239f35b60405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c90816379ba509714610164575080638da5cb5b1461013d5763f2fde38b1461004257600080fd5b3461013a57602036600319011261013a576004356001600160a01b0381811691829003610136578254168033036100f8573382146100b357600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b8280fd5b80fd5b503461013a578060031936011261013a57546040516001600160a01b039091168152602090f35b905034610209578160031936011261020957600154906001600160a01b039081831633036101ce575082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b62461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fd5b5080fdfea2646970667358221220c85bcf73391d1a6280c36e924306ecfcc6efabb81affad7dfec684201985d4fb64736f6c63430008180033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xBF JUMPI PUSH1 0x1F PUSH2 0x31E CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xC4 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xBF JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xBF JUMPI DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x243 SWAP1 DUP2 PUSH2 0xDB DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x164 JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x136 JUMPI DUP3 SLOAD AND DUP1 CALLER SUB PUSH2 0xF8 JUMPI CALLER DUP3 EQ PUSH2 0xB3 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x209 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0x1CE JUMPI POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP7 SSTORE SWAP4 AND PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 JUMPDEST 0xCF PUSH20 0x391D1A6280C36E924306ECFCC6EFABB81AFFAD7D INVALID 0xC6 DUP5 KECCAK256 NOT DUP6 0xD4 0xFB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"240:141:8:-:0;;;;;;;;;;;;;-1:-1:-1;;240:141:8;;;;-1:-1:-1;;;;;240:141:8;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;240:141:8;;;;;;;;598:22:9;;240:141:8;;-1:-1:-1;240:141:8;;-1:-1:-1;;;;;;240:141:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;240:141:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;240:141:8;;;;;;-1:-1:-1;240:141:8;;;;;-1:-1:-1;240:141:8"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816379ba509714610164575080638da5cb5b1461013d5763f2fde38b1461004257600080fd5b3461013a57602036600319011261013a576004356001600160a01b0381811691829003610136578254168033036100f8573382146100b357600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b8280fd5b80fd5b503461013a578060031936011261013a57546040516001600160a01b039091168152602090f35b905034610209578160031936011261020957600154906001600160a01b039081831633036101ce575082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b62461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fd5b5080fdfea2646970667358221220c85bcf73391d1a6280c36e924306ecfcc6efabb81affad7dfec684201985d4fb64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x164 JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x136 JUMPI DUP3 SLOAD AND DUP1 CALLER SUB PUSH2 0xF8 JUMPI CALLER DUP3 EQ PUSH2 0xB3 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x209 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0x1CE JUMPI POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP7 SSTORE SWAP4 AND PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 JUMPDEST 0xCF PUSH20 0x391D1A6280C36E924306ECFCC6EFABB81AFFAD7D INVALID 0xC6 DUP5 KECCAK256 NOT DUP6 0xD4 0xFB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"240:141:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;240:141:8;;;;;;-1:-1:-1;;;;;240:141:8;;;;;;;;;;;;1918:10:9;;:21;240:141:8;;1918:10:9;1649:16;;240:141:8;;1700:19:9;240:141:8;;-1:-1:-1;;;;;;240:141:8;;;;;1731:39:9;;;;240:141:8;;;;;-1:-1:-1;;;240:141:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;240:141:8;;;;;;;;;;;;-1:-1:-1;;;240:141:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;240:141:8;;;;;;;;;;;;;;;;;;;;;;1150:14:9;240:141:8;;-1:-1:-1;;;;;240:141:8;;;;1136:10:9;:28;240:141:8;;-1:-1:-1;240:141:8;;-1:-1:-1;;;;;;240:141:8;;;1136:10:9;240:141:8;;;;;;;-1:-1:-1;240:141:8;;1295:42:9;240:141:8;;1295:42:9;240:141:8;;;-1:-1:-1;;;240:141:8;;;;;;;;;;;;-1:-1:-1;;;240:141:8;;;;;;;;;;"},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ConfirmedOwnerWithProposal":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"address","name":"pendingOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":373,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60803461015a57601f6103cd38819003918201601f19168301916001600160401b0383118484101761015f57808492604094855283398101031261015a57610052602061004b83610175565b9201610175565b906001600160a01b0390811690811561011557600080546001600160a01b0319908116841790915592169182610092575b604051610243908161018a8239f35b3383146100d057829060015416176001557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278600080a3388080610083565b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361015a5756fe608080604052600436101561001357600080fd5b600090813560e01c90816379ba509714610164575080638da5cb5b1461013d5763f2fde38b1461004257600080fd5b3461013a57602036600319011261013a576004356001600160a01b0381811691829003610136578254168033036100f8573382146100b357600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b8280fd5b80fd5b503461013a578060031936011261013a57546040516001600160a01b039091168152602090f35b905034610209578160031936011261020957600154906001600160a01b039081831633036101ce575082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b62461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fd5b5080fdfea26469706673582212202ee4ac480b035f597fbcf47e310b312d650e9ccf08fa118d4c95f16bf57947bb64736f6c63430008180033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x1F PUSH2 0x3CD CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x15F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x15A JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x175 JUMP JUMPDEST SWAP3 ADD PUSH2 0x175 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP3 AND SWAP2 DUP3 PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP1 DUP2 PUSH2 0x18A DUP3 CODECOPY RETURN JUMPDEST CALLER DUP4 EQ PUSH2 0xD0 JUMPI DUP3 SWAP1 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x0 DUP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15A JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x164 JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x136 JUMPI DUP3 SLOAD AND DUP1 CALLER SUB PUSH2 0xF8 JUMPI CALLER DUP3 EQ PUSH2 0xB3 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x209 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0x1CE JUMPI POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP7 SSTORE SWAP4 AND PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xE4 0xAC BASEFEE SIGNEXTEND SUB PUSH0 MSIZE PUSH32 0xBCF47E310B312D650E9CCF08FA118D4C95F16BF57947BB64736F6C6343000818 STOP CALLER ","sourceMap":"216:1893:9:-:0;;;;;;;;;;;;;-1:-1:-1;;216:1893:9;;;;-1:-1:-1;;;;;216:1893:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;216:1893:9;;;;598:22;;216:1893;;-1:-1:-1;216:1893:9;;-1:-1:-1;;;;;;216:1893:9;;;;;;;;;;;;680:79;;-1:-1:-1;216:1893:9;;;;;;;;;680:79;1655:10;1649:16;;216:1893;;;;1700:19;216:1893;;;1700:19;216:1893;1731:39;-1:-1:-1;1731:39:9;;680:79;;;;;216:1893;;;-1:-1:-1;;;216:1893:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;216:1893:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;216:1893:9;;;;;;-1:-1:-1;216:1893:9;;;;;-1:-1:-1;216:1893:9;;;;-1:-1:-1;;;;;216:1893:9;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816379ba509714610164575080638da5cb5b1461013d5763f2fde38b1461004257600080fd5b3461013a57602036600319011261013a576004356001600160a01b0381811691829003610136578254168033036100f8573382146100b357600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b8280fd5b80fd5b503461013a578060031936011261013a57546040516001600160a01b039091168152602090f35b905034610209578160031936011261020957600154906001600160a01b039081831633036101ce575082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b62461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fd5b5080fdfea26469706673582212202ee4ac480b035f597fbcf47e310b312d650e9ccf08fa118d4c95f16bf57947bb64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x164 JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x136 JUMPI DUP3 SLOAD AND DUP1 CALLER SUB PUSH2 0xF8 JUMPI CALLER DUP3 EQ PUSH2 0xB3 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x209 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x209 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0x1CE JUMPI POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP7 SSTORE SWAP4 AND PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xE4 0xAC BASEFEE SIGNEXTEND SUB PUSH0 MSIZE PUSH32 0xBCF47E310B312D650E9CCF08FA118D4C95F16BF57947BB64736F6C6343000818 STOP CALLER ","sourceMap":"216:1893:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;216:1893:9;;;;;;-1:-1:-1;;;;;216:1893:9;;;;;;;;;;;;1918:10;;:21;216:1893;;1918:10;1649:16;;216:1893;;1700:19;216:1893;;-1:-1:-1;;;;;;216:1893:9;;;;;1731:39;;;;216:1893;;;;;-1:-1:-1;;;216:1893:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;216:1893:9;;;;;;;;;;;;-1:-1:-1;;;216:1893:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;216:1893:9;;;;;;;;;;;;;;;;;;;;;;1150:14;216:1893;;-1:-1:-1;;;;;216:1893:9;;;;1136:10;:28;216:1893;;-1:-1:-1;216:1893:9;;-1:-1:-1;;;;;;216:1893:9;;;1136:10;216:1893;;;;;;;-1:-1:-1;216:1893:9;;1295:42;216:1893;;1295:42;216:1893;;;-1:-1:-1;;;216:1893:9;;;;;;;;;;;;-1:-1:-1;;;216:1893:9;;;;;;;;;;"},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"IOwnable":{"abi":[{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol":{"Buffer":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a1b358f636be5b52ddabfa417e981589086e215fda073660f98e3868aa092b9d64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xB3 PC 0xF6 CALLDATASIZE 0xBE JUMPDEST MSTORE 0xDD 0xAB STATICCALL COINBASE PUSH31 0x981589086E215FDA073660F98E3868AA092B9D64736F6C6343000818003300 ","sourceMap":"445:8435:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a1b358f636be5b52ddabfa417e981589086e215fda073660f98e3868aa092b9d64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xB3 PC 0xF6 CALLDATASIZE 0xBE JUMPDEST MSTORE 0xDD 0xAB STATICCALL COINBASE PUSH31 0x981589086E215FDA073660F98E3868AA092B9D64736F6C6343000818003300 ","sourceMap":"445:8435:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for appending to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":\"Buffer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol":{"CBOR":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220da1e66f05aa053e4b6b0f8d522af332999b43ed977b0b3fb32e05a49c14015e164736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0x1E PUSH7 0xF05AA053E4B6B0 0xF8 0xD5 0x22 0xAF CALLER 0x29 SWAP10 0xB4 RETURNDATACOPY 0xD9 PUSH24 0xB0B3FB32E05A49C14015E164736F6C634300081800330000 ","sourceMap":"666:6764:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220da1e66f05aa053e4b6b0f8d522af332999b43ed977b0b3fb32e05a49c14015e164736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0x1E PUSH7 0xF05AA053E4B6B0 0xF8 0xD5 0x22 0xAF CALLER 0x29 SWAP10 0xB4 RETURNDATACOPY 0xD9 PUSH24 0xB0B3FB32E05A49C14015E164736F6C634300081800330000 ","sourceMap":"666:6764:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for populating CBOR encoded payload in Solidity. https://datatracker.ietf.org/doc/html/rfc7049 The library offers various write* and start* methods to encode values of different types. The resulted buffer can be obtained with data() method. Encoding of primitive types is staightforward, whereas encoding of sequences can result in an invalid CBOR if start/write/end flow is violated. For the purpose of gas saving, the library does not verify start/write/end flow internally, except for nested start/end pairs.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":\"CBOR\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd\",\"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"VRFConsumerBaseV2Plus":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"coordinator","type":"address"}],"name":"OnlyOwnerOrCoordinator","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_vrfCoordinator","outputs":[{"internalType":"contract IVRFCoordinatorV2Plus","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","s_vrfCoordinator()":"9eccacf6","setCoordinator(address)":"8ea98117","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":\"VRFConsumerBaseV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"IVRFCoordinatorV2Plus":{"abi":[{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"uint16","name":"requestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}],"internalType":"struct VRFV2PlusClient.RandomWordsRequest","name":"req","type":"tuple"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","pendingRequestExists(uint256)":"41af6c87","removeConsumer(uint256,address)":"cb631797","requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":"9b1c385e","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct VRFV2PlusClient.RandomWordsRequest\",\"name\":\"req\",\"type\":\"tuple\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"params\":{\"req\":\"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":\"IVRFCoordinatorV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"IVRFMigratableConsumerV2Plus":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"inputs":[{"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"setCoordinator(address)":"8ea98117"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface is designed to be used in VRFConsumerBaseV2Plus.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"}},\"notice\":\"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":\"IVRFMigratableConsumerV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"IVRFSubscriptionV2Plus":{"abi":[{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","pendingRequestExists(uint256)":"41af6c87","removeConsumer(uint256,address)":"cb631797","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"notice\":\"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":\"IVRFSubscriptionV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"VRFV2PlusClient":{"abi":[{"inputs":[],"name":"EXTRA_ARGS_V1_TAG","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601857607b908161001e823930815050f35b600080fdfe6080806040526004361015601257600080fd5b60003560e01c63f7514ab414602657600080fd5b600036600319011260405763125fa26760e31b8152602090f35b600080fdfea26469706673582212201b508d30de1c8feb78b6071d0130072b281c8bd5f747c522c7d89701a219fb8164736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x18 JUMPI PUSH1 0x7B SWAP1 DUP2 PUSH2 0x1E DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xF7514AB4 EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x40 JUMPI PUSH4 0x125FA267 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL POP DUP14 ADDRESS 0xDE SHR DUP16 0xEB PUSH25 0xB6071D0130072B281C8BD5F747C522C7D89701A219FB816473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"82:558:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080806040526004361015601257600080fd5b60003560e01c63f7514ab414602657600080fd5b600036600319011260405763125fa26760e31b8152602090f35b600080fdfea26469706673582212201b508d30de1c8feb78b6071d0130072b281c8bd5f747c522c7d89701a219fb8164736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xF7514AB4 EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x40 JUMPI PUSH4 0x125FA267 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL POP DUP14 ADDRESS 0xDE SHR DUP16 0xEB PUSH25 0xB6071D0130072B281C8BD5F747C522C7D89701A219FB816473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"82:558:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;82:558:18;;;;-1:-1:-1;;;82:558:18;;;;;;;;"},"methodIdentifiers":{"EXTRA_ARGS_V1_TAG()":"f7514ab4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":\"VRFV2PlusClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]}},\"version\":1}"}},"contracts/Groth16Verifier.sol":{"Groth16Verifier":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[],"name":"VerifyingKeyChanged","type":"event"},{"inputs":[{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"},{"internalType":"uint256[]","name":"input","type":"uint256[]"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Pairing.G1Point","name":"a","type":"tuple"},{"components":[{"internalType":"uint256[2]","name":"x","type":"uint256[2]"},{"internalType":"uint256[2]","name":"y","type":"uint256[2]"}],"internalType":"struct Pairing.G2Point","name":"b","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Pairing.G1Point","name":"c","type":"tuple"}],"internalType":"struct Groth16Verifier.Proof","name":"proof","type":"tuple"},{"internalType":"uint256[]","name":"input","type":"uint256[]"}],"name":"verifyTx","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":1335,"id":null,"parameterSlots":0,"returnSlots":1},"array_push_from_struct_G1Point_to_array_struct_G1Point_storage_dyn_ptr":{"entryPoint":1389,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x532 JUMPI PUSH3 0x14 PUSH3 0x537 JUMP JUMPDEST PUSH32 0x2D4D9AA7E302D9DF41749D5507949D05DBEA33FBB16C643B22F599A2BE6DF2E2 DUP1 DUP3 MSTORE PUSH32 0x14BEDD503C37CEB061D8EC60209FE345CE89830A19230301F076CAFF004D1926 SWAP2 DUP3 PUSH1 0x20 DUP1 SWAP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SSTORE PUSH1 0x1 SWAP3 DUP4 SSTORE PUSH3 0x75 PUSH3 0x537 JUMP JUMPDEST PUSH32 0x967032FCBF776D1AFC985F88877F182D38480A653F2DECAA9794CBC3BF3060C DUP2 MSTORE PUSH32 0xE187847AD4C798374D0D6732BF501847DD68BC0E071241E0213BC7FC13DB7AB DUP3 DUP3 ADD MSTORE PUSH3 0xC7 PUSH3 0x537 JUMP JUMPDEST SWAP1 PUSH32 0x304CFBD1E08A704A99F5E847D93F8C3CAAFDDEC46B7A0D379DA69A4D112346A7 DUP3 MSTORE PUSH32 0x1739C1B1A457A8C7313123D24D2F9192F896B7C63EEA05A9D57F06547AD0CEC8 DUP4 DUP4 ADD MSTORE DUP2 DUP4 PUSH3 0x11C PUSH3 0x537 JUMP JUMPDEST DUP4 DUP2 MSTORE ADD MSTORE SWAP2 DUP5 DUP5 JUMPDEST PUSH1 0x2 SWAP5 DUP6 DUP3 LT ISZERO PUSH3 0x143 JUMPI DUP2 DUP5 DUP3 MLOAD SWAP3 ADD SWAP7 ADD SSTORE ADD DUP6 SWAP1 PUSH3 0x125 JUMP JUMPDEST DUP3 DUP5 DUP9 DUP8 DUP4 DUP3 JUMPDEST PUSH1 0x2 DUP2 LT PUSH3 0x51E JUMPI POP POP POP PUSH3 0x160 PUSH3 0x537 JUMP JUMPDEST PUSH32 0x198E9393920D483A7260BFB731FB5D25F1AA493335A9E71297E485B7AEF312C2 DUP2 MSTORE PUSH32 0x1800DEEF121F1E76426A00665E5C4479674322D4F75EDADD46DEBD5CD992F6ED DUP4 DUP3 ADD MSTORE PUSH3 0x1B2 PUSH3 0x537 JUMP JUMPDEST SWAP1 PUSH32 0x90689D0585FF075EC9E99AD690C3395BC4B313370B38EF355ACDADCD122975B DUP3 MSTORE PUSH32 0x12C85EA5DB8C6DEB4AAB71808DCB408FE3D1E7690C43D37B4CE6CC0166FA7DAA DUP5 DUP4 ADD MSTORE DUP2 DUP5 PUSH3 0x207 PUSH3 0x537 JUMP JUMPDEST DUP4 DUP2 MSTORE ADD MSTORE DUP5 DUP4 JUMPDEST PUSH1 0x2 DUP2 LT PUSH3 0x50A JUMPI POP POP POP DUP4 DUP3 JUMPDEST PUSH1 0x2 DUP2 LT PUSH3 0x4F6 JUMPI POP POP POP PUSH3 0x234 PUSH3 0x537 JUMP JUMPDEST PUSH32 0x260E01B251F6F1C7E7FF4E580791DEE8EA51D87A358E038B4EFE30FAC09383C1 DUP2 MSTORE PUSH32 0x118C4D5B837BCC2BC89B5B398B5974E9F5944073B32078B7E231FEC938883B0 DUP4 DUP3 ADD MSTORE PUSH3 0x286 PUSH3 0x537 JUMP JUMPDEST SWAP1 PUSH32 0x4FC6369F7110FE3D25156C1BB9A72859CF2A04641F99BA4EE413C80DA6A5FE4 DUP3 MSTORE PUSH32 0x22FEBDA3C0C0632A56475B4214E5615E11E6DD3F96E6CEA2854A87D4DACC5E55 DUP5 DUP4 ADD MSTORE DUP2 DUP5 PUSH3 0x2DB PUSH3 0x537 JUMP JUMPDEST DUP4 DUP2 MSTORE ADD MSTORE DUP5 DUP4 JUMPDEST PUSH1 0x2 DUP2 LT PUSH3 0x4E2 JUMPI POP POP POP SWAP1 JUMPDEST PUSH1 0x2 DUP2 LT PUSH3 0x4CF JUMPI PUSH3 0x4BF DUP4 PUSH3 0x35B PUSH3 0x30D PUSH3 0x537 JUMP JUMPDEST PUSH32 0x1F39F65DC48C11E29A9B88F2B85B35BF4ED1E3B95B4A5F1A8D2E3F4A5B6C7D8E DUP2 MSTORE PUSH32 0x2A4B5C6D7E8F9A0B1C2D3E4F5A6B7C8D9E0F1A2B3C4D5E6F7A8B9C0D1E2F3A4B DUP4 DUP3 ADD MSTORE PUSH3 0x56D JUMP JUMPDEST PUSH3 0x3B5 PUSH3 0x369 PUSH3 0x537 JUMP JUMPDEST PUSH31 0x5C7D8E9F0A1B2C3D4E5F6A7B8C9D0E1F2A3B4C5D6E7F8A9B0C1D2E3F4A5B6C DUP2 MSTORE PUSH31 0x7D8E9F0A1B2C3D4E5F6A7B8C9D0E1F2A3B4C5D6E7F8A9B0C1D2E3F4A5B6C7D DUP4 DUP3 ADD MSTORE PUSH3 0x56D JUMP JUMPDEST PUSH3 0x40F PUSH3 0x3C3 PUSH3 0x537 JUMP JUMPDEST PUSH31 0x9F0A1B2C3D4E5F6A7B8C9D0E1F2A3B4C5D6E7F8A9B0C1D2E3F4A5B6C7D8E9F DUP2 MSTORE PUSH31 0x1A2B3C4D5E6F7A8B9C0D1E2F3A4B5C6D7E8F9A0B1C2D3E4F5A6B7C8D9E0F1A DUP4 DUP3 ADD MSTORE PUSH3 0x56D JUMP JUMPDEST PUSH3 0x469 PUSH3 0x41D PUSH3 0x537 JUMP JUMPDEST PUSH31 0x3B4C5D6E7F8A9B0C1D2E3F4A5B6C7D8E9F0A1B2C3D4E5F6A7B8C9D0E1F2A3B DUP2 MSTORE PUSH31 0x5D6E7F8A9B0C1D2E3F4A5B6C7D8E9F0A1B2C3D4E5F6A7B8C9D0E1F2A3B4C5D DUP4 DUP3 ADD MSTORE PUSH3 0x56D JUMP JUMPDEST PUSH31 0x9A0B1C2D3E4F5A6B7C8D9E0F1A2B3C4D5E6F7A8B9C0D1E2F3A4B5C6D7E8F9A PUSH3 0x493 PUSH3 0x537 JUMP JUMPDEST SWAP2 PUSH31 0x7F8A9B0C1D2E3F4A5B6C7D8E9F0A1B2C3D4E5F6A7B8C9D0E1F2A3B4C5D6E7F DUP4 MSTORE DUP3 ADD MSTORE PUSH3 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDCF SWAP1 DUP2 PUSH3 0x5C7 DUP3 CODECOPY RETURN JUMPDEST DUP2 MLOAD PUSH1 0xC DUP3 ADD SSTORE SWAP1 DUP3 ADD SWAP1 DUP4 ADD PUSH3 0x2F1 JUMP JUMPDEST DUP6 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH1 0xA ADD SSTORE ADD DUP6 SWAP1 PUSH3 0x2E3 JUMP JUMPDEST DUP5 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH1 0x8 ADD SSTORE ADD DUP5 SWAP1 PUSH3 0x21E JUMP JUMPDEST DUP6 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH1 0x6 ADD SSTORE ADD DUP6 SWAP1 PUSH3 0x20F JUMP JUMPDEST DUP5 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 PUSH1 0x4 ADD SSTORE ADD DUP5 SWAP1 PUSH3 0x14A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x557 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x557 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0xE SSTORE DUP2 LT ISZERO PUSH3 0x5B0 JUMPI PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xE PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP1 DUP4 SHL ADD SWAP3 DUP1 MLOAD DUP5 SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0xC32E370E EQ PUSH2 0x3E JUMPI POP POP PUSH4 0xC9417647 EQ PUSH2 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BB JUMP JUMPDEST CALLVALUE PUSH2 0xD9 JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD9 JUMPI PUSH2 0x59 CALLDATASIZE PUSH2 0x1A1 JUMP JUMPDEST SWAP2 CALLDATASIZE PUSH1 0x63 SLT ISZERO PUSH2 0xF9 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x70 DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0xC4 DUP3 CALLDATASIZE DUP3 GT PUSH2 0xF5 JUMPI PUSH1 0x44 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xDC JUMPI POP POP POP POP PUSH2 0x92 CALLDATASIZE PUSH2 0x1E8 JUMP JUMPDEST SWAP2 PUSH2 0x104 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xD9 JUMPI PUSH2 0xD5 PUSH2 0xC3 DUP7 DUP7 DUP7 PUSH2 0xBD CALLDATASIZE PUSH1 0x4 DUP10 ADD PUSH2 0x30B JUMP JUMPDEST SWAP3 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 SWAP2 PUSH2 0xEA CALLDATASIZE DUP6 PUSH2 0x2AE JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x7E JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17F DUP3 PUSH2 0x113 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 PUSH1 0x23 SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B7 DUP3 PUSH2 0x113 JUMP JUMPDEST DUP2 PUSH1 0x44 SWAP2 PUSH1 0x44 GT PUSH2 0x1E3 JUMPI PUSH1 0x4 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1D3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0xE3 SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1FE DUP3 PUSH2 0x113 JUMP JUMPDEST DUP2 PUSH2 0x104 SWAP2 DUP3 GT PUSH2 0x1E3 JUMPI PUSH1 0xC4 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x21A JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x20D JUMP JUMPDEST DUP1 PUSH1 0x63 SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x240 DUP3 PUSH2 0x113 JUMP JUMPDEST DUP2 PUSH1 0x84 SWAP2 PUSH1 0x84 GT PUSH2 0x1E3 JUMPI PUSH1 0x44 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x25C JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x24F JUMP JUMPDEST DUP1 PUSH1 0xA3 SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x282 DUP3 PUSH2 0x113 JUMP JUMPDEST DUP2 PUSH1 0xC4 SWAP2 PUSH1 0xC4 GT PUSH2 0x1E3 JUMPI PUSH1 0x84 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x29E JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x291 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2C7 DUP4 PUSH2 0x113 JUMP JUMPDEST DUP3 SWAP1 PUSH1 0x40 DUP2 ADD SWAP3 DUP4 GT PUSH2 0x1E3 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2E3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2D6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x12F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x325 DUP2 PUSH2 0x2F3 JUMP JUMPDEST SWAP4 PUSH2 0x333 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x150 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1E3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x35C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x384 DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0xC3 NOT ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3AC DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD DUP3 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x1E3 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x120 DUP2 SLT PUSH2 0x1E3 JUMPI PUSH2 0x100 SGT PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD PUSH2 0x3E2 DUP2 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x3EB CALLDATASIZE PUSH2 0x36B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x80 CALLDATASIZE PUSH1 0x43 NOT ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD PUSH2 0x405 DUP2 PUSH2 0x113 JUMP JUMPDEST PUSH2 0x40E CALLDATASIZE PUSH2 0x22A JUMP JUMPDEST DUP2 MSTORE PUSH2 0x419 CALLDATASIZE PUSH2 0x26C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x42C CALLDATASIZE PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E3 JUMPI PUSH2 0xD5 SWAP2 PUSH2 0x459 PUSH2 0xC3 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x30B JUMP JUMPDEST SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x46C DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE PUSH1 0x20 CALLDATASIZE DUP4 CALLDATACOPY JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 MLOAD PUSH2 0x4AB DUP2 PUSH2 0x134 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x4B5 PUSH2 0x45F JUMP JUMPDEST DUP3 MSTORE DUP1 MLOAD PUSH2 0x4C2 DUP2 PUSH2 0x113 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x4CD DUP2 PUSH2 0x113 JUMP JUMPDEST DUP3 CALLDATASIZE DUP3 CALLDATACOPY DUP2 MSTORE DUP2 MLOAD PUSH2 0x4DE DUP2 PUSH2 0x113 JUMP JUMPDEST DUP3 CALLDATASIZE DUP3 CALLDATACOPY PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4F4 PUSH2 0x45F JUMP JUMPDEST SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x320 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE PUSH1 0x18 DUP3 MSTORE PUSH2 0x300 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x547 DUP3 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x554 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x150 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x565 PUSH1 0x1F NOT SWAP2 PUSH2 0x2F3 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST SWAP4 SWAP2 SWAP1 SWAP3 SWAP4 PUSH2 0x595 PUSH2 0x49D JUMP JUMPDEST SWAP4 DUP2 MLOAD PUSH1 0x20 DUP1 SWAP4 ADD MLOAD PUSH2 0x5A6 PUSH2 0x172 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP4 DUP3 ADD MSTORE DUP6 MSTORE PUSH2 0x5B7 PUSH2 0x172 JUMP JUMPDEST SWAP1 DUP1 MLOAD MLOAD DUP3 MSTORE PUSH2 0x5C8 DUP2 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD DUP4 DUP4 ADD MSTORE PUSH2 0x5E7 DUP4 PUSH2 0x5D9 PUSH2 0x172 JUMP JUMPDEST SWAP3 ADD DUP1 MLOAD MLOAD DUP4 MSTORE MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD DUP4 DUP3 ADD MSTORE PUSH2 0x5F4 PUSH2 0x172 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP3 DUP3 ADD MSTORE DUP2 DUP6 ADD MSTORE DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 PUSH2 0x60E PUSH2 0x172 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x623 DUP4 MLOAD PUSH2 0x53D JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI DUP1 PUSH2 0x63D PUSH1 0x1 SWAP3 DUP8 PUSH2 0x56F JUMP JUMPDEST MLOAD PUSH2 0x648 DUP3 DUP7 PUSH2 0x56F JUMP JUMPDEST MSTORE ADD PUSH2 0x627 JUMP JUMPDEST POP SWAP3 POP PUSH2 0x65B SWAP2 PUSH2 0x91B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x682 JUMPI JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x682 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x682 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x682 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x682 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x6C6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E70757420746F6F206C61726765 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD DUP2 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0xE PUSH1 0x0 MSTORE PUSH1 0x1 SHL PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD ISZERO PUSH2 0x583 JUMPI PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x778 DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP3 MSTORE PUSH1 0x1 SLOAD PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x794 DUP2 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7B2 DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x2 SWAP1 DUP4 SWAP1 DUP3 PUSH1 0x0 DUP3 JUMPDEST DUP6 DUP3 LT PUSH2 0x80F JUMPI POP POP POP PUSH2 0x7D2 DUP2 PUSH2 0x113 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x0 PUSH1 0x4 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x7F9 JUMPI POP POP POP POP PUSH1 0x20 SWAP1 PUSH2 0x7F5 DUP4 PUSH2 0x113 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP5 SLOAD DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x832 DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x6 PUSH1 0x0 DUP3 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x88A JUMPI POP POP POP PUSH2 0x851 DUP2 PUSH2 0x113 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x8 PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x874 JUMPI POP POP POP PUSH1 0x20 SWAP1 PUSH2 0x7F5 DUP4 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x85D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x8AD DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0xA PUSH1 0x0 DUP3 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x905 JUMPI POP POP POP PUSH2 0x8CC DUP2 PUSH2 0x113 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0xC PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x8EF JUMPI POP POP POP PUSH1 0x20 SWAP1 PUSH2 0x7F5 DUP4 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x8B8 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x927 DUP2 MLOAD PUSH2 0x674 JUMP JUMPDEST PUSH1 0xE SLOAD SUB PUSH2 0xA22 JUMPI PUSH2 0x937 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x9C7 JUMPI PUSH2 0x9BF PUSH1 0x1 SWAP2 PUSH2 0x98B PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 PUSH2 0x984 DUP9 DUP9 PUSH2 0x56F JUMP JUMPDEST MLOAD LT PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x9B9 PUSH2 0x99F PUSH2 0x99A DUP9 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST POP PUSH2 0x9B4 PUSH2 0x9AD DUP10 DUP10 PUSH2 0x56F JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x787 JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST SWAP1 PUSH2 0xABD JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x947 JUMP JUMPDEST PUSH2 0x65B SWAP4 POP PUSH2 0x9E4 SWAP2 SWAP5 SWAP3 POP PUSH2 0x9B9 PUSH2 0x9DE PUSH2 0x737 JUMP JUMPDEST POP PUSH2 0x787 JUMP JUMPDEST PUSH2 0x9EE DUP3 MLOAD PUSH2 0xB4E JUMP JUMPDEST SWAP2 PUSH1 0x40 PUSH1 0x20 DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP2 PUSH2 0xA02 PUSH2 0x76B JUMP JUMPDEST PUSH2 0xA0A PUSH2 0x7A5 JUMP JUMPDEST SWAP1 PUSH2 0xA13 PUSH2 0x825 JUMP JUMPDEST SWAP4 PUSH2 0xA1C PUSH2 0x8A0 JUMP JUMPDEST SWAP7 PUSH2 0xC31 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x60 PUSH2 0xA38 PUSH2 0x45F JUMP JUMPDEST SWAP5 DUP6 SWAP3 PUSH1 0x20 DUP6 MLOAD SWAP3 PUSH2 0xA49 DUP5 PUSH2 0x134 JUMP JUMPDEST DUP5 CALLDATASIZE DUP6 CALLDATACOPY DUP1 MLOAD DUP5 MSTORE ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE DUP5 DUP3 ADD MSTORE PUSH1 0x7 GAS STATICCALL ISZERO PUSH2 0xA67 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5363616C6172206D756C7469706C69636174696F6E206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xAC8 PUSH2 0x45F JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x12F JUMPI PUSH1 0x20 DUP7 SWAP4 DUP2 PUSH1 0x40 SWAP7 PUSH1 0x80 SWAP6 DUP9 MSTORE DUP6 CALLDATASIZE DUP7 CALLDATACOPY DUP1 MLOAD DUP6 MSTORE ADD MLOAD DUP3 DUP5 ADD MSTORE DUP1 MLOAD DUP7 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 GAS STATICCALL ISZERO PUSH2 0xB17 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1059191A5D1A5BDB8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xB56 PUSH2 0x45F JUMP JUMPDEST POP DUP1 MLOAD SWAP1 DUP2 ISZERO DUP1 PUSH2 0xBCC JUMPI JUMPDEST ISZERO PUSH2 0xB83 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xB75 DUP2 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 SWAP1 DUP2 SWAP1 MOD DUP2 SUB SWAP1 DUP2 GT PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xBC2 DUP4 PUSH2 0x113 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD ISZERO PUSH2 0xB62 JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x6 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x682 JUMPI JUMP JUMPDEST ISZERO PUSH2 0xBF5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185A5C9A5B99C818DA1958DAC819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 PUSH2 0xC41 PUSH2 0x181 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP7 DUP8 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xC5F PUSH2 0x181 JUMP JUMPDEST SWAP6 DUP7 MSTORE DUP5 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xC78 PUSH2 0x50F JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xCA9 JUMPI POP POP POP PUSH2 0xCA3 SWAP2 PUSH2 0x300 PUSH2 0xC96 PUSH2 0x478 JUMP JUMPDEST SWAP5 DUP6 SWAP3 ADD PUSH1 0x8 GAS STATICCALL PUSH2 0xBEE JUMP JUMPDEST MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SWAP4 POP PUSH2 0xCB9 DUP2 PUSH1 0x1 SWAP4 SWAP5 PUSH2 0xAAC JUMP JUMPDEST MLOAD MLOAD PUSH2 0xCCD PUSH2 0xCC7 DUP4 PUSH2 0xBD8 JUMP JUMPDEST DUP8 PUSH2 0x56F JUMP JUMPDEST MSTORE DUP6 PUSH2 0xCD9 DUP3 DUP7 PUSH2 0xAAC JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0xCF0 PUSH2 0xCC7 PUSH2 0xCEB DUP5 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST MSTORE PUSH2 0xCFB DUP2 DUP5 PUSH2 0xAAC JUMP JUMPDEST MLOAD MLOAD MLOAD PUSH2 0xD12 PUSH2 0xCC7 PUSH2 0xD0D DUP5 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST MSTORE PUSH2 0xD28 PUSH2 0xD20 DUP3 DUP6 PUSH2 0xAAC JUMP JUMPDEST MLOAD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD PUSH2 0xD3D PUSH2 0xCC7 PUSH2 0xD38 DUP5 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST MSTORE DUP6 PUSH2 0xD49 DUP3 DUP6 PUSH2 0xAAC JUMP JUMPDEST MLOAD ADD MLOAD MLOAD PUSH2 0xD61 PUSH2 0xCC7 PUSH2 0xD5C DUP5 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST MSTORE PUSH2 0xD79 DUP7 PUSH2 0xD70 DUP4 DUP7 PUSH2 0xAAC JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD PUSH2 0xD8E PUSH2 0xCC7 PUSH2 0xD89 DUP5 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST MSTORE ADD SWAP1 DUP5 SWAP3 SWAP2 PUSH2 0xC7C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 PUSH19 0x1E8F4EFAAA9466A9EF1634EB92D1FD24B2C3F0 0xF8 DUP10 0xB0 0xAE PUSH17 0xE99F868B917664736F6C63430008180033 ","sourceMap":"296:4515:19:-:0;;;;;;;;:::i;:::-;813:66;296:4515;;;893:66;784:185;;;;;;296:4515;784:185;296:4515;;;;;;;;;:::i;:::-;1029:66;296:4515;;1110:66;1028:149;;;296:4515;;;:::i;:::-;;1192:66;296:4515;;1273:66;1191:149;;;296:4515;;;;;:::i;:::-;;;;999:351;296:4515;;;;;1028:149;296:4515;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1028:149;296:4515;;;;;;;;;:::i;:::-;1411:66;296:4515;;1492:66;1410:149;;;296:4515;;;:::i;:::-;;1574:66;296:4515;;1655:66;1573:149;;;296:4515;;;;;:::i;:::-;;;;1381:351;296:4515;;;;1028:149;296:4515;;;;;;;;;;1028:149;296:4515;;;;;;;;;:::i;:::-;1793:66;296:4515;;1874:66;1792:149;;;296:4515;;;:::i;:::-;;1956:66;296:4515;;2037:66;1955:149;;;296:4515;;;;;:::i;:::-;;;;1763:351;296:4515;;;;1028:149;296:4515;;;;;;;;;1028:149;296:4515;;;;3073:210;296:4515;2189:214;296:4515;;:::i;:::-;2246:66;296:4515;;2326:66;2217:185;;;296:4515;2189:214;:::i;:::-;2413:210;296:4515;;:::i;:::-;2470:64;296:4515;;2548:64;2441:181;;;296:4515;2413:210;:::i;:::-;2633;296:4515;;:::i;:::-;2690:64;296:4515;;2768:64;2661:181;;;296:4515;2633:210;:::i;:::-;2853;296:4515;;:::i;:::-;2910:64;296:4515;;2988:64;2881:181;;;296:4515;2853:210;:::i;:::-;3208:64;296:4515;;:::i;:::-;;3130:64;296:4515;;3101:181;;296:4515;3073:210;:::i;:::-;296:4515;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1742:18;296:4515;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:18;296:4515;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;296:4515:19;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;2189:22;296:4515;;;;;;;;;;;2189:22;296:4515;;;;;;;;;2189:22;-1:-1:-1;296:4515:19;;-1:-1:-1;296:4515:19;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;296:4515:19;;;;;-1:-1:-1;296:4515:19"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_uint256":{"entryPoint":686,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_3792":{"entryPoint":417,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_3794":{"entryPoint":488,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_3810":{"entryPoint":554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_3811":{"entryPoint":620,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_G1Point":{"entryPoint":915,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_struct_G1Point_3808":{"entryPoint":875,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256":{"entryPoint":1144,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":1341,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn_3865":{"entryPoint":1295,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_G1Point":{"entryPoint":1119,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Proof":{"entryPoint":1181,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":370,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_7281":{"entryPoint":385,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":755,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":1713,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_3844":{"entryPoint":1652,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_3872":{"entryPoint":1671,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_3875":{"entryPoint":1685,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_3878":{"entryPoint":1699,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":3032,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_verifyTx":{"entryPoint":955,"id":null,"parameterSlots":0,"returnSlots":0},"finalize_allocation":{"entryPoint":336,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_3801":{"entryPoint":275,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_3807":{"entryPoint":308,"id":null,"parameterSlots":1,"returnSlots":0},"fun_addition":{"entryPoint":2749,"id":3235,"parameterSlots":2,"returnSlots":1},"fun_negate":{"entryPoint":2894,"id":3178,"parameterSlots":1,"returnSlots":1},"fun_pairing":{"entryPoint":3121,"id":3472,"parameterSlots":8,"returnSlots":1},"fun_scalar_mul":{"entryPoint":2601,"id":3283,"parameterSlots":2,"returnSlots":1},"fun_verifyProof":{"entryPoint":1416,"id":3093,"parameterSlots":4,"returnSlots":1},"fun_verifyTx":{"entryPoint":2331,"id":2970,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_array_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256":{"entryPoint":2732,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":1391,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1630,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1273,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":253,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_reference_type_struct_G1Point":{"entryPoint":1927,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_G1Point_3849":{"entryPoint":1899,"id":null,"parameterSlots":0,"returnSlots":1},"read_from_storage_reference_type_struct_G2Point":{"entryPoint":1957,"id":null,"parameterSlots":0,"returnSlots":1},"read_from_storage_reference_type_struct_G2Point_3851":{"entryPoint":2085,"id":null,"parameterSlots":0,"returnSlots":1},"read_from_storage_reference_type_struct_G2Point_3852":{"entryPoint":2208,"id":null,"parameterSlots":0,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":1727,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ad90":{"entryPoint":3054,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_G1Point__dyn":{"entryPoint":1789,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_struct_G1Point_storage_dyn":{"entryPoint":1847,"id":null,"parameterSlots":0,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60406080604052600436101561001457600080fd5b600090813560e01c918263c32e370e1461003e57505063c94176471461003957600080fd5b6103bb565b346100d9576101203660031901126100d957610059366101a1565b9136606312156100f9576040519061007082610113565b60c4823682116100f5576044905b8282106100dc5750505050610092366101e8565b91610104359067ffffffffffffffff82116100d9576100d56100c38686866100bd366004890161030b565b92610588565b60405190151581529081906020820190565b0390f35b80fd5b602084916100ea36856102ae565b81520191019061007e565b8480fd5b5080fd5b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761012f57604052565b6100fd565b6060810190811067ffffffffffffffff82111761012f57604052565b90601f8019910116810190811067ffffffffffffffff82111761012f57604052565b6040519061017f82610113565b565b604051906080820182811067ffffffffffffffff82111761012f57604052565b80602312156101e357604051906101b782610113565b816044916044116101e3576004905b8282106101d35750505090565b81358152602091820191016101c6565b600080fd5b8060e312156101e357604051906101fe82610113565b816101049182116101e35760c4905b82821061021a5750505090565b813581526020918201910161020d565b80606312156101e3576040519061024082610113565b816084916084116101e3576044905b82821061025c5750505090565b813581526020918201910161024f565b8060a312156101e3576040519061028282610113565b8160c49160c4116101e3576084905b82821061029e5750505090565b8135815260209182019101610291565b9080601f830112156101e357604051916102c783610113565b8290604081019283116101e357905b8282106102e35750505090565b81358152602091820191016102d6565b67ffffffffffffffff811161012f5760051b60200190565b9080601f830112156101e3576020908235610325816102f3565b936103336040519586610150565b81855260208086019260051b8201019283116101e357602001905b82821061035c575050505090565b8135815290830190830161034e565b60409060031901126101e3576040519061038482610113565b60043582526024356020830152565b60409060c31901126101e357604051906103ac82610113565b60c435825260e4356020830152565b346101e357366003190161012081126101e357610100136101e3576040516103e281610134565b6103eb3661036b565b815260803660431901126101e35760405161040581610113565b61040e3661022a565b81526104193661026c565b6020820152602082015261042c36610393565b60408201526101043567ffffffffffffffff81116101e3576100d5916104596100c392369060040161030b565b9061091b565b6040519061046c82610113565b60006020838281520152565b604051906020820182811067ffffffffffffffff82111761012f576040526020368337565b60409081516104ab81610134565b80926104b561045f565b825280516104c281610113565b81516104cd81610113565b82368237815281516104de81610113565b82368237602082015260208301526104f461045f565b910152565b634e487b7160e01b600052603260045260246000fd5b60405190610320820182811067ffffffffffffffff82111761012f5760405260188252610300366020840137565b90610547826102f3565b6105546040519182610150565b8281528092610565601f19916102f3565b0190602036910137565b80518210156105835760209160051b010190565b6104f9565b939190929361059561049d565b9381516020809301516105a6610172565b9182528382015285526105b7610172565b9080515182526105c8815160200190565b51838301526105e7836105d9610172565b920180515183525160200190565b51838201526105f4610172565b91825282820152818501528082519201519061060e610172565b9283528201526040830152610623835161053d565b9060005b845181101561064f578061063d6001928761056f565b51610648828661056f565b5201610627565b50925061065b9161091b565b90565b634e487b7160e01b600052601160045260246000fd5b906001820180921161068257565b61065e565b906002820180921161068257565b906003820180921161068257565b906004820180921161068257565b906005820180921161068257565b156106c657565b60405162461bcd60e51b815260206004820152600f60248201526e496e70757420746f6f206c6172676560881b6044820152606490fd5b600e5481101561058357600e60005260011b7fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0190600090565b600e541561058357600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd90600090565b6040519061077882610113565b60005482526001546020830152565b9060405161079481610113565b602060018294805484520154910152565b604051906107b282610113565b6040516002908390826000825b85821061080f575050506107d281610113565b81526040519160006004845b8383106107f957505050506020906107f583610113565b0152565b60016020819284548152019201920191906107de565b60016020819285548152019301910190916107bf565b6040519061083282610113565b604051829060066000825b6002821061088a5750505061085181610113565b81526040519060086000835b60028210610874575050506020906107f583610113565b600160208192855481520193019101909161085d565b600160208192855481520193019101909161083d565b604051906108ad82610113565b6040518290600a6000825b60028210610905575050506108cc81610113565b815260405190600c6000835b600282106108ef575050506020906107f583610113565b60016020819285548152019301910190916108d8565b60016020819285548152019301910190916108b8565b91906109278151610674565b600e5403610a2257610937610172565b6000815260006020820152916000925b82518410156109c7576109bf60019161098b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001610984888861056f565b51106106bf565b6109b961099f61099a88610674565b6106fd565b506109b46109ad898961056f565b5191610787565b610a29565b90610abd565b930192610947565b61065b93506109e4919492506109b96109de610737565b50610787565b6109ee8251610b4e565b916040602082015191015191610a0261076b565b610a0a6107a5565b90610a13610825565b93610a1c6108a0565b96610c31565b5060009150565b91906040906060610a3861045f565b9485926020855192610a4984610134565b8436853780518452015160208301528482015260075afa15610a6757565b60405162461bcd60e51b815260206004820152601c60248201527f5363616c6172206d756c7469706c69636174696f6e206661696c6564000000006044820152606490fd5b9060048110156105835760051b0190565b919091610ac861045f565b92604051608081019080821067ffffffffffffffff83111761012f576020869381604096608095885285368637805185520151828401528051868401520151606082015260065afa15610b1757565b60405162461bcd60e51b815260206004820152600f60248201526e1059191a5d1a5bdb8819985a5b1959608a1b6044820152606490fd5b610b5661045f565b50805190811580610bcc575b15610b83575050604051610b7581610113565b600081526000602082015290565b602001517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019081900681039081116106825760405191610bc283610113565b8252602082015290565b50602081015115610b62565b9060068202918083046006149015171561068257565b15610bf557565b60405162461bcd60e51b815260206004820152601460248201527314185a5c9a5b99c818da1958dac819985a5b195960621b6044820152606490fd5b9396929095949194610c41610181565b94855260209788968787015260408601526060850152610c5f610181565b9586528486015260408501526060840152610c7861050f565b9260005b60048110610ca957505050610ca391610300610c96610478565b9485920160085afa610bee565b51151590565b829350610cb98160019394610aac565b5151610ccd610cc783610bd8565b8761056f565b5285610cd98286610aac565b510151610cf0610cc7610ceb84610bd8565b610674565b52610cfb8184610aac565b515151610d12610cc7610d0d84610bd8565b610687565b52610d28610d208285610aac565b515160200190565b51610d3d610cc7610d3884610bd8565b610695565b5285610d498285610aac565b51015151610d61610cc7610d5c84610bd8565b6106a3565b52610d7986610d708386610aac565b51015160200190565b51610d8e610cc7610d8984610bd8565b6106b1565b520190849291610c7c56fea2646970667358221220b1721e8f4efaaa9466a9ef1634eb92d1fd24b2c3f0f889b0ae70e99f868b917664736f6c63430008180033","opcodes":"PUSH1 0x40 PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0xC32E370E EQ PUSH2 0x3E JUMPI POP POP PUSH4 0xC9417647 EQ PUSH2 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BB JUMP JUMPDEST CALLVALUE PUSH2 0xD9 JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD9 JUMPI PUSH2 0x59 CALLDATASIZE PUSH2 0x1A1 JUMP JUMPDEST SWAP2 CALLDATASIZE PUSH1 0x63 SLT ISZERO PUSH2 0xF9 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x70 DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0xC4 DUP3 CALLDATASIZE DUP3 GT PUSH2 0xF5 JUMPI PUSH1 0x44 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xDC JUMPI POP POP POP POP PUSH2 0x92 CALLDATASIZE PUSH2 0x1E8 JUMP JUMPDEST SWAP2 PUSH2 0x104 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xD9 JUMPI PUSH2 0xD5 PUSH2 0xC3 DUP7 DUP7 DUP7 PUSH2 0xBD CALLDATASIZE PUSH1 0x4 DUP10 ADD PUSH2 0x30B JUMP JUMPDEST SWAP3 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 SWAP2 PUSH2 0xEA CALLDATASIZE DUP6 PUSH2 0x2AE JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x7E JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17F DUP3 PUSH2 0x113 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 PUSH1 0x23 SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B7 DUP3 PUSH2 0x113 JUMP JUMPDEST DUP2 PUSH1 0x44 SWAP2 PUSH1 0x44 GT PUSH2 0x1E3 JUMPI PUSH1 0x4 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1D3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0xE3 SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1FE DUP3 PUSH2 0x113 JUMP JUMPDEST DUP2 PUSH2 0x104 SWAP2 DUP3 GT PUSH2 0x1E3 JUMPI PUSH1 0xC4 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x21A JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x20D JUMP JUMPDEST DUP1 PUSH1 0x63 SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x240 DUP3 PUSH2 0x113 JUMP JUMPDEST DUP2 PUSH1 0x84 SWAP2 PUSH1 0x84 GT PUSH2 0x1E3 JUMPI PUSH1 0x44 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x25C JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x24F JUMP JUMPDEST DUP1 PUSH1 0xA3 SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x282 DUP3 PUSH2 0x113 JUMP JUMPDEST DUP2 PUSH1 0xC4 SWAP2 PUSH1 0xC4 GT PUSH2 0x1E3 JUMPI PUSH1 0x84 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x29E JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x291 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2C7 DUP4 PUSH2 0x113 JUMP JUMPDEST DUP3 SWAP1 PUSH1 0x40 DUP2 ADD SWAP3 DUP4 GT PUSH2 0x1E3 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2E3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2D6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x12F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x325 DUP2 PUSH2 0x2F3 JUMP JUMPDEST SWAP4 PUSH2 0x333 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x150 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1E3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x35C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x384 DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0xC3 NOT ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3AC DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD DUP3 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x1E3 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x120 DUP2 SLT PUSH2 0x1E3 JUMPI PUSH2 0x100 SGT PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD PUSH2 0x3E2 DUP2 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x3EB CALLDATASIZE PUSH2 0x36B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x80 CALLDATASIZE PUSH1 0x43 NOT ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x40 MLOAD PUSH2 0x405 DUP2 PUSH2 0x113 JUMP JUMPDEST PUSH2 0x40E CALLDATASIZE PUSH2 0x22A JUMP JUMPDEST DUP2 MSTORE PUSH2 0x419 CALLDATASIZE PUSH2 0x26C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x42C CALLDATASIZE PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E3 JUMPI PUSH2 0xD5 SWAP2 PUSH2 0x459 PUSH2 0xC3 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x30B JUMP JUMPDEST SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x46C DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE PUSH1 0x20 CALLDATASIZE DUP4 CALLDATACOPY JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 MLOAD PUSH2 0x4AB DUP2 PUSH2 0x134 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x4B5 PUSH2 0x45F JUMP JUMPDEST DUP3 MSTORE DUP1 MLOAD PUSH2 0x4C2 DUP2 PUSH2 0x113 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x4CD DUP2 PUSH2 0x113 JUMP JUMPDEST DUP3 CALLDATASIZE DUP3 CALLDATACOPY DUP2 MSTORE DUP2 MLOAD PUSH2 0x4DE DUP2 PUSH2 0x113 JUMP JUMPDEST DUP3 CALLDATASIZE DUP3 CALLDATACOPY PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4F4 PUSH2 0x45F JUMP JUMPDEST SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x320 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12F JUMPI PUSH1 0x40 MSTORE PUSH1 0x18 DUP3 MSTORE PUSH2 0x300 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x547 DUP3 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x554 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x150 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x565 PUSH1 0x1F NOT SWAP2 PUSH2 0x2F3 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST SWAP4 SWAP2 SWAP1 SWAP3 SWAP4 PUSH2 0x595 PUSH2 0x49D JUMP JUMPDEST SWAP4 DUP2 MLOAD PUSH1 0x20 DUP1 SWAP4 ADD MLOAD PUSH2 0x5A6 PUSH2 0x172 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP4 DUP3 ADD MSTORE DUP6 MSTORE PUSH2 0x5B7 PUSH2 0x172 JUMP JUMPDEST SWAP1 DUP1 MLOAD MLOAD DUP3 MSTORE PUSH2 0x5C8 DUP2 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD DUP4 DUP4 ADD MSTORE PUSH2 0x5E7 DUP4 PUSH2 0x5D9 PUSH2 0x172 JUMP JUMPDEST SWAP3 ADD DUP1 MLOAD MLOAD DUP4 MSTORE MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD DUP4 DUP3 ADD MSTORE PUSH2 0x5F4 PUSH2 0x172 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP3 DUP3 ADD MSTORE DUP2 DUP6 ADD MSTORE DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 PUSH2 0x60E PUSH2 0x172 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x623 DUP4 MLOAD PUSH2 0x53D JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI DUP1 PUSH2 0x63D PUSH1 0x1 SWAP3 DUP8 PUSH2 0x56F JUMP JUMPDEST MLOAD PUSH2 0x648 DUP3 DUP7 PUSH2 0x56F JUMP JUMPDEST MSTORE ADD PUSH2 0x627 JUMP JUMPDEST POP SWAP3 POP PUSH2 0x65B SWAP2 PUSH2 0x91B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x682 JUMPI JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x682 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x682 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x682 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x682 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x6C6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E70757420746F6F206C61726765 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD DUP2 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0xE PUSH1 0x0 MSTORE PUSH1 0x1 SHL PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD ISZERO PUSH2 0x583 JUMPI PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x778 DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP3 MSTORE PUSH1 0x1 SLOAD PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x794 DUP2 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7B2 DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x2 SWAP1 DUP4 SWAP1 DUP3 PUSH1 0x0 DUP3 JUMPDEST DUP6 DUP3 LT PUSH2 0x80F JUMPI POP POP POP PUSH2 0x7D2 DUP2 PUSH2 0x113 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x0 PUSH1 0x4 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x7F9 JUMPI POP POP POP POP PUSH1 0x20 SWAP1 PUSH2 0x7F5 DUP4 PUSH2 0x113 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP5 SLOAD DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x832 DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x6 PUSH1 0x0 DUP3 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x88A JUMPI POP POP POP PUSH2 0x851 DUP2 PUSH2 0x113 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x8 PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x874 JUMPI POP POP POP PUSH1 0x20 SWAP1 PUSH2 0x7F5 DUP4 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x85D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x8AD DUP3 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0xA PUSH1 0x0 DUP3 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x905 JUMPI POP POP POP PUSH2 0x8CC DUP2 PUSH2 0x113 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0xC PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x8EF JUMPI POP POP POP PUSH1 0x20 SWAP1 PUSH2 0x7F5 DUP4 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x8B8 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x927 DUP2 MLOAD PUSH2 0x674 JUMP JUMPDEST PUSH1 0xE SLOAD SUB PUSH2 0xA22 JUMPI PUSH2 0x937 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x9C7 JUMPI PUSH2 0x9BF PUSH1 0x1 SWAP2 PUSH2 0x98B PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 PUSH2 0x984 DUP9 DUP9 PUSH2 0x56F JUMP JUMPDEST MLOAD LT PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x9B9 PUSH2 0x99F PUSH2 0x99A DUP9 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST POP PUSH2 0x9B4 PUSH2 0x9AD DUP10 DUP10 PUSH2 0x56F JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x787 JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST SWAP1 PUSH2 0xABD JUMP JUMPDEST SWAP4 ADD SWAP3 PUSH2 0x947 JUMP JUMPDEST PUSH2 0x65B SWAP4 POP PUSH2 0x9E4 SWAP2 SWAP5 SWAP3 POP PUSH2 0x9B9 PUSH2 0x9DE PUSH2 0x737 JUMP JUMPDEST POP PUSH2 0x787 JUMP JUMPDEST PUSH2 0x9EE DUP3 MLOAD PUSH2 0xB4E JUMP JUMPDEST SWAP2 PUSH1 0x40 PUSH1 0x20 DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP2 PUSH2 0xA02 PUSH2 0x76B JUMP JUMPDEST PUSH2 0xA0A PUSH2 0x7A5 JUMP JUMPDEST SWAP1 PUSH2 0xA13 PUSH2 0x825 JUMP JUMPDEST SWAP4 PUSH2 0xA1C PUSH2 0x8A0 JUMP JUMPDEST SWAP7 PUSH2 0xC31 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x60 PUSH2 0xA38 PUSH2 0x45F JUMP JUMPDEST SWAP5 DUP6 SWAP3 PUSH1 0x20 DUP6 MLOAD SWAP3 PUSH2 0xA49 DUP5 PUSH2 0x134 JUMP JUMPDEST DUP5 CALLDATASIZE DUP6 CALLDATACOPY DUP1 MLOAD DUP5 MSTORE ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE DUP5 DUP3 ADD MSTORE PUSH1 0x7 GAS STATICCALL ISZERO PUSH2 0xA67 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5363616C6172206D756C7469706C69636174696F6E206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xAC8 PUSH2 0x45F JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x12F JUMPI PUSH1 0x20 DUP7 SWAP4 DUP2 PUSH1 0x40 SWAP7 PUSH1 0x80 SWAP6 DUP9 MSTORE DUP6 CALLDATASIZE DUP7 CALLDATACOPY DUP1 MLOAD DUP6 MSTORE ADD MLOAD DUP3 DUP5 ADD MSTORE DUP1 MLOAD DUP7 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 GAS STATICCALL ISZERO PUSH2 0xB17 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1059191A5D1A5BDB8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xB56 PUSH2 0x45F JUMP JUMPDEST POP DUP1 MLOAD SWAP1 DUP2 ISZERO DUP1 PUSH2 0xBCC JUMPI JUMPDEST ISZERO PUSH2 0xB83 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xB75 DUP2 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 SWAP1 DUP2 SWAP1 MOD DUP2 SUB SWAP1 DUP2 GT PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xBC2 DUP4 PUSH2 0x113 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD ISZERO PUSH2 0xB62 JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x6 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x682 JUMPI JUMP JUMPDEST ISZERO PUSH2 0xBF5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185A5C9A5B99C818DA1958DAC819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 PUSH2 0xC41 PUSH2 0x181 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP7 DUP8 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xC5F PUSH2 0x181 JUMP JUMPDEST SWAP6 DUP7 MSTORE DUP5 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xC78 PUSH2 0x50F JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xCA9 JUMPI POP POP POP PUSH2 0xCA3 SWAP2 PUSH2 0x300 PUSH2 0xC96 PUSH2 0x478 JUMP JUMPDEST SWAP5 DUP6 SWAP3 ADD PUSH1 0x8 GAS STATICCALL PUSH2 0xBEE JUMP JUMPDEST MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SWAP4 POP PUSH2 0xCB9 DUP2 PUSH1 0x1 SWAP4 SWAP5 PUSH2 0xAAC JUMP JUMPDEST MLOAD MLOAD PUSH2 0xCCD PUSH2 0xCC7 DUP4 PUSH2 0xBD8 JUMP JUMPDEST DUP8 PUSH2 0x56F JUMP JUMPDEST MSTORE DUP6 PUSH2 0xCD9 DUP3 DUP7 PUSH2 0xAAC JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0xCF0 PUSH2 0xCC7 PUSH2 0xCEB DUP5 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST MSTORE PUSH2 0xCFB DUP2 DUP5 PUSH2 0xAAC JUMP JUMPDEST MLOAD MLOAD MLOAD PUSH2 0xD12 PUSH2 0xCC7 PUSH2 0xD0D DUP5 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST MSTORE PUSH2 0xD28 PUSH2 0xD20 DUP3 DUP6 PUSH2 0xAAC JUMP JUMPDEST MLOAD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD PUSH2 0xD3D PUSH2 0xCC7 PUSH2 0xD38 DUP5 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST MSTORE DUP6 PUSH2 0xD49 DUP3 DUP6 PUSH2 0xAAC JUMP JUMPDEST MLOAD ADD MLOAD MLOAD PUSH2 0xD61 PUSH2 0xCC7 PUSH2 0xD5C DUP5 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST MSTORE PUSH2 0xD79 DUP7 PUSH2 0xD70 DUP4 DUP7 PUSH2 0xAAC JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD PUSH2 0xD8E PUSH2 0xCC7 PUSH2 0xD89 DUP5 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST MSTORE ADD SWAP1 DUP5 SWAP3 SWAP2 PUSH2 0xC7C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 PUSH19 0x1E8F4EFAAA9466A9EF1634EB92D1FD24B2C3F0 0xF8 DUP10 0xB0 0xAE PUSH17 0xE99F868B917664736F6C63430008180033 ","sourceMap":"296:4515:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;296:4515:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;296:4515:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;296:4515:19;;;;;;;-1:-1:-1;296:4515:19;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;-1:-1:-1;;296:4515:19;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;296:4515:19;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7073:2;296:4515;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;:::i;4219:590::-;;;;;;296:4515;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;4431:27;;;296:4515;4421:37;;296:4515;;:::i;:::-;4495:4;;;296:4515;;;4504:7;:4;;296:4515;;;;4504:7;296:4515;4494:18;;;296:4515;4524:7;296:4515;;;:::i;:::-;;;4515:4;;296:4515;;;4524:4;296:4515;;;;4524:7;296:4515;4514:18;;;296:4515;;;:::i;:::-;;;;4478:55;;;296:4515;4468:7;;;:65;296:4515;;;;;;;;;:::i;:::-;;;;4553:27;;296:4515;;4543:7;;:37;4627:24;296:4515;;4627:24;:::i;:::-;4665:10;-1:-1:-1;4695:3:19;296:4515;;4677:16;;;;;4730:8;;4455:1;4730:8;;;:::i;:::-;296:4515;4713:25;;;;:::i;:::-;296:4515;;4665:10;;4677:16;;;;4774:28;4677:16;4774:28;:::i;:::-;4219:590;:::o;296:4515::-;;;;;;;;;;;;;;3440:1;296:4515;;;;;;;:::o;:::-;;:::i;:::-;;7290:1;296:4515;;;;;;;:::o;:::-;;7333:1;296:4515;;;;;;;:::o;:::-;;6978:16;296:4515;;;;;;;:::o;:::-;;7419:1;296:4515;;;;;;;:::o;4862:77::-;;;;:::o;:::-;296:4515;;-1:-1:-1;;;4862:77:19;;;;;;;;;;;;-1:-1:-1;;;4862:77:19;;;;;;;;3445:22;296:4515;4862:77;;;;;3445:22;-1:-1:-1;4862:77:19;;;;;;-1:-1:-1;4862:77:19;:::o;:::-;3445:22;296:4515;4862:77;;;3445:22;:12;4862:77;;;3445:12;4862:77;:::o;:::-;296:4515;;;;;;:::i;:::-;3445:12;4862:77;296:4515;;4862:77;;;;;296:4515;4862:77::o;:::-;;296:4515;;;;;:::i;:::-;4862:77;;;;;;296:4515;;4862:77;;;;296:4515;4862:77::o;:::-;296:4515;;;;;;:::i;:::-;;;4072:17;;4862:77;;4072:17;-1:-1:-1;296:4515:19;4862:77;;;;;;;;;;;;:::i;:::-;296:4515;;;;;-1:-1:-1;4862:77:19;296:4515;4862:77;;;;;;;;;;;;;;;:::i;:::-;;296:4515;4862:77::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;296:4515;;;;;;:::i;:::-;;;4862:77;;4121:18;-1:-1:-1;296:4515:19;4862:77;296:4515;4862:77;;;;;;;;;;:::i;:::-;296:4515;;;;;4862:77;-1:-1:-1;296:4515:19;4862:77;296:4515;4862:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;296:4515;;;;;;:::i;:::-;;;4862:77;;4174:18;-1:-1:-1;296:4515:19;4862:77;296:4515;4862:77;;;;;;;;;;:::i;:::-;296:4515;;;;;4862:77;-1:-1:-1;296:4515:19;4862:77;296:4515;4862:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3300:909;;;3425:16;296:4515;;3425:16;:::i;:::-;3445:22;296:4515;3425:49;3421:92;;296:4515;;:::i;:::-;-1:-1:-1;296:4515:19;;-1:-1:-1;3608:21:19;;;296:4515;3644:10;-1:-1:-1;3639:223:19;3674:3;296:4515;;3656:16;;;;;3768:83;3440:1;3701:8;3693:54;4862:77;3701:8;;;;:::i;:::-;296:4515;3701:26;3693:54;:::i;:::-;3791:59;3810:29;3833:5;;;:::i;:::-;3810:29;:::i;:::-;3841:8;4862:77;3841:8;;;;:::i;:::-;296:4515;4862:77;;:::i;:::-;3791:59;:::i;:::-;3768:83;;:::i;:::-;3674:3;296:4515;3644:10;;;3656:16;3953:249;3656:16;;3878:49;3656:16;;;;4862:77;3901:25;;:::i;:::-;4862:77;;:::i;3878:49::-;3982:23;3997:7;;3982:23;:::i;:::-;4019:7;296:4515;3608:21;4019:7;;;4153;;;4862:77;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;3953:249;;:::i;3421:92::-;-1:-1:-1;;;;3490:12:19:o;6296:375::-;;;296:4515;6296:375;296:4515;;;:::i;:::-;;;;6464:3;296:4515;;;;;;:::i;:::-;;;;;;;;;6464:3;296:4515;6464:3;296:4515;;;;;;;6521:86;;;296:4515;;;6296:375::o;296:4515::-;;;-1:-1:-1;;;296:4515:19;;6464:3;296:4515;;;;;;;;4862:77;296:4515;4862:77;;;296:4515;;;;;;;;;;;;;;;;:::o;5891:399::-;;;;296:4515;;:::i;:::-;;;;;;;;;;;;;;;;;6067:4;296:4515;;;;;;;;;;;;;;;;;6067:4;296:4515;;;;;;;;;;;6117:4;296:4515;;;;;6153:86;;;296:4515;;;5891:399::o;296:4515::-;;;-1:-1:-1;;;296:4515:19;;6067:4;296:4515;;;;;;;;4862:77;-1:-1:-1;;;4862:77:19;;;296:4515;;;;5648:237;296:4515;;:::i;:::-;;;;5735:8;;;:20;;;5648:237;5731:148;;;296:4515;;;;;;;:::i;:::-;-1:-1:-1;296:4515:19;;-1:-1:-1;5778:13:19;;;296:4515;5771:20;:::o;5731:148::-;5853:3;;296:4515;4862:77;296:4515;;;;;;;;;;;;;;;;;:::i;:::-;;;5853:3;5829:39;;296:4515;5822:46;:::o;5735:20::-;5747:3;;;;296:4515;5747:8;5735:20;;296:4515;;7206:1;296:4515;;;;;;7206:1;296:4515;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;296:4515:19;;;;;;;;;;;4862:77;-1:-1:-1;;;4862:77:19;;;296:4515;;;;6677:1038;;;;;;;;;296:4515;;:::i;:::-;;;;6978:16;;;;;;;296:4515;6978:16;;;296:4515;6978:16;;;296:4515;;;:::i;:::-;;;;7027:16;;;296:4515;6978:16;7027;;296:4515;6978:16;7027;;296:4515;7110:24;;:::i;:::-;7158:10;6978:16;7170:5;6978:16;7170:5;;;;296:4515;;;7640:40;296:4515;7516:115;296:4515;;:::i;:::-;7516:115;;;;;;;7640:40;:::i;:::-;296:4515;7697:11;;6677:1038;:::o;7177:3::-;7215:5;;;;;7250:1;7215:5;;;:::i;:::-;;296:4515;7196:26;7202:5;;;:::i;:::-;7196:26;;:::i;:::-;296:4515;7255:5;;;;;:::i;:::-;;:7;296:4515;7236:26;7242:9;:5;;;:::i;:::-;:9;:::i;7236:26::-;296:4515;7295:5;;;;:::i;:::-;;:7;296:4515;7276:29;7282:9;:5;;;:::i;:::-;:9;:::i;7276:29::-;296:4515;7338:10;:5;;;;:::i;:::-;;:7;296:4515;;;;7338:10;296:4515;7319:29;7325:9;:5;;;:::i;:::-;:9;:::i;7319:29::-;296:4515;7381:5;;;;;:::i;:::-;;:7;;296:4515;7362:29;7368:9;:5;;;:::i;:::-;:9;:::i;7362:29::-;296:4515;7424:10;:5;;;;;:::i;:::-;;:7;;296:4515;;;;7424:10;296:4515;7405:29;7411:9;:5;;;:::i;:::-;:9;:::i;7405:29::-;296:4515;;7158:10;;;;;"},"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[])":"c32e370e","verifyTx(((uint256,uint256),(uint256[2],uint256[2]),(uint256,uint256)),uint256[])":"c9417647"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VerifyingKeyChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[]\",\"name\":\"input\",\"type\":\"uint256[]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"x\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Groth16Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"input\",\"type\":\"uint256[]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Basic Groth16 verifier contract for ZK proof verification This is a simplified implementation for development/testing purposes In production, this would be generated from the actual circuit\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Groth16Verifier\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Groth16Verifier.sol\":\"Groth16Verifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Groth16Verifier.sol\":{\"keccak256\":\"0xf12cebd51a2e197f8e973487233c5f327ff570789c70522a2024de67486ec0dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f73abeb079a6e7b7343e4ff3852409af7e304099980ab09defb10743573ddb8\",\"dweb:/ipfs/QmQgCZGit8RxQ1uJocb14c3nNse1H6oDQtweG2n1utSgUb\"]}},\"version\":1}"},"Pairing":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e4440a0a5edc1cc34d8c107d799f62d05dbcd7c980406e9a2a7212123d4d7de364736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PREVRANDAO EXP EXP MCOPY 0xDC SHR 0xC3 0x4D DUP13 LT PUSH30 0x799F62D05DBCD7C980406E9A2A7212123D4D7DE364736F6C634300081800 CALLER ","sourceMap":"4813:2904:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220e4440a0a5edc1cc34d8c107d799f62d05dbcd7c980406e9a2a7212123d4d7de364736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PREVRANDAO EXP EXP MCOPY 0xDC SHR 0xC3 0x4D DUP13 LT PUSH30 0x799F62D05DBCD7C980406E9A2A7212123D4D7DE364736F6C634300081800 CALLER ","sourceMap":"4813:2904:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Groth16Verifier.sol\":\"Pairing\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Groth16Verifier.sol\":{\"keccak256\":\"0xf12cebd51a2e197f8e973487233c5f327ff570789c70522a2024de67486ec0dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f73abeb079a6e7b7343e4ff3852409af7e304099980ab09defb10743573ddb8\",\"dweb:/ipfs/QmQgCZGit8RxQ1uJocb14c3nNse1H6oDQtweG2n1utSgUb\"]}},\"version\":1}"}},"contracts/NovaProofAggregator.sol":{"NovaProofAggregator":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinator","type":"address"},{"internalType":"address","name":"functionsRouter","type":"address"},{"internalType":"uint256","name":"vrfSubscriptionId","type":"uint256"},{"internalType":"bytes32","name":"vrfKeyHash","type":"bytes32"},{"internalType":"uint64","name":"functionsSubscriptionId","type":"uint64"},{"internalType":"bytes32","name":"functionsDonId","type":"bytes32"},{"internalType":"address","name":"groth16VerifierAddress","type":"address"},{"internalType":"address","name":"_novaVerifier","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EmptyArgs","type":"error"},{"inputs":[],"name":"EmptySource","type":"error"},{"inputs":[],"name":"NoInlineSecrets","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"coordinator","type":"address"}],"name":"OnlyOwnerOrCoordinator","type":"error"},{"inputs":[],"name":"OnlyRouterCanFulfill","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"error","type":"bytes"}],"name":"FunctionsRequestError","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"string","name":"sourceChain","type":"string"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"FunctionsRequestSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"proof","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"publicInputs","type":"bytes"}],"name":"FunctionsResponseReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"aggregatedHash","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"}],"name":"NovaFoldingCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"proofIds","type":"uint256[]"},{"indexed":true,"internalType":"address","name":"requester","type":"address"}],"name":"NovaFoldingStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"ProofRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"},{"indexed":false,"internalType":"bytes32","name":"stateRoot","type":"bytes32"}],"name":"ProofVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"randomValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"selectedBlock","type":"uint256"}],"name":"RandomnessReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"recursionDepth","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"recursiveProof","type":"bytes"}],"name":"RecursiveProofGenerated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestSent","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"proofs","type":"bytes[]"},{"internalType":"bytes[]","name":"publicInputsArray","type":"bytes[]"}],"name":"aggregateProofs","outputs":[{"internalType":"bytes32","name":"aggregatedHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"aggregatedProofHashes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedCallers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"batchCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"batchId","type":"uint256"}],"name":"continueRecursiveFolding","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"contractOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"functionsRequestToProofId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"batchId","type":"uint256"}],"name":"getFoldedInstance","outputs":[{"components":[{"internalType":"uint256","name":"stepIn","type":"uint256"},{"internalType":"uint256","name":"stepOut","type":"uint256"},{"internalType":"uint256","name":"programCounter","type":"uint256"},{"internalType":"bytes32","name":"stateRootIn","type":"bytes32"},{"internalType":"bytes32","name":"stateRootOut","type":"bytes32"},{"internalType":"bytes32","name":"nullifierHash","type":"bytes32"},{"internalType":"bool","name":"isValid","type":"bool"}],"internalType":"struct NovaProofAggregator.NovaInstance","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"getProofRequest","outputs":[{"components":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"sourceChain","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"},{"internalType":"bool","name":"isCompleted","type":"bool"},{"internalType":"bool","name":"isValid","type":"bool"}],"internalType":"struct ZKProofAggregator.ProofRequest","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"batchId","type":"uint256"}],"name":"getRecursiveProofBatch","outputs":[{"internalType":"uint256[]","name":"proofIds","type":"uint256[]"},{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"recursionDepth","type":"uint256"},{"internalType":"bytes32","name":"aggregatedHash","type":"bytes32"},{"internalType":"bool","name":"isCompleted","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSubscriptionId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"groth16Verifier","outputs":[{"internalType":"contract Groth16Verifier","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"}],"name":"handleOracleFulfillment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"stateRoot","type":"bytes32"}],"name":"isStateVerified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastUpkeepTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxProofsPerBatch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxRecursionDepth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minProofsPerBatch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"novaVerifier","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proofRequests","outputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"sourceChain","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"},{"internalType":"bool","name":"isCompleted","type":"bool"},{"internalType":"bool","name":"isValid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proofToBatch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"recursiveProofBatches","outputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"recursionDepth","type":"uint256"},{"internalType":"bytes32","name":"aggregatedHash","type":"bytes32"},{"components":[{"internalType":"uint256","name":"stepIn","type":"uint256"},{"internalType":"uint256","name":"stepOut","type":"uint256"},{"internalType":"uint256","name":"programCounter","type":"uint256"},{"internalType":"bytes32","name":"stateRootIn","type":"bytes32"},{"internalType":"bytes32","name":"stateRootOut","type":"bytes32"},{"internalType":"bytes32","name":"nullifierHash","type":"bytes32"},{"internalType":"bool","name":"isValid","type":"bool"}],"internalType":"struct NovaProofAggregator.NovaInstance","name":"foldedInstance","type":"tuple"},{"internalType":"bool","name":"isCompleted","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"requestCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"sourceChain","type":"string"},{"internalType":"uint256","name":"targetBlockNumber","type":"uint256"}],"name":"requestProofVerification","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_vrfCoordinator","outputs":[{"internalType":"contract IVRFCoordinatorV2Plus","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"bool","name":"authorized","type":"bool"}],"name":"setAuthorizedCaller","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"gasLimit","type":"uint32"},{"internalType":"bytes32","name":"donId","type":"bytes32"}],"name":"setFunctionsConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"source","type":"string"}],"name":"setFunctionsSource","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"url","type":"string"}],"name":"setProofServiceUrl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newInterval","type":"uint256"}],"name":"setUpkeepInterval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subscriptionId","type":"uint256"},{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"name":"setVRFConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"proofIds","type":"uint256[]"}],"name":"startNovaFolding","outputs":[{"internalType":"uint256","name":"batchId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxRecursionDepth","type":"uint256"},{"internalType":"uint256","name":"_minProofsPerBatch","type":"uint256"},{"internalType":"uint256","name":"_maxProofsPerBatch","type":"uint256"}],"name":"updateRecursionParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"upkeepInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"usedNullifiers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"usedProofHashes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"verifiedProofs","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"batchId","type":"uint256"},{"internalType":"bytes","name":"proof","type":"bytes"}],"name":"verifyNovaProof","outputs":[{"internalType":"bool","name":"isValid","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":537,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60c034620001fe57601f6200542f38819003918201601f1916830192916001600160401b0391828511848610176200020357816101009285926040978852833981010312620001fe57620000538262000219565b90620000626020840162000219565b928481015190606081015160808201519384168403620001fe5760a0820151906200009e60e06200009660c0860162000219565b940162000219565b943315620001ba57600080546001600160a01b03199081163317909155976001600160a01b039788168015620001a95791888096959492740493e00000000000000000000000010003002625a0948c600254161760025516608052610e10600755600a549160ff1997600889600e541617600e556008556009556a0100000000000000000000600160901b039060501b169060018060b01b0319161717600a55600b551660a052336000526012602052600185600020918254161790553383601354161760135542600655601060185560026019556008601a551690601b541617601b555161520090816200022f823960805181818161049c01526142b3015260a051816108710152f35b8a5163d92e233d60e01b8152600490fd5b885162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001fe5756fe6080604052600436101561001257600080fd5b60003560e01c80630ca76175146102e25780631098241b146102dd57806310a14c40146102d8578063152a9526146102d3578063176d80c41461023357806319c813be146102ce5780631bd6447a146102c95780631fe543e3146102c4578063206137aa146102bf5780632091f938146102ba578063223b6637146102b557806325825746146102b057806328606775146102ab57806336e0025f146102a657806339a9e4b3146102a15780633f5ef0de1461029c578063454bbd2914610297578063457b2e41146102925780634585e33b1461028d578063536fff6c14610288578063569593321461028357806357aabcac1461027e57806357efe032146102795780635a74373c14610274578063624cffd41461026f57806362625bc11461026a57806368233eef14610265578063683dd777146102605780636e04ff0d1461025b57806372e4c9f61461025657806379ba50971461025157806384a088e51461024c5780638da5cb5b146102475780638ea9811714610242578063973a814e1461023d5780639eccacf614610238578063a9431f2314610233578063b5cce1331461022e578063ce606ee014610229578063d175d81a14610224578063d87318b21461021f578063de3d9fb71461021a578063e2ecf1e214610215578063f2fde38b146102105763fa0c7a181461020b57600080fd5b611d91565b611c4d565b611c2f565b611c11565b611be0565b611b20565b611af7565b611aa1565b61082a565b611a78565b611a5a565b6119e5565b6119bc565b6118f9565b6117c9565b61179b565b61174e565b611662565b611644565b6115aa565b611575565b611557565b611458565b61143a565b61140e565b6113cf565b611320565b6112b9565b611258565b611183565b61113f565b611025565b610ffc565b610f83565b610c2c565b610ae5565b610ab4565b61096b565b6108b3565b61085b565b61075d565b610685565b610575565b61044c565b634e487b7160e01b600052604160045260246000fd5b60e081019081106001600160401b0382111761031857604052565b6102e7565b604081019081106001600160401b0382111761031857604052565b602081019081106001600160401b0382111761031857604052565b60c081019081106001600160401b0382111761031857604052565b90601f801991011681019081106001600160401b0382111761031857604052565b6040519061039c826102fd565b565b6040519061039c82610338565b6040519061039c82610353565b60405190608082018281106001600160401b0382111761031857604052565b6001600160401b03811161031857601f01601f191660200190565b9291926103fe826103d7565b9161040c604051938461036e565b829481845281830111610429578281602093846000960137010152565b600080fd5b9080601f8301121561042957816020610449933591016103f2565b90565b34610429576060366003190112610429576001600160401b036004356024358281116104295761048090369060040161042e565b916044359081116104295761049990369060040161042e565b917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361053957600092828452600460205260408420549161271083116000146105295761270f198301928311610524576104fd92613b43565b7f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e68280a280f35b611f9b565b61053492508361383c565b6104fd565b60405163c6829f8360e01b8152600490fd5b602060031982011261042957600435906001600160401b038211610429576104499160040161042e565b34610429576105833661054b565b61059860018060a01b03601354163314611e1b565b80516001600160401b038111610318576105bc816105b7600d54610cee565b611e6b565b602080601f83116001146105fe575081906105ee936000926105f3575b50508160011b916000199060031b1c19161790565b600d55005b0151905038806105d9565b90601f19831693610631600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb590565b926000905b86821061066d5750508360019510610654575b505050811b01600d55005b015160001960f88460031b161c19169055388080610649565b80600185968294968601518155019501930190610636565b346104295760203660031901126104295760043560005260166020526020604060002054604051908152f35b60005b8381106106c45750506000910152565b81810151838201526020016106b4565b906020916106ed815180928185528580860191016106b1565b601f01601f1916010190565b6020815260018060a01b0382511660208201526020820151604082015260e060c061073360408501518360608601526101008501906106d4565b9360608101516080850152608081015160a085015260a08101511515828501520151151591015290565b346104295760203660031901126104295761082660408060c08151610781816102fd565b60009181838093528260208201526060858201528260608201528260808201528260a0820152015260043581526003602052209061081c60ff60058351946107c8866102fd565b80546001600160a01b03168652600181015460208701526107eb60028201610f21565b8686015260038101546060870152600481015460808701520154818116151560a086015260081c16151560c0840152565b51918291826106f9565b0390f35b3461042957602036600319011261042957600435600052600f602052602060ff604060002054166040519015158152f35b34610429576000366003190112610429576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b6024359063ffffffff8216820361042957565b34610429576060366003190112610429576004356001600160401b0381168103610429576108df6108a0565b6108f460018060a01b03601354163314611e1b565b600a80546bffffffffffffffffffffffff60501b191660509390931b67ffffffffffffffff60501b169290921760909190911b63ffffffff60901b16179055604435600b55005b9181601f84011215610429578235916001600160401b038311610429576020808501948460051b01011161042957565b34610429576040366003190112610429576004356024356001600160401b0381116104295761099e90369060040161093b565b600254919290916001600160a01b031633819003610a965750806000526004602052604060002054908115610a5b576103e71943014381116105245784610a43610a227f2374d5481494ad7962d4bd1b98b91e9f3117c9b66533b2804be3d76c41a4908893610a1c610a1389610a599b612cba565b356103e8900690565b90612cfc565b958692836003610a3c896000526003602052604060002090565b0155612cba565b60408051913582526020820192909252a2612f86565b005b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a5908159491881c995c5d595cdd606a1b6044820152606490fd5b6044906040519063073e64fd60e21b82523360048301526024820152fd5b34610429576020366003190112610429576004356000526015602052602060ff604060002054166040519015158152f35b34610429576060366003190112610429576004356024359060443590610b1660018060a01b03601354163314611e1b565b80151580610bcc575b15610b9357600283101580610b89575b15610b4e57610a5992610b44610b4992601855565b601955565b601a55565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642062617463682073697a657360681b6044820152606490fd5b5081831115610b2f565b60405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840dac2f040c8cae0e8d607b1b6044820152606490fd5b506020811115610b1f565b90604051610be4816102fd565b60c060ff600683958054855260018101546020860152600281015460408601526003810154606086015260048101546080860152600581015460a08601520154161515910152565b34610429576020366003190112610429576004356000526014602052610180604060002060018060a01b0360018201541690610ce4600282015491600381015460048201549060ff600c610c8260058601610bd7565b9401541694604051968752602087015260408601526060850152608084019060c08091805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015201511515910152565b1515610160820152f35b90600182811c92168015610d1e575b6020831014610d0857565b634e487b7160e01b600052602260045260246000fd5b91607f1691610cfd565b805460009392610d3782610cee565b91828252602093600191600181169081600014610d9f5750600114610d5e575b5050505050565b90939495506000929192528360002092846000945b838610610d8b57505050500101903880808080610d57565b805485870183015294019385908201610d73565b60ff19168685015250505090151560051b010191503880808080610d57565b60405190600082600c5491610dd283610cee565b80835292602090600190818116908115610e5e5750600114610dfd575b505061039c9250038361036e565b915092600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7936000925b828410610e46575061039c9450505081016020013880610def565b85548885018301529485019487945092810192610e2b565b9150506020925061039c94915060ff191682840152151560051b8201013880610def565b60405190600082600d5491610e9683610cee565b80835292602090600190818116908115610e5e5750600114610ec057505061039c9250038361036e565b915092600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5936000925b828410610f09575061039c9450505081016020013880610def565b85548885018301529485019487945092810192610eee565b9061039c610f359260405193848092610d28565b038361036e565b959260c09592610f6a929998959960018060a01b03168852602088015260e0604088015260e08701906106d4565b9660608601526080850152151560a08401521515910152565b34610429576020366003190112610429576004356000526003602052604060002060018060a01b038154169061082660018201549160405193610fd485610fcd8160028601610d28565b038661036e565b600382015491600560048201549101549260405196879660ff808760081c1696169488610f3c565b3461042957600036600319011261042957601b546040516001600160a01b039091168152602090f35b34610429576110333661054b565b61104860018060a01b03601354163314611e1b565b80516001600160401b0381116103185761106c81611067600c54610cee565b611ecc565b602080601f83116001146110a25750819061109d936000926105f35750508160011b916000199060031b1c19161790565b600c55005b90601f198316936110d5600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790565b926000905b86821061111157505083600195106110f8575b505050811b01600c55005b015160001960f88460031b161c191690553880806110ed565b806001859682949686015181550195019301906110da565b634e487b7160e01b600052603260045260246000fd5b34610429576040366003190112610429576024356000906004358252601060205260408220805482101561117f5782526020918290200154604051908152f35b8280fd5b34610429576040366003190112610429576004356024356001600160401b038111610429576111b690369060040161042e565b9080151580611236575b6111c990611f5c565b6000526014602052604060002060ff600c82015416156111fb5781516020928301206004919091015460405191148152f35b60405162461bcd60e51b815260206004820152601360248201527210985d18da081b9bdd0818dbdb5c1b195d1959606a1b6044820152606490fd5b506017548111156111c0565b600435906001600160a01b038216820361042957565b3461042957604036600319011261042957611271611242565b602435801515810361042957601354610a59926001600160a01b039161129a9083163314611e1b565b16600052601260205260406000209060ff801983541691151516179055565b34610429576000366003190112610429576020601854604051908152f35b906020600319830112610429576004356001600160401b039283821161042957806023830112156104295781600401359384116104295760248483010111610429576024019190565b346104295761132e366112d7565b50506006544203428111610524576113499060075410611fdc565b61135242600655565b60408051632bf7f01960e11b815260048101919091526008604482015267657468657265756d60c01b606482015260006024820152602081806084810103816000305af180156113ca576113a257005b610a599060203d6020116113c3575b6113bb818361036e565b81019061201c565b503d6113b1565b61202b565b34610429576020366003190112610429576001600160a01b036113f0611242565b166000526012602052602060ff604060002054166040519015158152f35b346104295760203660031901126104295760043560005260046020526020604060002054604051908152f35b34610429576000366003190112610429576020601a54604051908152f35b34610429576040366003190112610429576004356001600160401b0381116104295761148b61082691369060040161042e565b6024356114f161149c600554612037565b926114a684600555565b6114ae61038f565b33815290426020830152604082015282606082015260006080820152600060a0820152600060c08201526114ec846000526003602052604060002090565b612046565b80611548576114ff826131a3565b817f7ef8ca77fdc89c79f093f2a6b2348b1fcda0beb941ce31ce9f2d9d260c4db9d2604051806115353395829190602083019252565b0390a36040519081529081906020820190565b6115528183612f86565b6114ff565b34610429576000366003190112610429576020600754604051908152f35b34610429576000366003190112610429576020600654604051908152f35b6001600160401b0381116103185760051b60200190565b3461042957602080600319360112610429576004356001600160401b0381116104295736602382011215610429578060040135906115e782611593565b916115f5604051938461036e565b8083526024602084019160051b8301019136831161042957602401905b828210611635576108266116258561248e565b6040519081529081906020820190565b81358152908401908401611612565b34610429576000366003190112610429576020601754604051908152f35b346104295760203660031901126104295760043580151580611742575b61168890611f5c565b6000818152601460205260409020600101546001600160a01b0316330361170757806117026116c4610a59936000526014602052604060002090565b6003600c8201916116de6116d9845460ff1690565b61274e565b016116f681546116f1601854821061279a565b612037565b9055805460ff19169055565b613285565b60405162461bcd60e51b81526020600482015260136024820152722737ba103130ba31b4103932b8bab2b9ba32b960691b6044820152606490fd5b5060175481111561167f565b346104295761175c366112d7565b5050600654420342811161052457600754106040519061177b82610338565b6000825261082660405192839283526040602084015260408301906106d4565b34610429576020366003190112610429576117c160018060a01b03601354163314611e1b565b600435600755005b3461042957600080600319360112611885576001546001600160a01b0390811633036118475781546001600160a01b0316600080546001600160a01b0319163317905590600180546001600160a01b03191690553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fd5b80fd5b90815180825260208080930193019160005b8281106118a8575050505090565b83518552938101939281019260010161189a565b94919695926118d660a0959260c0885260c0880190611888565b97600180871b031660208701526040860152606085015260808401521515910152565b346104295760208060031936011261042957600435801515806119b0575b61192090611f5c565b60005260146020526040600020906001808060a01b03600184015416916002840154600385015460048601549160ff600c8801541693604051958660208a549182815201996000526020600020926000905b82821061199b57505050505061198f85610826969798038761036e565b604051968796876118bc565b84548c529a8b019a9383019390830190611972565b50601754811115611917565b34610429576000366003190112610429576000546040516001600160a01b039091168152602090f35b34610429576020366003190112610429576119fe611242565b6000546001600160a01b03908116903382141580611a4c575b611a2457610a59836127f9565b60649250600254166040519163061db9c160e01b835233600484015260248301526044820152fd5b508060025416331415611a17565b34610429576000366003190112610429576020600554604051908152f35b34610429576000366003190112610429576002546040516001600160a01b039091168152602090f35b346104295760603660031901126104295760443563ffffffff811680910361042957611ad860018060a01b03601354163314611e1b565b60043560085560243560095563ffffffff19600a541617600a55600080f35b34610429576000366003190112610429576013546040516001600160a01b039091168152602090f35b34610429576040366003190112610429576001600160401b0360043581811161042957611b5190369060040161093b565b9160243590811161042957611b6a90369060040161093b565b9033600052601260205260ff604060002054168015611bcc575b15611b96576108269361162593612aed565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b506013546001600160a01b03163314611b84565b34610429576020366003190112610429576004356000526011602052602060ff604060002054166040519015158152f35b34610429576000366003190112610429576020600854604051908152f35b34610429576000366003190112610429576020601954604051908152f35b3461042957602036600319011261042957611c66611242565b6000546001600160a01b039081169133839003611d04571690338214611cbf57600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278600080a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b61039c9092919260e081019360c08091805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015201511515910152565b3461042957602036600319011261042957610826611e036005604060c06004358251611dbc816102fd565b600092818480935282602082015282868201528260608201528260808201528260a0820152015280151580611e0f575b611df590611f5c565b815260146020522001610bd7565b60405191829182611d42565b50601754811115611dec565b15611e2257565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b6044820152606490fd5b818110611e5f575050565b60008155600101611e54565b90601f8211611e78575050565b61039c91600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5906020601f840160051c83019310611ec2575b601f0160051c0190611e54565b9091508190611eb5565b90601f8211611ed9575050565b61039c91600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7906020601f840160051c83019310611ec257601f0160051c0190611e54565b9190601f8111611f3157505050565b61039c926000526020600020906020601f840160051c83019310611ec257601f0160051c0190611e54565b15611f6357565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590818985d18da08125160821b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60001981019190821161052457565b601f1981019190821161052457565b9190820391821161052457565b15611fe357565b60405162461bcd60e51b8152602060048201526011602482015270155c1ad9595c081b9bdd081b9959591959607a1b6044820152606490fd5b90816020910312610429575190565b6040513d6000823e3d90fd5b60001981146105245760010190565b815181546001600160a01b0319166001600160a01b0391909116178155600160209060208401516001840155600283019160408501518051926001600160401b038411610318576120a18461209b8754610cee565b87611f22565b602092601f851160011461213957505093612123936120e18460c09560059561039c9a996000926105f35750508160011b916000199060031b1c19161790565b90555b6060850151600382015560808501516004820155019261211c61210a60a0830151151590565b859060ff801983541691151516179055565b0151151590565b815461ff00191690151560081b61ff0016179055565b929190601f1985169061215187600052602060002090565b946000915b8383106121a1575050508460059461039c999894612123989460c09860019510612188575b505050811b0190556120e4565b015160001960f88460031b161c1916905538808061217b565b848601518755958601959481019491810191612156565b156121bf57565b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c1c9bdbd98818dbdd5b9d606a1b6044820152606490fd5b8051156122075760200190565b611129565b8051600110156122075760400190565b8051600210156122075760600190565b8051600310156122075760800190565b8051600410156122075760a00190565b80518210156122075760209160051b010190565b1561226757565b60405162461bcd60e51b8152602060048201526013602482015272141c9bdbd9881b9bdd0818dbdb5c1b195d1959606a1b6044820152606490fd5b156122a957565b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b6044820152606490fd5b156122e557565b60405162461bcd60e51b81526020600482015260166024820152750a0e4dedecc40c2d8e4cac2c8f240d2dc40c4c2e8c6d60531b6044820152606490fd5b908160011b918083046002149015171561052457565b8151916001600160401b03831161031857600160401b8311610318578154838355808410612395575b5060208091019160005260206000209060005b848110612383575050505050565b83518382015592810192600101612375565b6123ad90836000528460206000209182019101611e54565b38612362565b92908352602091602084015260409260009382546123d081610cee565b9360019180831690811561243457506001146123f0575b50505050505090565b909192939496955060005260206000206000905b8582106124215750505050604092935001013880808080806123e7565b8054858301850152908701908201612404565b949650505050506040935060ff1916838301528015150201013880808080806123e7565b9060005b6004811061246957505050565b60019060208351930192818501550161245c565b906020610449928181520190611888565b6124a681516019548110159081612741575b506121b8565b60005b815181101561253a5760019061250c61250760056124ef6124ea826124e26124d1888b61224c565b516000526003602052604060002090565b015460ff1690565b612260565b6124fc6124d1858861224c565b015460081c60ff1690565b6122a2565b61253461252d61251c838661224c565b516000526016602052604060002090565b54156122de565b016124a9565b50612546601754612037565b9061255082601755565b612564826000526014602052604060002090565b61256e8282612339565b600181810180546001600160a01b031916331790559081600291426002820155600390600060038201556125a9600c820160ff198154169055565b600093600e600d83019201935b6125fe575b505050505050817f5d74f4c80f98633a9ce8e3f825e7019210bfb85159f33a7fceb58fa9cb8ca621604051806125f233958261247d565b0390a361044981613285565b865185101561273c57858561273561261783988b61224c565b518b61262d826000526016602052604060002090565b5560049081612646826000526003602052604060002090565b0154906127138761270d8b612665856000526003602052604060002090565b0154938b6126c08a85612682856000526003602052604060002090565b019861269f6126ad60409b8c5192839160209d8e840196876123b3565b03601f19810183528261036e565b5190209290600052602052604060002090565b556126c96103b8565b966126de826000526003602052604060002090565b015487528c6126f7826000526003602052604060002090565b0154858801526000526003602052604060002090565b01610f21565b8051910120908201524260608201526000838152602089905260409020612458565b01946125b6565b6125bb565b9050601a541015386124a0565b1561275557565b60405162461bcd60e51b815260206004820152601e60248201527f50726576696f757320666f6c64696e67206e6f7420636f6d706c6574656400006044820152606490fd5b156127a157565b60405162461bcd60e51b815260206004820152601b60248201527f4d617820726563757273696f6e206465707468207265616368656400000000006044820152606490fd5b604051906127f382610338565b60008252565b6001600160a01b0316801561284e576020817fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1565b60405163d92e233d60e01b8152600490fd5b1561286757565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420696e7075742061727261797360601b6044820152606490fd5b156128aa57565b60405162461bcd60e51b815260206004820152601c60248201527f546f6f206d616e792070726f6f667320746f20616767726567617465000000006044820152606490fd5b906128f982611593565b612906604051918261036e565b8281528092612917601f1991611593565b0190602036910137565b91908110156122075760051b81013590601e19813603018212156104295701908135916001600160401b038311610429576020018236038113610429579190565b1561296957565b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642070726f6f6620696e206167677265676174696f6e000000006044820152606490fd5b908092918237016000815290565b156129c357565b60405162461bcd60e51b815260206004820152602160248201527f50726f6f6620616c7265616479207573656420696e206167677265676174696f6044820152603760f91b6064820152608490fd5b9193929093845160208096019060005b818110612a4c57505050825260601b6bffffffffffffffffffffffff191660208201526034019150565b825186529487019491870191600101612a22565b8151916001600160401b03831161031857600160401b8311610318578154838355808410612ac2575b50612a9e602080920192600052602060002090565b9060005b848110612ab0575050505050565b83518382015592810192600101612aa2565b60008360005284602060002092830192015b828110612ae2575050612a89565b818155600101612ad4565b9192909281841480612cb1575b612b0390612860565b612b10600a8511156128a3565b612b19846128ef565b9360005b818110612bdb5750505050506040516020810190612b418161269f33428787612a12565b51902090612b76612b53600554612037565b91612b5d83600555565b612b71836000526010602052604060002090565b612a60565b612b9a612b8d83600052600f602052604060002090565b805460ff19166001179055565b7f6dd2118914ad2b9a98780fafd92846eebe9361998a810f1a05f67033b17e2cdd60405180612bd58582919060206040840193600181520152565b0390a290565b80612c20612c1b612c15612bf2600195878b612921565b612c0d612c03878c8c969596612921565b94909236916103f2565b9236916103f2565b906136bd565b612962565b612cab612b8d612c5f612c59612c3785888c612921565b929061269f612c47888d8d612921565b604051958694602086019889916129ae565b916129ae565b519020612c8f612c8a612c86612c7f846000526011602052604060002090565b5460ff1690565b1590565b6129bc565b80612c9a858c61224c565b526000526011602052604060002090565b01612b1d565b50831515612afa565b90156122075790565b906001820180921161052457565b603001908160301161052457565b90612710820180921161052457565b906020820180921161052457565b9190820180921161052457565b6040519061016082018281106001600160401b038211176103185760405261013182527072696e6769667928726573756c7429293b60781b610140837f636f6e737420636861696e49643d7061727365496e7428617267735b305d293b60208201527f636f6e737420626c6f636b4e756d626572733d4a534f4e2e706172736528617260408201527f67735b315d293b636f6e737420726573756c743d7b737563636573733a74727560608201527f652c636861696e49642c626c6f636b4e756d626572732c76616c69646974794860808201527f6173683a2730783132333435363738393061626364656631323334353637383960a08201527f306162636465663132333435363738393061626364656631323334353637383960c08201527f30616263646566272c6d657461646174613a7b74696d657374616d703a4d617460e08201527f682e666c6f6f7228446174652e6e6f7728292f31303030297d7d3b72657475726101008201527f6e2046756e6374696f6e732e656e636f6465537472696e67284a534f4e2e73746101208201520152565b60405190612eae826102fd565b606060c08360008152600060208201526000604082015282808201528260808201528260a08201520152565b60405190612ee782610353565b600582528160005b60a08110612efb575050565b806060602080938501015201612eef565b60405190608082018281106001600160401b038211176103185760405260038252819060005b606080821015612f4c579060209182828701015201612f32565b5050909150565b90612f66602092828151948592016106b1565b0190565b929190612f81602091604086526040860190610d28565b930152565b907f89652d00e157965d54f5ad31af9352416c4e90b879711ec122680d4e3a1de9a690612fbd836000526003602052604060002090565b612fc5610dbe565b805115613135575b6130e761310b91612fe6612fdf612ea1565b918261470c565b6130e26002612ff3612eda565b95019461300f61300a61300588610f21565b613cf1565b613e9e565b613018826121fa565b52613022816121fa565b5061305661306361303289613e9e565b61269f60405193849261305060208501600190605b60f81b81520190565b90612f53565b605d60f81b815260010190565b61306c8261220c565b526130768161220c565b5061308f61300a613089600e5460ff1690565b60ff1690565b6130988261221c565b526130a28161221c565b506130ac46613e9e565b6130b58261222c565b526130bf8161222c565b506130c8610e82565b6130d18261223c565b526130db8161223c565b5082613f3e565b61408d565b600a54600b54916001600160401b0363ffffffff8360901c169260501c169061425b565b93613120856000526004602052604060002090565b5561313060405192839283612f6a565b0390a2565b5061310b6130e7613144612d09565b915050612fcd565b60e060a06104499360208452805160208501526020810151604085015261ffff6040820151166060850152606081015163ffffffff80911660808601526080820151168285015201519160c08082015201906106d4565b60025460009060209061323c906001600160a01b031660095460085461321b600a5463ffffffff906131de6131d661039e565b8a8152614335565b936131e76103ab565b9586528886015280881c61ffff16604086015263ffffffff81831616606086015260301c16608084019063ffffffff169052565b60a0820152604051948580948193634d8e1c2f60e11b83526004830161314c565b03925af180156113ca5761326391600091613266575b506000526004602052604060002090565b55565b61327f915060203d6020116113c3576113bb818361036e565b38613252565b806000526014602052604060002060405190602082017f636f6e73742062617463684964203d207061727365496e7428617267735b305d90526040820161293b60f01b9052816042810161330b906025907f636f6e73742070726f6f66436f756e74203d207061727365496e7428617267738152645b315d293b60d81b60208201520190565b7f636f6e73742073746570496e203d207061727365496e7428617267735b325d298152603b60f81b60208201526021017f2f2f2047656e6572617465204e6f7661207265637572736976652070726f6f66815275202d2073696d706c696669656420666f722064656d6f60501b60208201526036017f636f6e7374206167677265676174656448617368203d206574686572732e757481526d0d2d8e65cd6cac6c6c2d6646a6c560931b6020820152602e017f20206574686572732e7574696c732e64656661756c74416269436f6465722e658152650dcc6dec8ca560d31b60208201526026017f202020205b2775696e74323536272c202775696e74323536272c202775696e748152650c8d4d89d74b60d21b60208201526026017f202020205b626174636849642c2070726f6f66436f756e742c2073746570496e8152605d60f81b60208201526021016220202960e81b815260030161293b60f01b81526002017f636f6e737420666f6c646564496e7374616e6365203d207b000000000000000081526018017008081cdd195c125b8e881cdd195c125b8b607a1b81526011017508081cdd195c13dd5d0e881cdd195c125b880ac80c4b60521b81526016017f202070726f6772616d436f756e7465723a20446174652e6e6f7728292c0000008152601d017f20207374617465526f6f74496e3a2061676772656761746564486173682c00008152601e017f20207374617465526f6f744f75743a2061676772656761746564486173682c008152601f017f20206e756c6c6966696572486173683a206574686572732e7574696c732e6b6581527f6363616b323536286167677265676174656448617368292c000000000000000060208201526038016e2020697356616c69643a207472756560881b8152600f01617d3b60f01b81526002017f72657475726e2046756e6374696f6e732e656e636f6465537472696e67284a5381526d4f4e2e737472696e67696679287b60901b6020820152602e0172080818985d18da12590e8818985d18da12590b606a1b81526013017f202061676772656761746564486173683a2061676772656761746564486173688152600b60fa1b60208201526021017f2020666f6c646564496e7374616e63653a20666f6c646564496e7374616e63658152600b60fa1b60208201526021017f202072656375727369766550726f6f663a2061676772656761746564486173688152602001637d29293b60e01b815260040103601f19810183526136ac908361036e565b805490600301549161039c9361436e565b51159081156136d6575b506136d157600190565b600090565b90505115386136c7565b156136e757565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c69642046756e6374696f6e732072657175657374000000000000006044820152606490fd5b9060206104499281815201906106d4565b6040519061374a8261031d565b60078252667375636365737360c81b6020830152565b6040519061376d8261031d565b600c82526b3430b9a932b0b6283937b7b360a11b6020830152565b604051906137958261031d565b600c82526b0ecc2d8d2c8d2e8f290c2e6d60a31b6020830152565b60209291906137c68492828151948592016106b1565b019081520190565b604051906137db8261031d565b6005825264383937b7b360d91b6020830152565b604051906137fc8261031d565b600d82526c7075626c69635369676e616c7360981b6020830152565b61382c6020926040835260408301906106d4565b9082818303910152600081520190565b91613851836000526004602052604060002090565b549061385e8215156136e0565b8051613a4a57507f50348c1af87d1d2e61e0a7e9bf83a9c67f047d8de73be6b88acac8655a97581e916131309161389c61389661373d565b8361447c565b6138b0826000526003602052604060002090565b60058101805460ff19166001178155909115613a06577f6dd2118914ad2b9a98780fafd92846eebe9361998a810f1a05f67033b17e2cdd916138f96138f3613760565b8661447c565b156139f15761390f6139096137ce565b86614568565b61392061391a6137ef565b87614568565b81511515806139e7575b156139ab5761396a9261399b949261269f613955600494604051928391613050602084018097612f53565b51902093849361010061ff0019825416179055565b0155613983612b8d82600052600f602052604060002090565b60405191829182919060206040840193600181520152565b0390a25b60405191829182613818565b50506139df91600461396a926139c86139c2613788565b89614568565b6040516139558161269f60208201944290866137b0565b0390a261399f565b508051151561392a565b6139df91600461396a926139c86139c2613788565b805461ff0019169055507f6dd2118914ad2b9a98780fafd92846eebe9361998a810f1a05f67033b17e2cdd604051806139df81906000602060408401938281520152565b7f8117ad48db1a08344670d33acdeb14d7ec953b1119dafa9ab361e5e721d435629250613a976005613a89613130946000526003602052604060002090565b01805460ff19166001179055565b6040519182918261372c565b80546000918252602080832092905b828210613ac0575050505090565b835485529384019360019384019390910190613ab2565b600660c061039c93805184556020810151600185015560408101516002850155606081015160038501556080810151600485015560a081015160058501550151151591019060ff801983541691151516179055565b6040906104499392815281602082015201906106d4565b91908151613cbf577f788c5f43c02f6032d8146c17d8b085814337bacff42a64addf4f97ffcebdacff9150613b82836000526014602052604060002090565b837fe72448dee39249921f3f9c2134dc1ca195a9e3882d4b52e6c3e49c775a4a4311613cac8451602086012060048501908155613bc9600c8601600160ff19825416179055565b613c9460038601956005875491613bdf83612cc3565b6040516020810181613bf18286613aa3565b0391613c05601f199384810183528261036e565b5190208754600185015490928c91613c5291613c5e916001600160a01b0316604080516020810196875260609290921b6bffffffffffffffffffffffff1916908201529283906054820190565b0390810183528261036e565b51902092613c6a61038f565b96875260208701524260408701526060860152608085015260a0840152600160c084015201613ad7565b54604080519182526001602083015290918291820190565b0390a25461313060405192839283613b2c565b506131307f8117ad48db1a08344670d33acdeb14d7ec953b1119dafa9ab361e5e721d43562916040519182918261372c565b60409081519060209082613d088382018093612f53565b0392613d1c601f199485810183528261036e565b51902092805182810190613d4f81613d438460089067657468657265756d60c01b81520190565b0386810183528261036e565b5190208414613e5c57805167617262697472756d60c01b83820190815290613d7a8160088401613d43565b5190208414613e52578051676f7074696d69736d60c01b83820190815290613da58160088401613d43565b5190208414613e49578051636261736560e01b83820190815290613dcc8160048401613d43565b5190208414613e3f578051663837b63cb3b7b760c91b83820190815290613df68160078401613d43565b5190208414613e3657613e2390519182019282613c5285600990686176616c616e63686560b81b81520190565b51902014613e3057600190565b61a86a90565b50505050608990565b5050505061210590565b50505050600a90565b5050505061a4b190565b50505050600190565b90613e6f826103d7565b613e7c604051918261036e565b8281528092612917601f19916103d7565b908151811015612207570160200190565b8015613f20576000818181805b613f085750613eb981613e65565b935b613ec55750505090565b613ece90611fb1565b90600a90613ef3613ee3613089848406612cd1565b60f81b6001600160f81b03191690565b841a613eff8487613e8d565b53049081613ebb565b9150613f15600a91612037565b910480849291613eab565b50604051613f2d8161031d565b60018152600360fc1b602082015290565b815115613f4b5760a00152565b60405163fe936cb760e01b8152600490fd5b60405190613f6a8261031d565b600c82526b31b7b232a637b1b0ba34b7b760a11b6020830152565b634e487b7160e01b600052602160045260246000fd5b60031115613fa557565b613f85565b60405190613fb78261031d565b60088252676c616e677561676560c01b6020830152565b60011115613fa557565b60405190613fe58261031d565b6006825265736f7572636560d01b6020830152565b604051906140078261031d565b60048252636172677360e01b6020830152565b604051906140278261031d565b600f82526e39b2b1b932ba39a637b1b0ba34b7b760891b6020830152565b604051906140528261031d565b60078252667365637265747360c81b6020830152565b604051906140758261031d565b600982526862797465734172677360b81b6020830152565b61409561473d565b906140a76140a1613f5d565b8361478d565b6140c481516140b581613f9b565b6140be81613f9b565b8361484f565b6140cf6140a1613faa565b6140e960408201516140e081613fce565b6140be81613fce565b6140f46140a1613fd8565b61410260608201518361478d565b60a08101805151614202575b506080810190815151614182575b60c091500180515161412f575b50515190565b9161413b6140a1614068565b614144826148f0565b60005b8351805182101561416f57906141696141628260019461224c565b5185614a09565b01614147565b5050915061417c8161497c565b38614129565b60208101805161419181613f9b565b61419a81613f9b565b156141f05760c0926141d36141eb926141ba6141b461401a565b8861478d565b516141c481613f9b565b6141cd81613f9b565b8661484f565b6141e46141de614045565b8661478d565b5184614a09565b61411c565b60405163a80d31f760e01b8152600490fd5b9261421461420e613ffa565b8461478d565b61421d836148f0565b60005b84518051821015614248579061424261423b8260019461224c565b518661478d565b01614220565b505092506142558261497c565b3861410e565b92906020926001600160401b039263ffffffff61429a604051978896879663230e93b160e11b885216600487015260a0602487015260a48601906106d4565b60016044860152921660648401526084830152038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156113ca57600091614316575b50807f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db8600080a290565b61432f915060203d6020116113c3576113bb818361036e565b386142ec565b6040519063125fa26760e31b6020830152511515602482015260248152606081018181106001600160401b038211176103185760405290565b929091614379612ea1565b9280511561446a57836130e261441993614406613130966130e79560007f89652d00e157965d54f5ad31af9352416c4e90b879711ec122680d4e3a1de9a69a526000604087015260608601526143f36143d0612f0c565b936143da8c613e9e565b6143e3866121fa565b526143ed856121fa565b50613e9e565b6143fc8461220c565b526143ed8361220c565b61440f8261221c565b526130db8161221c565b9261442381612cdf565b614437856000526004602052604060002090565b5560405191829182919060408352600a6040840152690dcdeecc25ac4c2e8c6d60b31b6060840152602060808401930152565b6040516322ce3edd60e01b8152600490fd5b604051601160f91b602082015290916144b490829061269f906144a29060218401613050565b65223a7472756560d01b815260060190565b6000905b6144c58351825190611fcf565b82116145605760019260005b8251811015614556576144fe6144f06144ea8387612cfc565b84613e8d565b516001600160f81b03191690565b61451b61450e6144f08487613e8d565b6001600160f81b03191690565b6001600160f81b031990911603614534576001016144d1565b5092509060005b61454e5761454890612037565b906144b8565b505050600190565b509291909161453b565b505050600090565b916145ab61458e9261459d60405194859261305060208501600190601160f91b81520190565b62111d1160e91b815260030190565b03601f19810184528361036e565b6000905b6145bc8451845190611fcf565b82116147005760019260005b81518110156146f6576145e76144f06145e18387612cfc565b88613e8d565b6145f761450e6144f08486613e8d565b6001600160f81b031990911603614610576001016145c8565b5092509060005b61462b575b61462590612037565b906145af565b90614637835183612cfc565b92835b85518110806146d2575b156146575761465290612037565b61463a565b909392919280821161466a57505061461c565b9150925061468061467b8285611fcf565b613e65565b9160005b61468e8386611fcf565b8110156146c957826001826146b26144f06146ac61468e9686612cfc565b8b613e8d565b60001a6146bf8289613e8d565b5301915050614684565b50935050905090565b50601160f91b6001600160f81b03196146ee6144f0848a613e8d565b161415614644565b5092919091614617565b925050506104496127e6565b81511561446a576000808252604082015260600152565b604051906147308261031d565b6000602083606081520152565b6040516147498161031d565b614751614723565b8082526020820160008152614764614723565b506101006020830152604051809252600082526101208201918210610429576000916040525290565b81516147d19291906001600160401b03811690601782116147d4576147bc9150606060ff845192161790614ed7565b505b51906147c8614723565b50805191615107565b50565b5060ff81116147f9576147f3906147eb8351614cde565b508251615093565b506147be565b61ffff8111614818576147f3906148108351614c79565b508251615025565b63ffffffff8111614839576147f3906148318351614c14565b508251614fb5565b6147f3906148478351614ba4565b508251614f42565b9081519161485b614723565b5082515160018101908181116105245760208501518110156148b4575b60c2602061039c96519283010153805182116148ac575b5050604051916020830152602082526148a78261031d565b614a09565b52388061488f565b8160011b9482860460021483151715610524576020816148e661039c986148df60c295519184614a8d565b5082614adf565b5096505050614878565b8051906148fb614723565b508151516001810190818111610524576020840151811015614949575b609f6020809551928301015380518211614941575b505001805190600182018092116105245752565b52388061492d565b8160011b93828504600214831517156105245760208161497282976148df609f95519184614a8d565b5095505050614918565b805190614987614723565b5081515160018101908181116105245760208401518110156149d6575b60ff60208095519283010153805182116149ce575b50500180516000198101919082116105245752565b5238806149b9565b8160011b9382850460021483151715610524576020816149ff82976148df60ff95519184614a8d565b50955050506149a4565b81516147d19291906001600160401b0381169060178211614a38576147bc9150604060ff845192161790614ed7565b5060ff8111614a4f576147f3906147eb8351614e72565b61ffff8111614a66576147f3906148108351614e0d565b63ffffffff8111614a7f576147f3906148318351614da8565b6147f3906148478351614d43565b90614a96614723565b50601f811680614ac5575b50806020830152604051908183526000825281016020019081106104295760405290565b602003602081116105245781018091116105245738614aa1565b90614ae8614723565b50805190614af4614723565b50614b028151831115615100565b82515191614b108184612cfc565b60209260208601518211614b8d575b602091865183815197820101968211614b85575b505001915b80821015614b5d5750600019906020036101000a019081199051169082511617905290565b909192614b79614b73614b7f9286518152612cee565b94612cee565b92611fc0565b90614b38565b523880614b33565b614b9f614b9983612323565b876151b3565b614b1f565b614bac614723565b508051516001810190818111610524576020830151811015614be5575b607b60208451928301015380518211614be157505090565b5290565b8160011b8281046002148315171561052457614c0e90614c0785519186614a8d565b5084614adf565b50614bc9565b614c1c614723565b508051516001810190818111610524576020830151811015614c51575b607a60208451928301015380518211614be157505090565b8160011b8281046002148315171561052457614c7390614c0785519186614a8d565b50614c39565b614c81614723565b508051516001810190818111610524576020830151811015614cb6575b607960208451928301015380518211614be157505090565b8160011b8281046002148315171561052457614cd890614c0785519186614a8d565b50614c9e565b614ce6614723565b508051516001810190818111610524576020830151811015614d1b575b607860208451928301015380518211614be157505090565b8160011b8281046002148315171561052457614d3d90614c0785519186614a8d565b50614d03565b614d4b614723565b508051516001810190818111610524576020830151811015614d80575b605b60208451928301015380518211614be157505090565b8160011b8281046002148315171561052457614da290614c0785519186614a8d565b50614d68565b614db0614723565b508051516001810190818111610524576020830151811015614de5575b605a60208451928301015380518211614be157505090565b8160011b8281046002148315171561052457614e0790614c0785519186614a8d565b50614dcd565b614e15614723565b508051516001810190818111610524576020830151811015614e4a575b605960208451928301015380518211614be157505090565b8160011b8281046002148315171561052457614e6c90614c0785519186614a8d565b50614e32565b614e7a614723565b508051516001810190818111610524576020830151811015614eaf575b605860208451928301015380518211614be157505090565b8160011b8281046002148315171561052457614ed190614c0785519186614a8d565b50614e97565b90614ee0614723565b508151516001810191828211610524576020840151821015614f13575b60208451928301015380518211614be157505090565b8260011b8381046002148415171561052457614f3c90614f3586519187614a8d565b5085614adf565b50614efd565b90614f4b614723565b508151518060080191826008116105245760208401518311614f8d575b6008845192830101906001600160401b031982511617905280518211614be157505090565b8260011b8381046002148415171561052457614faf90614f3586519187614a8d565b50614f68565b90614fbe614723565b508151518060040191826004116105245760208401518311614ffd575b60048451928301019063ffffffff1982511617905280518211614be157505090565b8260011b838104600214841517156105245761501f90614f3586519187614a8d565b50614fdb565b9061502e614723565b50815151806002019182600211610524576020840151831161506b575b60028451928301019061ffff1982511617905280518211614be157505090565b8260011b838104600214841517156105245761508d90614f3586519187614a8d565b5061504b565b9061509c614723565b5081515180600101918260011161052457602084015183116150d8575b60018451928301019060ff1982511617905280518211614be157505090565b8260011b83810460021484151715610524576150fa90614f3586519187614a8d565b506150b9565b1561042957565b9190615111614723565b5061511f8151831115615100565b82515191602061512f8285612cfc565b92819382870151811161519c575b865183815197820101968211615194575b505001915b808210156151785750600019906020036101000a019081199051169082511617905290565b909192614b79614b7361518e9286518152612cee565b90615153565b52388061514e565b6151ae6151a882612323565b886151b3565b61513d565b906147d1916151c481519282614a8d565b50614adf56fea26469706673582212202b30b4423099191b53b0a1bed0e369e3fba230f16d9ac9a2271296b05005263f64736f6c63430008180033","opcodes":"PUSH1 0xC0 CALLVALUE PUSH3 0x1FE JUMPI PUSH1 0x1F PUSH3 0x542F CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP6 GT DUP5 DUP7 LT OR PUSH3 0x203 JUMPI DUP2 PUSH2 0x100 SWAP3 DUP6 SWAP3 PUSH1 0x40 SWAP8 DUP9 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x1FE JUMPI PUSH3 0x53 DUP3 PUSH3 0x219 JUMP JUMPDEST SWAP1 PUSH3 0x62 PUSH1 0x20 DUP5 ADD PUSH3 0x219 JUMP JUMPDEST SWAP3 DUP5 DUP2 ADD MLOAD SWAP1 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD SWAP4 DUP5 AND DUP5 SUB PUSH3 0x1FE JUMPI PUSH1 0xA0 DUP3 ADD MLOAD SWAP1 PUSH3 0x9E PUSH1 0xE0 PUSH3 0x96 PUSH1 0xC0 DUP7 ADD PUSH3 0x219 JUMP JUMPDEST SWAP5 ADD PUSH3 0x219 JUMP JUMPDEST SWAP5 CALLER ISZERO PUSH3 0x1BA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP1 ISZERO PUSH3 0x1A9 JUMPI SWAP2 DUP9 DUP1 SWAP7 SWAP6 SWAP5 SWAP3 PUSH21 0x493E00000000000000000000000010003002625A0 SWAP5 DUP13 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND PUSH1 0x80 MSTORE PUSH2 0xE10 PUSH1 0x7 SSTORE PUSH1 0xA SLOAD SWAP2 PUSH1 0xFF NOT SWAP8 PUSH1 0x8 DUP10 PUSH1 0xE SLOAD AND OR PUSH1 0xE SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH11 0x100000000000000000000 PUSH1 0x1 PUSH1 0x90 SHL SUB SWAP1 PUSH1 0x50 SHL AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xB0 SHL SUB NOT AND OR OR PUSH1 0xA SSTORE PUSH1 0xB SSTORE AND PUSH1 0xA0 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x1 DUP6 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 PUSH1 0x13 SLOAD AND OR PUSH1 0x13 SSTORE TIMESTAMP PUSH1 0x6 SSTORE PUSH1 0x10 PUSH1 0x18 SSTORE PUSH1 0x2 PUSH1 0x19 SSTORE PUSH1 0x8 PUSH1 0x1A SSTORE AND SWAP1 PUSH1 0x1B SLOAD AND OR PUSH1 0x1B SSTORE MLOAD PUSH2 0x5200 SWAP1 DUP2 PUSH3 0x22F DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x49C ADD MSTORE PUSH2 0x42B3 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x871 ADD MSTORE RETURN JUMPDEST DUP11 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x1FE JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA76175 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x1098241B EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x10A14C40 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x152A9526 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x176D80C4 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x19C813BE EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x1BD6447A EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x206137AA EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x2091F938 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x223B6637 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x25825746 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x28606775 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x36E0025F EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x39A9E4B3 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x3F5EF0DE EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x454BBD29 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x457B2E41 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x536FFF6C EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x56959332 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x57AABCAC EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x57EFE032 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x5A74373C EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x624CFFD4 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x62625BC1 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x68233EEF EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x683DD777 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x72E4C9F6 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x84A088E5 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x973A814E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xA9431F23 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xB5CCE133 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xD175D81A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xD87318B2 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xDE3D9FB7 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xE2ECF1E2 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x210 JUMPI PUSH4 0xFA0C7A18 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D91 JUMP JUMPDEST PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0x1C2F JUMP JUMPDEST PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x1B20 JUMP JUMPDEST PUSH2 0x1AF7 JUMP JUMPDEST PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0x19E5 JUMP JUMPDEST PUSH2 0x19BC JUMP JUMPDEST PUSH2 0x18F9 JUMP JUMPDEST PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x179B JUMP JUMPDEST PUSH2 0x174E JUMP JUMPDEST PUSH2 0x1662 JUMP JUMPDEST PUSH2 0x1644 JUMP JUMPDEST PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x1575 JUMP JUMPDEST PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x143A JUMP JUMPDEST PUSH2 0x140E JUMP JUMPDEST PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x113F JUMP JUMPDEST PUSH2 0x1025 JUMP JUMPDEST PUSH2 0xFFC JUMP JUMPDEST PUSH2 0xF83 JUMP JUMPDEST PUSH2 0xC2C JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x39C DUP3 PUSH2 0x2FD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x39C DUP3 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x39C DUP3 PUSH2 0x353 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x318 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x3FE DUP3 PUSH2 0x3D7 JUMP JUMPDEST SWAP2 PUSH2 0x40C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x36E JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x429 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x429 JUMPI DUP2 PUSH1 0x20 PUSH2 0x449 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x3F2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x480 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x42E JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x499 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x42E JUMP JUMPDEST SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x539 JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP2 PUSH2 0x2710 DUP4 GT PUSH1 0x0 EQ PUSH2 0x529 JUMPI PUSH2 0x270F NOT DUP4 ADD SWAP3 DUP4 GT PUSH2 0x524 JUMPI PUSH2 0x4FD SWAP3 PUSH2 0x3B43 JUMP JUMPDEST PUSH32 0x85E1543BF2F84FE80C6BADBCE3648C8539AD1DF4D2B3D822938CA0538BE727E6 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0x534 SWAP3 POP DUP4 PUSH2 0x383C JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC6829F83 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x429 JUMPI PUSH2 0x449 SWAP2 PUSH1 0x4 ADD PUSH2 0x42E JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x583 CALLDATASIZE PUSH2 0x54B JUMP JUMPDEST PUSH2 0x598 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x318 JUMPI PUSH2 0x5BC DUP2 PUSH2 0x5B7 PUSH1 0xD SLOAD PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x5FE JUMPI POP DUP2 SWAP1 PUSH2 0x5EE SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x5F3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5D9 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x631 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x66D JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x654 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x649 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x636 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6C4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6B4 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x6ED DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xC0 PUSH2 0x733 PUSH1 0x40 DUP6 ADD MLOAD DUP4 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x826 PUSH1 0x40 DUP1 PUSH1 0xC0 DUP2 MLOAD PUSH2 0x781 DUP2 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 DUP1 SWAP4 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x81C PUSH1 0xFF PUSH1 0x5 DUP4 MLOAD SWAP5 PUSH2 0x7C8 DUP7 PUSH2 0x2FD JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x7EB PUSH1 0x2 DUP3 ADD PUSH2 0xF21 JUMP JUMPDEST DUP7 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x429 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x429 JUMPI PUSH2 0x8DF PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x8F4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x50 SHL NOT AND PUSH1 0x50 SWAP4 SWAP1 SWAP4 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x50 SHL AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x90 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFFFFFFFF PUSH1 0x90 SHL AND OR SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xB SSTORE STOP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x429 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x429 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x429 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x99E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x93B JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xA96 JUMPI POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xA5B JUMPI PUSH2 0x3E7 NOT NUMBER ADD NUMBER DUP2 GT PUSH2 0x524 JUMPI DUP5 PUSH2 0xA43 PUSH2 0xA22 PUSH32 0x2374D5481494AD7962D4BD1B98B91E9F3117C9B66533B2804BE3D76C41A49088 SWAP4 PUSH2 0xA1C PUSH2 0xA13 DUP10 PUSH2 0xA59 SWAP12 PUSH2 0x2CBA JUMP JUMPDEST CALLDATALOAD PUSH2 0x3E8 SWAP1 MOD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2CFC JUMP JUMPDEST SWAP6 DUP7 SWAP3 DUP4 PUSH1 0x3 PUSH2 0xA3C DUP10 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE LOG2 PUSH2 0x2F86 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A5908159491881C995C5D595CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0xB16 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xBCC JUMPI JUMPDEST ISZERO PUSH2 0xB93 JUMPI PUSH1 0x2 DUP4 LT ISZERO DUP1 PUSH2 0xB89 JUMPI JUMPDEST ISZERO PUSH2 0xB4E JUMPI PUSH2 0xA59 SWAP3 PUSH2 0xB44 PUSH2 0xB49 SWAP3 PUSH1 0x18 SSTORE JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH1 0x1A SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C69642062617463682073697A6573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 DUP4 GT ISZERO PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x92DCECC2D8D2C840DAC2F040C8CAE0E8D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 GT ISZERO PUSH2 0xB1F JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0xBE4 DUP2 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF PUSH1 0x6 DUP4 SWAP6 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH2 0x180 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH2 0xCE4 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0xC PUSH2 0xC82 PUSH1 0x5 DUP7 ADD PUSH2 0xBD7 JUMP JUMPDEST SWAP5 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH1 0xC0 DUP1 SWAP2 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xD1E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xD08 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xCFD JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 PUSH2 0xD37 DUP3 PUSH2 0xCEE JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xD9F JUMPI POP PUSH1 0x1 EQ PUSH2 0xD5E JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST SWAP1 SWAP4 SWAP5 SWAP6 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0xD8B JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xD57 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0xD73 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xC SLOAD SWAP2 PUSH2 0xDD2 DUP4 PUSH2 0xCEE JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE5E JUMPI POP PUSH1 0x1 EQ PUSH2 0xDFD JUMPI JUMPDEST POP POP PUSH2 0x39C SWAP3 POP SUB DUP4 PUSH2 0x36E JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xE46 JUMPI POP PUSH2 0x39C SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0xDEF JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0xE2B JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x39C SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xD SLOAD SWAP2 PUSH2 0xE96 DUP4 PUSH2 0xCEE JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE5E JUMPI POP PUSH1 0x1 EQ PUSH2 0xEC0 JUMPI POP POP PUSH2 0x39C SWAP3 POP SUB DUP4 PUSH2 0x36E JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xF09 JUMPI POP PUSH2 0x39C SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0xDEF JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0xEEE JUMP JUMPDEST SWAP1 PUSH2 0x39C PUSH2 0xF35 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xD28 JUMP JUMPDEST SUB DUP4 PUSH2 0x36E JUMP JUMPDEST SWAP6 SWAP3 PUSH1 0xC0 SWAP6 SWAP3 PUSH2 0xF6A SWAP3 SWAP10 SWAP9 SWAP6 SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xE0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH2 0x826 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xFD4 DUP6 PUSH2 0xFCD DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0xD28 JUMP JUMPDEST SUB DUP7 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x5 PUSH1 0x4 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0xFF DUP1 DUP8 PUSH1 0x8 SHR AND SWAP7 AND SWAP5 DUP9 PUSH2 0xF3C JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x1B SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x1033 CALLDATASIZE PUSH2 0x54B JUMP JUMPDEST PUSH2 0x1048 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x318 JUMPI PUSH2 0x106C DUP2 PUSH2 0x1067 PUSH1 0xC SLOAD PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x10A2 JUMPI POP DUP2 SWAP1 PUSH2 0x109D SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x5F3 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xC SSTORE STOP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x10D5 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1111 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x10F8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x10ED JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x10DA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x0 SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x117F JUMPI DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x11B6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x42E JUMP JUMPDEST SWAP1 DUP1 ISZERO ISZERO DUP1 PUSH2 0x1236 JUMPI JUMPDEST PUSH2 0x11C9 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xC DUP3 ADD SLOAD AND ISZERO PUSH2 0x11FB JUMPI DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10985D18DA081B9BDD0818DBDB5C1B195D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD DUP2 GT ISZERO PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x429 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x1271 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x429 JUMPI PUSH1 0x13 SLOAD PUSH2 0xA59 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x129A SWAP1 DUP4 AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x18 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x429 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x429 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x429 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x429 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x132E CALLDATASIZE PUSH2 0x12D7 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0x524 JUMPI PUSH2 0x1349 SWAP1 PUSH1 0x7 SLOAD LT PUSH2 0x1FDC JUMP JUMPDEST PUSH2 0x1352 TIMESTAMP PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x2BF7F019 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x657468657265756D PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x84 DUP2 ADD SUB DUP2 PUSH1 0x0 ADDRESS GAS CALL DUP1 ISZERO PUSH2 0x13CA JUMPI PUSH2 0x13A2 JUMPI STOP JUMPDEST PUSH2 0xA59 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13C3 JUMPI JUMPDEST PUSH2 0x13BB DUP2 DUP4 PUSH2 0x36E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x201C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x202B JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13F0 PUSH2 0x1242 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x1A SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x148B PUSH2 0x826 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x42E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x14F1 PUSH2 0x149C PUSH1 0x5 SLOAD PUSH2 0x2037 JUMP JUMPDEST SWAP3 PUSH2 0x14A6 DUP5 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x14AE PUSH2 0x38F JUMP JUMPDEST CALLER DUP2 MSTORE SWAP1 TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x14EC DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2046 JUMP JUMPDEST DUP1 PUSH2 0x1548 JUMPI PUSH2 0x14FF DUP3 PUSH2 0x31A3 JUMP JUMPDEST DUP2 PUSH32 0x7EF8CA77FDC89C79F093F2A6B2348B1FCDA0BEB941CE31CE9F2D9D260C4DB9D2 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1535 CALLER SWAP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1552 DUP2 DUP4 PUSH2 0x2F86 JUMP JUMPDEST PUSH2 0x14FF JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x318 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x429 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x429 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x15E7 DUP3 PUSH2 0x1593 JUMP JUMPDEST SWAP2 PUSH2 0x15F5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x36E JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x429 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1635 JUMPI PUSH2 0x826 PUSH2 0x1625 DUP6 PUSH2 0x248E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1612 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x1742 JUMPI JUMPDEST PUSH2 0x1688 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1707 JUMPI DUP1 PUSH2 0x1702 PUSH2 0x16C4 PUSH2 0xA59 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0xC DUP3 ADD SWAP2 PUSH2 0x16DE PUSH2 0x16D9 DUP5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x274E JUMP JUMPDEST ADD PUSH2 0x16F6 DUP2 SLOAD PUSH2 0x16F1 PUSH1 0x18 SLOAD DUP3 LT PUSH2 0x279A JUMP JUMPDEST PUSH2 0x2037 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737BA103130BA31B4103932B8BAB2B9BA32B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD DUP2 GT ISZERO PUSH2 0x167F JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x175C CALLDATASIZE PUSH2 0x12D7 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x7 SLOAD LT PUSH1 0x40 MLOAD SWAP1 PUSH2 0x177B DUP3 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0x826 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x17C1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1885 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER SUB PUSH2 0x1847 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x18A8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x189A JUMP JUMPDEST SWAP5 SWAP2 SWAP7 SWAP6 SWAP3 PUSH2 0x18D6 PUSH1 0xA0 SWAP6 SWAP3 PUSH1 0xC0 DUP9 MSTORE PUSH1 0xC0 DUP9 ADD SWAP1 PUSH2 0x1888 JUMP JUMPDEST SWAP8 PUSH1 0x1 DUP1 DUP8 SHL SUB AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x19B0 JUMPI JUMPDEST PUSH2 0x1920 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP5 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0xC DUP9 ADD SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH1 0x20 DUP11 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP10 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x199B JUMPI POP POP POP POP POP PUSH2 0x198F DUP6 PUSH2 0x826 SWAP7 SWAP8 SWAP9 SUB DUP8 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x18BC JUMP JUMPDEST DUP5 SLOAD DUP13 MSTORE SWAP11 DUP12 ADD SWAP11 SWAP4 DUP4 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1972 JUMP JUMPDEST POP PUSH1 0x17 SLOAD DUP2 GT ISZERO PUSH2 0x1917 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x19FE PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x1A4C JUMPI JUMPDEST PUSH2 0x1A24 JUMPI PUSH2 0xA59 DUP4 PUSH2 0x27F9 JUMP JUMPDEST PUSH1 0x64 SWAP3 POP PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x61DB9C1 PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 PUSH1 0x2 SLOAD AND CALLER EQ ISZERO PUSH2 0x1A17 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x44 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x429 JUMPI PUSH2 0x1AD8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x9 SSTORE PUSH4 0xFFFFFFFF NOT PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x1B51 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x93B JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x1B6A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x93B JUMP JUMPDEST SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1BCC JUMPI JUMPDEST ISZERO PUSH2 0x1B96 JUMPI PUSH2 0x826 SWAP4 PUSH2 0x1625 SWAP4 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B84 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x19 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x1C66 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 CALLER DUP4 SWAP1 SUB PUSH2 0x1D04 JUMPI AND SWAP1 CALLER DUP3 EQ PUSH2 0x1CBF JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x39C SWAP1 SWAP3 SWAP2 SWAP3 PUSH1 0xE0 DUP2 ADD SWAP4 PUSH1 0xC0 DUP1 SWAP2 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x826 PUSH2 0x1E03 PUSH1 0x5 PUSH1 0x40 PUSH1 0xC0 PUSH1 0x4 CALLDATALOAD DUP3 MLOAD PUSH2 0x1DBC DUP2 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP2 DUP5 DUP1 SWAP4 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE DUP1 ISZERO ISZERO DUP1 PUSH2 0x1E0F JUMPI JUMPDEST PUSH2 0x1DF5 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE KECCAK256 ADD PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1D42 JUMP JUMPDEST POP PUSH1 0x17 SLOAD DUP2 GT ISZERO PUSH2 0x1DEC JUMP JUMPDEST ISZERO PUSH2 0x1E22 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1E5F JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E54 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1E78 JUMPI POP POP JUMP JUMPDEST PUSH2 0x39C SWAP2 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1EC2 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1E54 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1ED9 JUMPI POP POP JUMP JUMPDEST PUSH2 0x39C SWAP2 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1EC2 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1E54 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1F31 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x39C SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1EC2 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1E54 JUMP JUMPDEST ISZERO PUSH2 0x1F63 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A590818985D18DA081251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST PUSH1 0x1F NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1FE3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155C1AD9595C081B9BDD081B9959591959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x429 JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x524 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x2 DUP4 ADD SWAP2 PUSH1 0x40 DUP6 ADD MLOAD DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x318 JUMPI PUSH2 0x20A1 DUP5 PUSH2 0x209B DUP8 SLOAD PUSH2 0xCEE JUMP JUMPDEST DUP8 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0x2139 JUMPI POP POP SWAP4 PUSH2 0x2123 SWAP4 PUSH2 0x20E1 DUP5 PUSH1 0xC0 SWAP6 PUSH1 0x5 SWAP6 PUSH2 0x39C SWAP11 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x5F3 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 PUSH2 0x211C PUSH2 0x210A PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 PUSH2 0x2151 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x21A1 JUMPI POP POP POP DUP5 PUSH1 0x5 SWAP5 PUSH2 0x39C SWAP10 SWAP9 SWAP5 PUSH2 0x2123 SWAP9 SWAP5 PUSH1 0xC0 SWAP9 PUSH1 0x1 SWAP6 LT PUSH2 0x2188 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x20E4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x217B JUMP JUMPDEST DUP5 DUP7 ADD MLOAD DUP8 SSTORE SWAP6 DUP7 ADD SWAP6 SWAP5 DUP2 ADD SWAP5 SWAP2 DUP2 ADD SWAP2 PUSH2 0x2156 JUMP JUMPDEST ISZERO PUSH2 0x21BF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081C1C9BDBD98818DBDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2207 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1129 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x4 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2267 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141C9BDBD9881B9BDD0818DBDB5C1B195D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22A9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B210383937B7B3 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22E5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xA0E4DEDECC40C2D8E4CAC2C8F240D2DC40C4C2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x524 JUMPI JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x318 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0x318 JUMPI DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x2395 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 SWAP2 ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2383 JUMPI POP POP POP POP POP JUMP JUMPDEST DUP4 MLOAD DUP4 DUP3 ADD SSTORE SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2375 JUMP JUMPDEST PUSH2 0x23AD SWAP1 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1E54 JUMP JUMPDEST CODESIZE PUSH2 0x2362 JUMP JUMPDEST SWAP3 SWAP1 DUP4 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 SWAP3 PUSH1 0x0 SWAP4 DUP3 SLOAD PUSH2 0x23D0 DUP2 PUSH2 0xCEE JUMP JUMPDEST SWAP4 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x2434 JUMPI POP PUSH1 0x1 EQ PUSH2 0x23F0 JUMPI JUMPDEST POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP7 SWAP6 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 JUMPDEST DUP6 DUP3 LT PUSH2 0x2421 JUMPI POP POP POP POP PUSH1 0x40 SWAP3 SWAP4 POP ADD ADD CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x23E7 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP4 ADD DUP6 ADD MSTORE SWAP1 DUP8 ADD SWAP1 DUP3 ADD PUSH2 0x2404 JUMP JUMPDEST SWAP5 SWAP7 POP POP POP POP POP PUSH1 0x40 SWAP4 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE DUP1 ISZERO ISZERO MUL ADD ADD CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x23E7 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2469 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x245C JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x449 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x24A6 DUP2 MLOAD PUSH1 0x19 SLOAD DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2741 JUMPI JUMPDEST POP PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x253A JUMPI PUSH1 0x1 SWAP1 PUSH2 0x250C PUSH2 0x2507 PUSH1 0x5 PUSH2 0x24EF PUSH2 0x24EA DUP3 PUSH2 0x24E2 PUSH2 0x24D1 DUP9 DUP12 PUSH2 0x224C JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24FC PUSH2 0x24D1 DUP6 DUP9 PUSH2 0x224C JUMP JUMPDEST ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x2534 PUSH2 0x252D PUSH2 0x251C DUP4 DUP7 PUSH2 0x224C JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x22DE JUMP JUMPDEST ADD PUSH2 0x24A9 JUMP JUMPDEST POP PUSH2 0x2546 PUSH1 0x17 SLOAD PUSH2 0x2037 JUMP JUMPDEST SWAP1 PUSH2 0x2550 DUP3 PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH2 0x2564 DUP3 PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x256E DUP3 DUP3 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP1 DUP2 PUSH1 0x2 SWAP2 TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 SWAP1 PUSH1 0x0 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x25A9 PUSH1 0xC DUP3 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP4 PUSH1 0xE PUSH1 0xD DUP4 ADD SWAP3 ADD SWAP4 JUMPDEST PUSH2 0x25FE JUMPI JUMPDEST POP POP POP POP POP POP DUP2 PUSH32 0x5D74F4C80F98633A9CE8E3F825E7019210BFB85159F33A7FCEB58FA9CB8CA621 PUSH1 0x40 MLOAD DUP1 PUSH2 0x25F2 CALLER SWAP6 DUP3 PUSH2 0x247D JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x449 DUP2 PUSH2 0x3285 JUMP JUMPDEST DUP7 MLOAD DUP6 LT ISZERO PUSH2 0x273C JUMPI DUP6 DUP6 PUSH2 0x2735 PUSH2 0x2617 DUP4 SWAP9 DUP12 PUSH2 0x224C JUMP JUMPDEST MLOAD DUP12 PUSH2 0x262D DUP3 PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x4 SWAP1 DUP2 PUSH2 0x2646 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 PUSH2 0x2713 DUP8 PUSH2 0x270D DUP12 PUSH2 0x2665 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP4 DUP12 PUSH2 0x26C0 DUP11 DUP6 PUSH2 0x2682 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP9 PUSH2 0x269F PUSH2 0x26AD PUSH1 0x40 SWAP12 DUP13 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 SWAP14 DUP15 DUP5 ADD SWAP7 DUP8 PUSH2 0x23B3 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x36E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x26C9 PUSH2 0x3B8 JUMP JUMPDEST SWAP7 PUSH2 0x26DE DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD DUP8 MSTORE DUP13 PUSH2 0x26F7 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD DUP6 DUP9 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0xF21 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2458 JUMP JUMPDEST ADD SWAP5 PUSH2 0x25B6 JUMP JUMPDEST PUSH2 0x25BB JUMP JUMPDEST SWAP1 POP PUSH1 0x1A SLOAD LT ISZERO CODESIZE PUSH2 0x24A0 JUMP JUMPDEST ISZERO PUSH2 0x2755 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726576696F757320666F6C64696E67206E6F7420636F6D706C657465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x27A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820726563757273696F6E20646570746820726561636865640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x27F3 DUP3 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x284E JUMPI PUSH1 0x20 DUP2 PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 SWAP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2867 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420696E70757420617272617973 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x28AA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6F206D616E792070726F6F667320746F2061676772656761746500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x28F9 DUP3 PUSH2 0x1593 JUMP JUMPDEST PUSH2 0x2906 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x36E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2917 PUSH1 0x1F NOT SWAP2 PUSH2 0x1593 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x429 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x429 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x429 JUMPI SWAP2 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2969 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6F6620696E206167677265676174696F6E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x29C3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F6620616C7265616479207573656420696E206167677265676174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 DUP5 MLOAD PUSH1 0x20 DUP1 SWAP7 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2A4C JUMPI POP POP POP DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP2 POP JUMP JUMPDEST DUP3 MLOAD DUP7 MSTORE SWAP5 DUP8 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2A22 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x318 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0x318 JUMPI DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x2AC2 JUMPI JUMPDEST POP PUSH2 0x2A9E PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2AB0 JUMPI POP POP POP POP POP JUMP JUMPDEST DUP4 MLOAD DUP4 DUP3 ADD SSTORE SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2AA2 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x2AE2 JUMPI POP POP PUSH2 0x2A89 JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2AD4 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 DUP2 DUP5 EQ DUP1 PUSH2 0x2CB1 JUMPI JUMPDEST PUSH2 0x2B03 SWAP1 PUSH2 0x2860 JUMP JUMPDEST PUSH2 0x2B10 PUSH1 0xA DUP6 GT ISZERO PUSH2 0x28A3 JUMP JUMPDEST PUSH2 0x2B19 DUP5 PUSH2 0x28EF JUMP JUMPDEST SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2BDB JUMPI POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2B41 DUP2 PUSH2 0x269F CALLER TIMESTAMP DUP8 DUP8 PUSH2 0x2A12 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x2B76 PUSH2 0x2B53 PUSH1 0x5 SLOAD PUSH2 0x2037 JUMP JUMPDEST SWAP2 PUSH2 0x2B5D DUP4 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x2B71 DUP4 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2A60 JUMP JUMPDEST PUSH2 0x2B9A PUSH2 0x2B8D DUP4 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD PUSH1 0x40 MLOAD DUP1 PUSH2 0x2BD5 DUP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x1 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x2C20 PUSH2 0x2C1B PUSH2 0x2C15 PUSH2 0x2BF2 PUSH1 0x1 SWAP6 DUP8 DUP12 PUSH2 0x2921 JUMP JUMPDEST PUSH2 0x2C0D PUSH2 0x2C03 DUP8 DUP13 DUP13 SWAP7 SWAP6 SWAP7 PUSH2 0x2921 JUMP JUMPDEST SWAP5 SWAP1 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x3F2 JUMP JUMPDEST SWAP3 CALLDATASIZE SWAP2 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 PUSH2 0x36BD JUMP JUMPDEST PUSH2 0x2962 JUMP JUMPDEST PUSH2 0x2CAB PUSH2 0x2B8D PUSH2 0x2C5F PUSH2 0x2C59 PUSH2 0x2C37 DUP6 DUP9 DUP13 PUSH2 0x2921 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x269F PUSH2 0x2C47 DUP9 DUP14 DUP14 PUSH2 0x2921 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP9 DUP10 SWAP2 PUSH2 0x29AE JUMP JUMPDEST SWAP2 PUSH2 0x29AE JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x2C8F PUSH2 0x2C8A PUSH2 0x2C86 PUSH2 0x2C7F DUP5 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x29BC JUMP JUMPDEST DUP1 PUSH2 0x2C9A DUP6 DUP13 PUSH2 0x224C JUMP JUMPDEST MSTORE PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2B1D JUMP JUMPDEST POP DUP4 ISZERO ISZERO PUSH2 0x2AFA JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x2207 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST PUSH1 0x30 ADD SWAP1 DUP2 PUSH1 0x30 GT PUSH2 0x524 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x2710 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x160 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE PUSH2 0x131 DUP3 MSTORE PUSH17 0x72696E6769667928726573756C7429293B PUSH1 0x78 SHL PUSH2 0x140 DUP4 PUSH32 0x636F6E737420636861696E49643D7061727365496E7428617267735B305D293B PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x636F6E737420626C6F636B4E756D626572733D4A534F4E2E7061727365286172 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x67735B315D293B636F6E737420726573756C743D7B737563636573733A747275 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x652C636861696E49642C626C6F636B4E756D626572732C76616C696469747948 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x6173683A27307831323334353637383930616263646566313233343536373839 PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0x3061626364656631323334353637383930616263646566313233343536373839 PUSH1 0xC0 DUP3 ADD MSTORE PUSH32 0x30616263646566272C6D657461646174613A7B74696D657374616D703A4D6174 PUSH1 0xE0 DUP3 ADD MSTORE PUSH32 0x682E666C6F6F7228446174652E6E6F7728292F31303030297D7D3B7265747572 PUSH2 0x100 DUP3 ADD MSTORE PUSH32 0x6E2046756E6374696F6E732E656E636F6465537472696E67284A534F4E2E7374 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2EAE DUP3 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC0 DUP4 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2EE7 DUP3 PUSH2 0x353 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE DUP2 PUSH1 0x0 JUMPDEST PUSH1 0xA0 DUP2 LT PUSH2 0x2EFB JUMPI POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x2EEF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE PUSH1 0x3 DUP3 MSTORE DUP2 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x60 DUP1 DUP3 LT ISZERO PUSH2 0x2F4C JUMPI SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x2F32 JUMP JUMPDEST POP POP SWAP1 SWAP2 POP JUMP JUMPDEST SWAP1 PUSH2 0x2F66 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x6B1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2F81 PUSH1 0x20 SWAP2 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0xD28 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH32 0x89652D00E157965D54F5AD31AF9352416C4E90B879711EC122680D4E3A1DE9A6 SWAP1 PUSH2 0x2FBD DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2FC5 PUSH2 0xDBE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x3135 JUMPI JUMPDEST PUSH2 0x30E7 PUSH2 0x310B SWAP2 PUSH2 0x2FE6 PUSH2 0x2FDF PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x470C JUMP JUMPDEST PUSH2 0x30E2 PUSH1 0x2 PUSH2 0x2FF3 PUSH2 0x2EDA JUMP JUMPDEST SWAP6 ADD SWAP5 PUSH2 0x300F PUSH2 0x300A PUSH2 0x3005 DUP9 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x3018 DUP3 PUSH2 0x21FA JUMP JUMPDEST MSTORE PUSH2 0x3022 DUP2 PUSH2 0x21FA JUMP JUMPDEST POP PUSH2 0x3056 PUSH2 0x3063 PUSH2 0x3032 DUP10 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x269F PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH2 0x3050 PUSH1 0x20 DUP6 ADD PUSH1 0x1 SWAP1 PUSH1 0x5B PUSH1 0xF8 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2F53 JUMP JUMPDEST PUSH1 0x5D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x306C DUP3 PUSH2 0x220C JUMP JUMPDEST MSTORE PUSH2 0x3076 DUP2 PUSH2 0x220C JUMP JUMPDEST POP PUSH2 0x308F PUSH2 0x300A PUSH2 0x3089 PUSH1 0xE SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3098 DUP3 PUSH2 0x221C JUMP JUMPDEST MSTORE PUSH2 0x30A2 DUP2 PUSH2 0x221C JUMP JUMPDEST POP PUSH2 0x30AC CHAINID PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x30B5 DUP3 PUSH2 0x222C JUMP JUMPDEST MSTORE PUSH2 0x30BF DUP2 PUSH2 0x222C JUMP JUMPDEST POP PUSH2 0x30C8 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0x30D1 DUP3 PUSH2 0x223C JUMP JUMPDEST MSTORE PUSH2 0x30DB DUP2 PUSH2 0x223C JUMP JUMPDEST POP DUP3 PUSH2 0x3F3E JUMP JUMPDEST PUSH2 0x408D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH4 0xFFFFFFFF DUP4 PUSH1 0x90 SHR AND SWAP3 PUSH1 0x50 SHR AND SWAP1 PUSH2 0x425B JUMP JUMPDEST SWAP4 PUSH2 0x3120 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x3130 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2F6A JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST POP PUSH2 0x310B PUSH2 0x30E7 PUSH2 0x3144 PUSH2 0x2D09 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0xE0 PUSH1 0xA0 PUSH2 0x449 SWAP4 PUSH1 0x20 DUP5 MSTORE DUP1 MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xFFFF PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF DUP1 SWAP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD AND DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH1 0xC0 DUP1 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x323C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x321B PUSH1 0xA SLOAD PUSH4 0xFFFFFFFF SWAP1 PUSH2 0x31DE PUSH2 0x31D6 PUSH2 0x39E JUMP JUMPDEST DUP11 DUP2 MSTORE PUSH2 0x4335 JUMP JUMPDEST SWAP4 PUSH2 0x31E7 PUSH2 0x3AB JUMP JUMPDEST SWAP6 DUP7 MSTORE DUP9 DUP7 ADD MSTORE DUP1 DUP9 SHR PUSH2 0xFFFF AND PUSH1 0x40 DUP7 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 DUP4 AND AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x30 SHR AND PUSH1 0x80 DUP5 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x4D8E1C2F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x314C JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x13CA JUMPI PUSH2 0x3263 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x3266 JUMPI JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x327F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13C3 JUMPI PUSH2 0x13BB DUP2 DUP4 PUSH2 0x36E JUMP JUMPDEST CODESIZE PUSH2 0x3252 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD PUSH32 0x636F6E73742062617463684964203D207061727365496E7428617267735B305D SWAP1 MSTORE PUSH1 0x40 DUP3 ADD PUSH2 0x293B PUSH1 0xF0 SHL SWAP1 MSTORE DUP2 PUSH1 0x42 DUP2 ADD PUSH2 0x330B SWAP1 PUSH1 0x25 SWAP1 PUSH32 0x636F6E73742070726F6F66436F756E74203D207061727365496E742861726773 DUP2 MSTORE PUSH5 0x5B315D293B PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH32 0x636F6E73742073746570496E203D207061727365496E7428617267735B325D29 DUP2 MSTORE PUSH1 0x3B PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x21 ADD PUSH32 0x2F2F2047656E6572617465204E6F7661207265637572736976652070726F6F66 DUP2 MSTORE PUSH22 0x202D2073696D706C696669656420666F722064656D6F PUSH1 0x50 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x36 ADD PUSH32 0x636F6E7374206167677265676174656448617368203D206574686572732E7574 DUP2 MSTORE PUSH14 0xD2D8E65CD6CAC6C6C2D6646A6C5 PUSH1 0x93 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2E ADD PUSH32 0x20206574686572732E7574696C732E64656661756C74416269436F6465722E65 DUP2 MSTORE PUSH6 0xDCC6DEC8CA5 PUSH1 0xD3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x26 ADD PUSH32 0x202020205B2775696E74323536272C202775696E74323536272C202775696E74 DUP2 MSTORE PUSH6 0xC8D4D89D74B PUSH1 0xD2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x26 ADD PUSH32 0x202020205B626174636849642C2070726F6F66436F756E742C2073746570496E DUP2 MSTORE PUSH1 0x5D PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x21 ADD PUSH3 0x202029 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x3 ADD PUSH2 0x293B PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH32 0x636F6E737420666F6C646564496E7374616E6365203D207B0000000000000000 DUP2 MSTORE PUSH1 0x18 ADD PUSH17 0x8081CDD195C125B8E881CDD195C125B8B PUSH1 0x7A SHL DUP2 MSTORE PUSH1 0x11 ADD PUSH22 0x8081CDD195C13DD5D0E881CDD195C125B880AC80C4B PUSH1 0x52 SHL DUP2 MSTORE PUSH1 0x16 ADD PUSH32 0x202070726F6772616D436F756E7465723A20446174652E6E6F7728292C000000 DUP2 MSTORE PUSH1 0x1D ADD PUSH32 0x20207374617465526F6F74496E3A2061676772656761746564486173682C0000 DUP2 MSTORE PUSH1 0x1E ADD PUSH32 0x20207374617465526F6F744F75743A2061676772656761746564486173682C00 DUP2 MSTORE PUSH1 0x1F ADD PUSH32 0x20206E756C6C6966696572486173683A206574686572732E7574696C732E6B65 DUP2 MSTORE PUSH32 0x6363616B323536286167677265676174656448617368292C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x38 ADD PUSH15 0x2020697356616C69643A2074727565 PUSH1 0x88 SHL DUP2 MSTORE PUSH1 0xF ADD PUSH2 0x7D3B PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH32 0x72657475726E2046756E6374696F6E732E656E636F6465537472696E67284A53 DUP2 MSTORE PUSH14 0x4F4E2E737472696E67696679287B PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2E ADD PUSH19 0x80818985D18DA12590E8818985D18DA12590B PUSH1 0x6A SHL DUP2 MSTORE PUSH1 0x13 ADD PUSH32 0x202061676772656761746564486173683A206167677265676174656448617368 DUP2 MSTORE PUSH1 0xB PUSH1 0xFA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x21 ADD PUSH32 0x2020666F6C646564496E7374616E63653A20666F6C646564496E7374616E6365 DUP2 MSTORE PUSH1 0xB PUSH1 0xFA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x21 ADD PUSH32 0x202072656375727369766550726F6F663A206167677265676174656448617368 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x7D29293B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE PUSH2 0x36AC SWAP1 DUP4 PUSH2 0x36E JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x3 ADD SLOAD SWAP2 PUSH2 0x39C SWAP4 PUSH2 0x436E JUMP JUMPDEST MLOAD ISZERO SWAP1 DUP2 ISZERO PUSH2 0x36D6 JUMPI JUMPDEST POP PUSH2 0x36D1 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD ISZERO CODESIZE PUSH2 0x36C7 JUMP JUMPDEST ISZERO PUSH2 0x36E7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642046756E6374696F6E73207265717565737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x449 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x374A DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x73756363657373 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x376D DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0x3430B9A932B0B6283937B7B3 PUSH1 0xA1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3795 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0xECC2D8D2C8D2E8F290C2E6D PUSH1 0xA3 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP3 SWAP2 SWAP1 PUSH2 0x37C6 DUP5 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x6B1 JUMP JUMPDEST ADD SWAP1 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37DB DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x383937B7B3 PUSH1 0xD9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37FC DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0xD DUP3 MSTORE PUSH13 0x7075626C69635369676E616C73 PUSH1 0x98 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x382C PUSH1 0x20 SWAP3 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST SWAP1 DUP3 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH1 0x0 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x3851 DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x385E DUP3 ISZERO ISZERO PUSH2 0x36E0 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3A4A JUMPI POP PUSH32 0x50348C1AF87D1D2E61E0A7E9BF83A9C67F047D8DE73BE6B88ACAC8655A97581E SWAP2 PUSH2 0x3130 SWAP2 PUSH2 0x389C PUSH2 0x3896 PUSH2 0x373D JUMP JUMPDEST DUP4 PUSH2 0x447C JUMP JUMPDEST PUSH2 0x38B0 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE SWAP1 SWAP2 ISZERO PUSH2 0x3A06 JUMPI PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD SWAP2 PUSH2 0x38F9 PUSH2 0x38F3 PUSH2 0x3760 JUMP JUMPDEST DUP7 PUSH2 0x447C JUMP JUMPDEST ISZERO PUSH2 0x39F1 JUMPI PUSH2 0x390F PUSH2 0x3909 PUSH2 0x37CE JUMP JUMPDEST DUP7 PUSH2 0x4568 JUMP JUMPDEST PUSH2 0x3920 PUSH2 0x391A PUSH2 0x37EF JUMP JUMPDEST DUP8 PUSH2 0x4568 JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP1 PUSH2 0x39E7 JUMPI JUMPDEST ISZERO PUSH2 0x39AB JUMPI PUSH2 0x396A SWAP3 PUSH2 0x399B SWAP5 SWAP3 PUSH2 0x269F PUSH2 0x3955 PUSH1 0x4 SWAP5 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x3050 PUSH1 0x20 DUP5 ADD DUP1 SWAP8 PUSH2 0x2F53 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 DUP5 SWAP4 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SSTORE PUSH2 0x3983 PUSH2 0x2B8D DUP3 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x1 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3818 JUMP JUMPDEST POP POP PUSH2 0x39DF SWAP2 PUSH1 0x4 PUSH2 0x396A SWAP3 PUSH2 0x39C8 PUSH2 0x39C2 PUSH2 0x3788 JUMP JUMPDEST DUP10 PUSH2 0x4568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3955 DUP2 PUSH2 0x269F PUSH1 0x20 DUP3 ADD SWAP5 TIMESTAMP SWAP1 DUP7 PUSH2 0x37B0 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x399F JUMP JUMPDEST POP DUP1 MLOAD ISZERO ISZERO PUSH2 0x392A JUMP JUMPDEST PUSH2 0x39DF SWAP2 PUSH1 0x4 PUSH2 0x396A SWAP3 PUSH2 0x39C8 PUSH2 0x39C2 PUSH2 0x3788 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD PUSH1 0x40 MLOAD DUP1 PUSH2 0x39DF DUP2 SWAP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH32 0x8117AD48DB1A08344670D33ACDEB14D7EC953B1119DAFA9AB361E5E721D43562 SWAP3 POP PUSH2 0x3A97 PUSH1 0x5 PUSH2 0x3A89 PUSH2 0x3130 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x372C JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3AC0 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3AB2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xC0 PUSH2 0x39C SWAP4 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x449 SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST SWAP2 SWAP1 DUP2 MLOAD PUSH2 0x3CBF JUMPI PUSH32 0x788C5F43C02F6032D8146C17D8B085814337BACFF42A64ADDF4F97FFCEBDACFF SWAP2 POP PUSH2 0x3B82 DUP4 PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP4 PUSH32 0xE72448DEE39249921F3F9C2134DC1CA195A9E3882D4B52E6C3E49C775A4A4311 PUSH2 0x3CAC DUP5 MLOAD PUSH1 0x20 DUP7 ADD KECCAK256 PUSH1 0x4 DUP6 ADD SWAP1 DUP2 SSTORE PUSH2 0x3BC9 PUSH1 0xC DUP7 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3C94 PUSH1 0x3 DUP7 ADD SWAP6 PUSH1 0x5 DUP8 SLOAD SWAP2 PUSH2 0x3BDF DUP4 PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 PUSH2 0x3BF1 DUP3 DUP7 PUSH2 0x3AA3 JUMP JUMPDEST SUB SWAP2 PUSH2 0x3C05 PUSH1 0x1F NOT SWAP4 DUP5 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x36E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP8 SLOAD PUSH1 0x1 DUP6 ADD SLOAD SWAP1 SWAP3 DUP13 SWAP2 PUSH2 0x3C52 SWAP2 PUSH2 0x3C5E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 DUP8 MSTORE PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP3 ADD MSTORE SWAP3 DUP4 SWAP1 PUSH1 0x54 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x36E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH2 0x3C6A PUSH2 0x38F JUMP JUMPDEST SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP5 ADD MSTORE ADD PUSH2 0x3AD7 JUMP JUMPDEST SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 SLOAD PUSH2 0x3130 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3B2C JUMP JUMPDEST POP PUSH2 0x3130 PUSH32 0x8117AD48DB1A08344670D33ACDEB14D7EC953B1119DAFA9AB361E5E721D43562 SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x372C JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 MLOAD SWAP1 PUSH1 0x20 SWAP1 DUP3 PUSH2 0x3D08 DUP4 DUP3 ADD DUP1 SWAP4 PUSH2 0x2F53 JUMP JUMPDEST SUB SWAP3 PUSH2 0x3D1C PUSH1 0x1F NOT SWAP5 DUP6 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x36E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 DUP1 MLOAD DUP3 DUP2 ADD SWAP1 PUSH2 0x3D4F DUP2 PUSH2 0x3D43 DUP5 PUSH1 0x8 SWAP1 PUSH8 0x657468657265756D PUSH1 0xC0 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SUB DUP7 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x36E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x3E5C JUMPI DUP1 MLOAD PUSH8 0x617262697472756D PUSH1 0xC0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x3D7A DUP2 PUSH1 0x8 DUP5 ADD PUSH2 0x3D43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x3E52 JUMPI DUP1 MLOAD PUSH8 0x6F7074696D69736D PUSH1 0xC0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x3DA5 DUP2 PUSH1 0x8 DUP5 ADD PUSH2 0x3D43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x3E49 JUMPI DUP1 MLOAD PUSH4 0x62617365 PUSH1 0xE0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x3DCC DUP2 PUSH1 0x4 DUP5 ADD PUSH2 0x3D43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x3E3F JUMPI DUP1 MLOAD PUSH7 0x3837B63CB3B7B7 PUSH1 0xC9 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x3DF6 DUP2 PUSH1 0x7 DUP5 ADD PUSH2 0x3D43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x3E36 JUMPI PUSH2 0x3E23 SWAP1 MLOAD SWAP2 DUP3 ADD SWAP3 DUP3 PUSH2 0x3C52 DUP6 PUSH1 0x9 SWAP1 PUSH9 0x6176616C616E636865 PUSH1 0xB8 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH2 0x3E30 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0xA86A SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x89 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH2 0x2105 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0xA SWAP1 JUMP JUMPDEST POP POP POP POP PUSH2 0xA4B1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3E6F DUP3 PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x3E7C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x36E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2917 PUSH1 0x1F NOT SWAP2 PUSH2 0x3D7 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2207 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F20 JUMPI PUSH1 0x0 DUP2 DUP2 DUP2 DUP1 JUMPDEST PUSH2 0x3F08 JUMPI POP PUSH2 0x3EB9 DUP2 PUSH2 0x3E65 JUMP JUMPDEST SWAP4 JUMPDEST PUSH2 0x3EC5 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x3ECE SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST SWAP1 PUSH1 0xA SWAP1 PUSH2 0x3EF3 PUSH2 0x3EE3 PUSH2 0x3089 DUP5 DUP5 MOD PUSH2 0x2CD1 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP5 BYTE PUSH2 0x3EFF DUP5 DUP8 PUSH2 0x3E8D JUMP JUMPDEST MSTORE8 DIV SWAP1 DUP2 PUSH2 0x3EBB JUMP JUMPDEST SWAP2 POP PUSH2 0x3F15 PUSH1 0xA SWAP2 PUSH2 0x2037 JUMP JUMPDEST SWAP2 DIV DUP1 DUP5 SWAP3 SWAP2 PUSH2 0x3EAB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3F2D DUP2 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x3F4B JUMPI PUSH1 0xA0 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFE936CB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3F6A DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0x31B7B232A637B1B0BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x3FA5 JUMPI JUMP JUMPDEST PUSH2 0x3F85 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3FB7 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x8 DUP3 MSTORE PUSH8 0x6C616E6775616765 PUSH1 0xC0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 GT ISZERO PUSH2 0x3FA5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3FE5 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x736F75726365 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4007 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x61726773 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4027 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0xF DUP3 MSTORE PUSH15 0x39B2B1B932BA39A637B1B0BA34B7B7 PUSH1 0x89 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4052 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x73656372657473 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4075 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x627974657341726773 PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x4095 PUSH2 0x473D JUMP JUMPDEST SWAP1 PUSH2 0x40A7 PUSH2 0x40A1 PUSH2 0x3F5D JUMP JUMPDEST DUP4 PUSH2 0x478D JUMP JUMPDEST PUSH2 0x40C4 DUP2 MLOAD PUSH2 0x40B5 DUP2 PUSH2 0x3F9B JUMP JUMPDEST PUSH2 0x40BE DUP2 PUSH2 0x3F9B JUMP JUMPDEST DUP4 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x40CF PUSH2 0x40A1 PUSH2 0x3FAA JUMP JUMPDEST PUSH2 0x40E9 PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x40E0 DUP2 PUSH2 0x3FCE JUMP JUMPDEST PUSH2 0x40BE DUP2 PUSH2 0x3FCE JUMP JUMPDEST PUSH2 0x40F4 PUSH2 0x40A1 PUSH2 0x3FD8 JUMP JUMPDEST PUSH2 0x4102 PUSH1 0x60 DUP3 ADD MLOAD DUP4 PUSH2 0x478D JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD DUP1 MLOAD MLOAD PUSH2 0x4202 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD SWAP1 DUP2 MLOAD MLOAD PUSH2 0x4182 JUMPI JUMPDEST PUSH1 0xC0 SWAP2 POP ADD DUP1 MLOAD MLOAD PUSH2 0x412F JUMPI JUMPDEST POP MLOAD MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x413B PUSH2 0x40A1 PUSH2 0x4068 JUMP JUMPDEST PUSH2 0x4144 DUP3 PUSH2 0x48F0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x416F JUMPI SWAP1 PUSH2 0x4169 PUSH2 0x4162 DUP3 PUSH1 0x1 SWAP5 PUSH2 0x224C JUMP JUMPDEST MLOAD DUP6 PUSH2 0x4A09 JUMP JUMPDEST ADD PUSH2 0x4147 JUMP JUMPDEST POP POP SWAP2 POP PUSH2 0x417C DUP2 PUSH2 0x497C JUMP JUMPDEST CODESIZE PUSH2 0x4129 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH2 0x4191 DUP2 PUSH2 0x3F9B JUMP JUMPDEST PUSH2 0x419A DUP2 PUSH2 0x3F9B JUMP JUMPDEST ISZERO PUSH2 0x41F0 JUMPI PUSH1 0xC0 SWAP3 PUSH2 0x41D3 PUSH2 0x41EB SWAP3 PUSH2 0x41BA PUSH2 0x41B4 PUSH2 0x401A JUMP JUMPDEST DUP9 PUSH2 0x478D JUMP JUMPDEST MLOAD PUSH2 0x41C4 DUP2 PUSH2 0x3F9B JUMP JUMPDEST PUSH2 0x41CD DUP2 PUSH2 0x3F9B JUMP JUMPDEST DUP7 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x41E4 PUSH2 0x41DE PUSH2 0x4045 JUMP JUMPDEST DUP7 PUSH2 0x478D JUMP JUMPDEST MLOAD DUP5 PUSH2 0x4A09 JUMP JUMPDEST PUSH2 0x411C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA80D31F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 PUSH2 0x4214 PUSH2 0x420E PUSH2 0x3FFA JUMP JUMPDEST DUP5 PUSH2 0x478D JUMP JUMPDEST PUSH2 0x421D DUP4 PUSH2 0x48F0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x4248 JUMPI SWAP1 PUSH2 0x4242 PUSH2 0x423B DUP3 PUSH1 0x1 SWAP5 PUSH2 0x224C JUMP JUMPDEST MLOAD DUP7 PUSH2 0x478D JUMP JUMPDEST ADD PUSH2 0x4220 JUMP JUMPDEST POP POP SWAP3 POP PUSH2 0x4255 DUP3 PUSH2 0x497C JUMP JUMPDEST CODESIZE PUSH2 0x410E JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH4 0xFFFFFFFF PUSH2 0x429A PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH4 0x230E93B1 PUSH1 0xE1 SHL DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0xA4 DUP7 ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x44 DUP7 ADD MSTORE SWAP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x13CA JUMPI PUSH1 0x0 SWAP2 PUSH2 0x4316 JUMPI JUMPDEST POP DUP1 PUSH32 0x1131472297A800FEE664D1D89CFA8F7676FF07189ECC53F80BBB5F4969099DB8 PUSH1 0x0 DUP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x432F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13C3 JUMPI PUSH2 0x13BB DUP2 DUP4 PUSH2 0x36E JUMP JUMPDEST CODESIZE PUSH2 0x42EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x125FA267 PUSH1 0xE3 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x4379 PUSH2 0x2EA1 JUMP JUMPDEST SWAP3 DUP1 MLOAD ISZERO PUSH2 0x446A JUMPI DUP4 PUSH2 0x30E2 PUSH2 0x4419 SWAP4 PUSH2 0x4406 PUSH2 0x3130 SWAP7 PUSH2 0x30E7 SWAP6 PUSH1 0x0 PUSH32 0x89652D00E157965D54F5AD31AF9352416C4E90B879711EC122680D4E3A1DE9A6 SWAP11 MSTORE PUSH1 0x0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x43F3 PUSH2 0x43D0 PUSH2 0x2F0C JUMP JUMPDEST SWAP4 PUSH2 0x43DA DUP13 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x43E3 DUP7 PUSH2 0x21FA JUMP JUMPDEST MSTORE PUSH2 0x43ED DUP6 PUSH2 0x21FA JUMP JUMPDEST POP PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x43FC DUP5 PUSH2 0x220C JUMP JUMPDEST MSTORE PUSH2 0x43ED DUP4 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x440F DUP3 PUSH2 0x221C JUMP JUMPDEST MSTORE PUSH2 0x30DB DUP2 PUSH2 0x221C JUMP JUMPDEST SWAP3 PUSH2 0x4423 DUP2 PUSH2 0x2CDF JUMP JUMPDEST PUSH2 0x4437 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x40 DUP4 MSTORE PUSH1 0xA PUSH1 0x40 DUP5 ADD MSTORE PUSH10 0xDCDEECC25AC4C2E8C6D PUSH1 0xB3 SHL PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x20 PUSH1 0x80 DUP5 ADD SWAP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22CE3EDD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH2 0x44B4 SWAP1 DUP3 SWAP1 PUSH2 0x269F SWAP1 PUSH2 0x44A2 SWAP1 PUSH1 0x21 DUP5 ADD PUSH2 0x3050 JUMP JUMPDEST PUSH6 0x223A74727565 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x44C5 DUP4 MLOAD DUP3 MLOAD SWAP1 PUSH2 0x1FCF JUMP JUMPDEST DUP3 GT PUSH2 0x4560 JUMPI PUSH1 0x1 SWAP3 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4556 JUMPI PUSH2 0x44FE PUSH2 0x44F0 PUSH2 0x44EA DUP4 DUP8 PUSH2 0x2CFC JUMP JUMPDEST DUP5 PUSH2 0x3E8D JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x451B PUSH2 0x450E PUSH2 0x44F0 DUP5 DUP8 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP2 AND SUB PUSH2 0x4534 JUMPI PUSH1 0x1 ADD PUSH2 0x44D1 JUMP JUMPDEST POP SWAP3 POP SWAP1 PUSH1 0x0 JUMPDEST PUSH2 0x454E JUMPI PUSH2 0x4548 SWAP1 PUSH2 0x2037 JUMP JUMPDEST SWAP1 PUSH2 0x44B8 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x453B JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x45AB PUSH2 0x458E SWAP3 PUSH2 0x459D PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH2 0x3050 PUSH1 0x20 DUP6 ADD PUSH1 0x1 SWAP1 PUSH1 0x11 PUSH1 0xF9 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH3 0x111D11 PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x3 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x45BC DUP5 MLOAD DUP5 MLOAD SWAP1 PUSH2 0x1FCF JUMP JUMPDEST DUP3 GT PUSH2 0x4700 JUMPI PUSH1 0x1 SWAP3 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x46F6 JUMPI PUSH2 0x45E7 PUSH2 0x44F0 PUSH2 0x45E1 DUP4 DUP8 PUSH2 0x2CFC JUMP JUMPDEST DUP9 PUSH2 0x3E8D JUMP JUMPDEST PUSH2 0x45F7 PUSH2 0x450E PUSH2 0x44F0 DUP5 DUP7 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP2 AND SUB PUSH2 0x4610 JUMPI PUSH1 0x1 ADD PUSH2 0x45C8 JUMP JUMPDEST POP SWAP3 POP SWAP1 PUSH1 0x0 JUMPDEST PUSH2 0x462B JUMPI JUMPDEST PUSH2 0x4625 SWAP1 PUSH2 0x2037 JUMP JUMPDEST SWAP1 PUSH2 0x45AF JUMP JUMPDEST SWAP1 PUSH2 0x4637 DUP4 MLOAD DUP4 PUSH2 0x2CFC JUMP JUMPDEST SWAP3 DUP4 JUMPDEST DUP6 MLOAD DUP2 LT DUP1 PUSH2 0x46D2 JUMPI JUMPDEST ISZERO PUSH2 0x4657 JUMPI PUSH2 0x4652 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH2 0x463A JUMP JUMPDEST SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 DUP1 DUP3 GT PUSH2 0x466A JUMPI POP POP PUSH2 0x461C JUMP JUMPDEST SWAP2 POP SWAP3 POP PUSH2 0x4680 PUSH2 0x467B DUP3 DUP6 PUSH2 0x1FCF JUMP JUMPDEST PUSH2 0x3E65 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST PUSH2 0x468E DUP4 DUP7 PUSH2 0x1FCF JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x46C9 JUMPI DUP3 PUSH1 0x1 DUP3 PUSH2 0x46B2 PUSH2 0x44F0 PUSH2 0x46AC PUSH2 0x468E SWAP7 DUP7 PUSH2 0x2CFC JUMP JUMPDEST DUP12 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x0 BYTE PUSH2 0x46BF DUP3 DUP10 PUSH2 0x3E8D JUMP JUMPDEST MSTORE8 ADD SWAP2 POP POP PUSH2 0x4684 JUMP JUMPDEST POP SWAP4 POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x46EE PUSH2 0x44F0 DUP5 DUP11 PUSH2 0x3E8D JUMP JUMPDEST AND EQ ISZERO PUSH2 0x4644 JUMP JUMPDEST POP SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x4617 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x449 PUSH2 0x27E6 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x446A JUMPI PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4730 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH1 0x60 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4749 DUP2 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x4751 PUSH2 0x4723 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP2 MSTORE PUSH2 0x4764 PUSH2 0x4723 JUMP JUMPDEST POP PUSH2 0x100 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH2 0x120 DUP3 ADD SWAP2 DUP3 LT PUSH2 0x429 JUMPI PUSH1 0x0 SWAP2 PUSH1 0x40 MSTORE MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x47D1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x47D4 JUMPI PUSH2 0x47BC SWAP2 POP PUSH1 0x60 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x4ED7 JUMP JUMPDEST POP JUMPDEST MLOAD SWAP1 PUSH2 0x47C8 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD SWAP2 PUSH2 0x5107 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x47F9 JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x47EB DUP4 MLOAD PUSH2 0x4CDE JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x5093 JUMP JUMPDEST POP PUSH2 0x47BE JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x4818 JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x4810 DUP4 MLOAD PUSH2 0x4C79 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x5025 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x4839 JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x4831 DUP4 MLOAD PUSH2 0x4C14 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x4FB5 JUMP JUMPDEST PUSH2 0x47F3 SWAP1 PUSH2 0x4847 DUP4 MLOAD PUSH2 0x4BA4 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x4F42 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH2 0x485B PUSH2 0x4723 JUMP JUMPDEST POP DUP3 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP6 ADD MLOAD DUP2 LT ISZERO PUSH2 0x48B4 JUMPI JUMPDEST PUSH1 0xC2 PUSH1 0x20 PUSH2 0x39C SWAP7 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x48AC JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP3 MSTORE PUSH2 0x48A7 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x4A09 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x488F JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP5 DUP3 DUP7 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH1 0x20 DUP2 PUSH2 0x48E6 PUSH2 0x39C SWAP9 PUSH2 0x48DF PUSH1 0xC2 SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x4A8D JUMP JUMPDEST POP DUP3 PUSH2 0x4ADF JUMP JUMPDEST POP SWAP7 POP POP POP PUSH2 0x4878 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x48FB PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4949 JUMPI JUMPDEST PUSH1 0x9F PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4941 JUMPI JUMPDEST POP POP ADD DUP1 MLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x524 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH1 0x20 DUP2 PUSH2 0x4972 DUP3 SWAP8 PUSH2 0x48DF PUSH1 0x9F SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x4A8D JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x4918 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x4987 PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x49D6 JUMPI JUMPDEST PUSH1 0xFF PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x49CE JUMPI JUMPDEST POP POP ADD DUP1 MLOAD PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x524 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x49B9 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH1 0x20 DUP2 PUSH2 0x49FF DUP3 SWAP8 PUSH2 0x48DF PUSH1 0xFF SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x4A8D JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x49A4 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x47D1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x4A38 JUMPI PUSH2 0x47BC SWAP2 POP PUSH1 0x40 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x4ED7 JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x4A4F JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x47EB DUP4 MLOAD PUSH2 0x4E72 JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x4A66 JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x4810 DUP4 MLOAD PUSH2 0x4E0D JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x4A7F JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x4831 DUP4 MLOAD PUSH2 0x4DA8 JUMP JUMPDEST PUSH2 0x47F3 SWAP1 PUSH2 0x4847 DUP4 MLOAD PUSH2 0x4D43 JUMP JUMPDEST SWAP1 PUSH2 0x4A96 PUSH2 0x4723 JUMP JUMPDEST POP PUSH1 0x1F DUP2 AND DUP1 PUSH2 0x4AC5 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 MSTORE PUSH1 0x0 DUP3 MSTORE DUP2 ADD PUSH1 0x20 ADD SWAP1 DUP2 LT PUSH2 0x429 JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 SUB PUSH1 0x20 DUP2 GT PUSH2 0x524 JUMPI DUP2 ADD DUP1 SWAP2 GT PUSH2 0x524 JUMPI CODESIZE PUSH2 0x4AA1 JUMP JUMPDEST SWAP1 PUSH2 0x4AE8 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD SWAP1 PUSH2 0x4AF4 PUSH2 0x4723 JUMP JUMPDEST POP PUSH2 0x4B02 DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x5100 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH2 0x4B10 DUP2 DUP5 PUSH2 0x2CFC JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x20 DUP7 ADD MLOAD DUP3 GT PUSH2 0x4B8D JUMPI JUMPDEST PUSH1 0x20 SWAP2 DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x4B85 JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x4B5D JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x4B79 PUSH2 0x4B73 PUSH2 0x4B7F SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2CEE JUMP JUMPDEST SWAP5 PUSH2 0x2CEE JUMP JUMPDEST SWAP3 PUSH2 0x1FC0 JUMP JUMPDEST SWAP1 PUSH2 0x4B38 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x4B33 JUMP JUMPDEST PUSH2 0x4B9F PUSH2 0x4B99 DUP4 PUSH2 0x2323 JUMP JUMPDEST DUP8 PUSH2 0x51B3 JUMP JUMPDEST PUSH2 0x4B1F JUMP JUMPDEST PUSH2 0x4BAC PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4BE5 JUMPI JUMPDEST PUSH1 0x7B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4C0E SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP DUP5 PUSH2 0x4ADF JUMP JUMPDEST POP PUSH2 0x4BC9 JUMP JUMPDEST PUSH2 0x4C1C PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4C51 JUMPI JUMPDEST PUSH1 0x7A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4C73 SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4C39 JUMP JUMPDEST PUSH2 0x4C81 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4CB6 JUMPI JUMPDEST PUSH1 0x79 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4CD8 SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4C9E JUMP JUMPDEST PUSH2 0x4CE6 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4D1B JUMPI JUMPDEST PUSH1 0x78 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4D3D SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4D03 JUMP JUMPDEST PUSH2 0x4D4B PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4D80 JUMPI JUMPDEST PUSH1 0x5B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4DA2 SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4D68 JUMP JUMPDEST PUSH2 0x4DB0 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4DE5 JUMPI JUMPDEST PUSH1 0x5A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4E07 SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4DCD JUMP JUMPDEST PUSH2 0x4E15 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4E4A JUMPI JUMPDEST PUSH1 0x59 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4E6C SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4E32 JUMP JUMPDEST PUSH2 0x4E7A PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4EAF JUMPI JUMPDEST PUSH1 0x58 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4ED1 SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4E97 JUMP JUMPDEST SWAP1 PUSH2 0x4EE0 PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP3 LT ISZERO PUSH2 0x4F13 JUMPI JUMPDEST PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4F3C SWAP1 PUSH2 0x4F35 DUP7 MLOAD SWAP2 DUP8 PUSH2 0x4A8D JUMP JUMPDEST POP DUP6 PUSH2 0x4ADF JUMP JUMPDEST POP PUSH2 0x4EFD JUMP JUMPDEST SWAP1 PUSH2 0x4F4B PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x8 ADD SWAP2 DUP3 PUSH1 0x8 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x4F8D JUMPI JUMPDEST PUSH1 0x8 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4FAF SWAP1 PUSH2 0x4F35 DUP7 MLOAD SWAP2 DUP8 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4F68 JUMP JUMPDEST SWAP1 PUSH2 0x4FBE PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x4 ADD SWAP2 DUP3 PUSH1 0x4 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x4FFD JUMPI JUMPDEST PUSH1 0x4 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH4 0xFFFFFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x501F SWAP1 PUSH2 0x4F35 DUP7 MLOAD SWAP2 DUP8 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4FDB JUMP JUMPDEST SWAP1 PUSH2 0x502E PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x2 ADD SWAP2 DUP3 PUSH1 0x2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x506B JUMPI JUMPDEST PUSH1 0x2 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH2 0xFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x508D SWAP1 PUSH2 0x4F35 DUP7 MLOAD SWAP2 DUP8 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x504B JUMP JUMPDEST SWAP1 PUSH2 0x509C PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x1 ADD SWAP2 DUP3 PUSH1 0x1 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x50D8 JUMPI JUMPDEST PUSH1 0x1 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0xFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x50FA SWAP1 PUSH2 0x4F35 DUP7 MLOAD SWAP2 DUP8 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x50B9 JUMP JUMPDEST ISZERO PUSH2 0x429 JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x5111 PUSH2 0x4723 JUMP JUMPDEST POP PUSH2 0x511F DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x5100 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH1 0x20 PUSH2 0x512F DUP3 DUP6 PUSH2 0x2CFC JUMP JUMPDEST SWAP3 DUP2 SWAP4 DUP3 DUP8 ADD MLOAD DUP2 GT PUSH2 0x519C JUMPI JUMPDEST DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x5194 JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x5178 JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x4B79 PUSH2 0x4B73 PUSH2 0x518E SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2CEE JUMP JUMPDEST SWAP1 PUSH2 0x5153 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x514E JUMP JUMPDEST PUSH2 0x51AE PUSH2 0x51A8 DUP3 PUSH2 0x2323 JUMP JUMPDEST DUP9 PUSH2 0x51B3 JUMP JUMPDEST PUSH2 0x513D JUMP JUMPDEST SWAP1 PUSH2 0x47D1 SWAP2 PUSH2 0x51C4 DUP2 MLOAD SWAP3 DUP3 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4ADF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B ADDRESS 0xB4 TIMESTAMP ADDRESS SWAP10 NOT SHL MSTORE8 0xB0 LOG1 0xBE 0xD0 0xE3 PUSH10 0xE3FBA230F16D9AC9A227 SLT SWAP7 0xB0 POP SDIV 0x26 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"406:12273:20:-:0;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;6254:10:14;;598:22:9;406:12273:20;;-1:-1:-1;406:12273:20;;-1:-1:-1;;;;;;406:12273:20;;;6254:10:14;406:12273:20;;;;;-1:-1:-1;;;;;406:12273:20;;;6276:29:14;;6272:70;;406:12273:20;;;;;;;;;;6347:57:14;406:12273:20;;;6347:57:14;406:12273:20;;;769:44:7;2366:4:21;;406:12273:20;2527:7:21;406:12273:20;;;;;2966:1:21;406:12273:20;2966:1:21;406:12273:20;;;2966:1:21;406:12273:20;2966:1:21;406:12273:20;4133:22:21;406:12273:20;;;;;;;;;;;;;;;;;;;;2527:7:21;406:12273:20;4226:33:21;406:12273:20;;;4269:57:21;6254:10:14;-1:-1:-1;406:12273:20;4336:17:21;406:12273:20;;;;-1:-1:-1;406:12273:20;;;;;;;;6254:10:14;406:12273:20;4382:19:21;406:12273:20;;;4382:19:21;406:12273:20;4433:15:21;4411:37;406:12273:20;1813:2;;406:12273;6347:57:14;1856:1:20;406:12273;2966:1:21;1898::20;406:12273;;;2827:28;406:12273;;;2827:28;406:12273;;;;;;;;;;;;;;;;;;;;;;;;;;6272:70:14;406:12273:20;;-1:-1:-1;;;6322:13:14;;;;;406:12273:20;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;;;;-1:-1:-1;406:12273:20;;;;;-1:-1:-1;406:12273:20;;;;-1:-1:-1;;;;;406:12273:20;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4674,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn_calldata":{"entryPoint":2363,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_bytes":{"entryPoint":1010,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":4823,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_string":{"entryPoint":1355,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":8220,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint32":{"entryPoint":2208,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256_string_uint256_bytes32_bool_bool":{"entryPoint":3900,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":9341,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_address_uint256_uint256_bytes32_bool":{"entryPoint":6332,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":6280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_storage":{"entryPoint":15011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_bytes32_25706":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes":{"entryPoint":14124,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":10670,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_stringliteral_c5d2":{"entryPoint":14360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_array_bytes32_dyn_uint256_address":{"entryPoint":10770,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_bytes32_uint256_string_storage":{"entryPoint":9139,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_string_uint256":{"entryPoint":14256,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":12115,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":3368,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage_uint256":{"entryPoint":12138,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":1748,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_09d0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0c1a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_167f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1956":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1ae6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1d9a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_233e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2bf6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4eb6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_5411":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_665d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6e8b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6e9f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7904":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8360":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9186":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_943d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9f50":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a7ba":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a822":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_abe5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ac63":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_b36b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bec3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c1a5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c73d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_dddd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e5e2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e862":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e92f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ec20":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ecb4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f1f3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fe38":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_NovaInstance":{"entryPoint":7490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_NovaInstance_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_ProofRequest":{"entryPoint":1785,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_RandomWordsRequest":{"entryPoint":12620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_bytes":{"entryPoint":15148,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_array_bytes32_dyn":{"entryPoint":10479,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_string_dyn":{"entryPoint":12044,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_array_array_string_dyn_25678":{"entryPoint":11994,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_array_bytes":{"entryPoint":15973,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Request":{"entryPoint":11937,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_buffer":{"entryPoint":18211,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":939,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_25571":{"entryPoint":911,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_25691":{"entryPoint":926,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_38679":{"entryPoint":952,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":10214,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":5523,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":983,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage_25538":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_25559":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":10529,"id":null,"parameterSlots":3,"returnSlots":2},"calldata_array_index_access_uint256_dyn_calldata":{"entryPoint":11450,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":11516,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256_25721":{"entryPoint":11459,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_25730":{"entryPoint":11473,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_25748":{"entryPoint":11487,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_25770":{"entryPoint":11502,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":8995,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":8143,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256_25728":{"entryPoint":8113,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256_25769":{"entryPoint":8128,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":7970,"id":null,"parameterSlots":3,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_25537":{"entryPoint":7787,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_25558":{"entryPoint":7884,"id":null,"parameterSlots":2,"returnSlots":0},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":7764,"id":null,"parameterSlots":2,"returnSlots":0},"convert_uint8_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":3873,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string_25676":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":1},"copy_array_from_storage_to_memory_string_25687":{"entryPoint":3714,"id":null,"parameterSlots":0,"returnSlots":1},"copy_array_to_storage_from_array_bytes32_dyn_to_array_bytes32_dyn":{"entryPoint":10848,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_to_storage_from_array_uint256_dyn_to_array_uint256_dyn":{"entryPoint":9017,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_to_storage_from_array_uint256_to_array_uint":{"entryPoint":9304,"id":null,"parameterSlots":2,"returnSlots":0},"copy_literal_to_memory_3549a38a23cb1774056dbdf96dbc8ece30f733b8dd04641913d46a279936ce0b":{"entryPoint":16488,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_4b31cabbe5862282e443c4ac3f4c14761a1d2ba88a3c858a2a36f7758f453a38":{"entryPoint":14141,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_65ea7731216d8d2930c089d4d135a485e0d7bab5e0ea8346df02f7b7da161f54":{"entryPoint":14319,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_67ae3148ccb475de270e1abfe65d7d4ba2786e229def1b2906f5f7b5fb445a7f":{"entryPoint":14216,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_6f40e170a7d7da84c7febfa6e1da1bba36ef52c0d32d0501f35b2ff37b7dfb86":{"entryPoint":11529,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_829231cb167e02f32beea96e7533af0ebdf9e1f7ccf9a7270e717c48fe6f0e8e":{"entryPoint":16298,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_82e791741c7274b123c7599c398a59441cc81a8ed229387daff72172292ba931":{"entryPoint":16221,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_a5bd20250df117ee1576cde77471907f0792dabd126e96e46ea0b2c71299ea1e":{"entryPoint":14286,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_cc86ba7285553398a0ce4483ea9702f5bf2fa4bc5afa4b6071eafcc991f7c173":{"entryPoint":14176,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_d66480a2fe9622f21e4ac7cf8871545e676a686cade1079d79e2fb1df6a4f3ac":{"entryPoint":16453,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_e5edaa566e23eea054bbd292b7924839b5627321873e67e30cd0052468eaf099":{"entryPoint":16378,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_f7e3126f87228afb82c9b18537eed25aaeb8171a78814781c26ed2cfeff27e69":{"entryPoint":16344,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_fc4236fa30b862c671ead413b1a0f61e653ce5b99e29091ee0dc6fc114ee9cc8":{"entryPoint":16410,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1713,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_NovaInstance_to_struct_NovaInstance":{"entryPoint":15063,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_ProofRequest_to_struct_ProofRequest":{"entryPoint":8262,"id":null,"parameterSlots":2,"returnSlots":0},"external_fun_acceptOwnership":{"entryPoint":6089,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_aggregateProofs":{"entryPoint":6944,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_aggregatedProofHashes":{"entryPoint":4415,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_authorizedCallers":{"entryPoint":5071,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_batchCounter":{"entryPoint":5700,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_checkUpkeep":{"entryPoint":5966,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_continueRecursiveFolding":{"entryPoint":5730,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_contractOwner":{"entryPoint":6903,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_functionsRequestToProofId":{"entryPoint":5134,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getFoldedInstance":{"entryPoint":7569,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getProofRequest":{"entryPoint":1885,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRecursiveProofBatch":{"entryPoint":6393,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getSubscriptionId":{"entryPoint":7185,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_groth16Verifier":{"entryPoint":2139,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_handleOracleFulfillment":{"entryPoint":1100,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_lastUpkeepTimestamp":{"entryPoint":5493,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_maxProofsPerBatch":{"entryPoint":5178,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_maxRecursionDepth":{"entryPoint":4793,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_minProofsPerBatch":{"entryPoint":7215,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_novaVerifier":{"entryPoint":4092,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":6588,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_performUpkeep":{"entryPoint":4896,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_proofRequests":{"entryPoint":3971,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_proofToBatch":{"entryPoint":1669,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_rawFulfillRandomWords":{"entryPoint":2411,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_recursiveProofBatches":{"entryPoint":3116,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_requestCounter":{"entryPoint":6746,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_requestProofVerification":{"entryPoint":5208,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_s_vrfCoordinator":{"entryPoint":6776,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setAuthorizedCaller":{"entryPoint":4696,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setCoordinator":{"entryPoint":6629,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFunctionsConfig":{"entryPoint":2227,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFunctionsSource":{"entryPoint":4133,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setProofServiceUrl":{"entryPoint":1397,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setUpkeepInterval":{"entryPoint":6043,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setVRFConfig":{"entryPoint":6817,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_startNovaFolding":{"entryPoint":5546,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":7245,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateRecursionParams":{"entryPoint":2789,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_upkeepInterval":{"entryPoint":5463,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_usedNullifiers":{"entryPoint":2740,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_usedProofHashes":{"entryPoint":7136,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verifiedProofs":{"entryPoint":2090,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verifyNovaProof":{"entryPoint":4483,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3310,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":878,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_25541":{"entryPoint":765,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_25751":{"entryPoint":797,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_38673":{"entryPoint":824,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_38674":{"entryPoint":851,"id":null,"parameterSlots":1,"returnSlots":0},"fun_aggregateProofs_inner":{"entryPoint":10989,"id":null,"parameterSlots":4,"returnSlots":1},"fun_append":{"entryPoint":19167,"id":1322,"parameterSlots":2,"returnSlots":1},"fun_appendInt":{"entryPoint":20405,"id":1521,"parameterSlots":2,"returnSlots":1},"fun_appendInt_25760":{"entryPoint":20290,"id":1521,"parameterSlots":2,"returnSlots":1},"fun_appendInt_25764":{"entryPoint":20517,"id":1521,"parameterSlots":2,"returnSlots":1},"fun_appendInt_25766":{"entryPoint":20627,"id":1521,"parameterSlots":2,"returnSlots":1},"fun_appendUint8":{"entryPoint":20183,"id":1363,"parameterSlots":2,"returnSlots":1},"fun_appendUint8_38699":{"entryPoint":19364,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_38700":{"entryPoint":19476,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_38701":{"entryPoint":19577,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_38702":{"entryPoint":19678,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_38706":{"entryPoint":19779,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_38707":{"entryPoint":19880,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_38708":{"entryPoint":19981,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_38709":{"entryPoint":20082,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_append_1302":{"entryPoint":20743,"id":1302,"parameterSlots":3,"returnSlots":1},"fun_argsToBytes":{"entryPoint":17205,"id":2706,"parameterSlots":1,"returnSlots":1},"fun_create":{"entryPoint":18237,"id":1603,"parameterSlots":0,"returnSlots":1},"fun_encodeCBOR":{"entryPoint":16525,"id":471,"parameterSlots":1,"returnSlots":1},"fun_endSequence":{"entryPoint":18812,"id":1946,"parameterSlots":1,"returnSlots":0},"fun_fulfillRequest":{"entryPoint":14396,"id":5241,"parameterSlots":3,"returnSlots":0},"fun_getChainId":{"entryPoint":15601,"id":4984,"parameterSlots":1,"returnSlots":1},"fun_handleNovaResponse":{"entryPoint":15171,"id":4187,"parameterSlots":3,"returnSlots":0},"fun_init":{"entryPoint":19085,"id":1147,"parameterSlots":2,"returnSlots":1},"fun_initializeRequest":{"entryPoint":18188,"id":516,"parameterSlots":2,"returnSlots":0},"fun_parseJsonBool":{"entryPoint":17532,"id":5329,"parameterSlots":2,"returnSlots":1},"fun_parseJsonString":{"entryPoint":17768,"id":5485,"parameterSlots":2,"returnSlots":1},"fun_requestProofGeneration":{"entryPoint":12166,"id":4898,"parameterSlots":2,"returnSlots":0},"fun_requestRandomBlock":{"entryPoint":12707,"id":4701,"parameterSlots":1,"returnSlots":0},"fun_requestRecursiveProofGeneration":{"entryPoint":12933,"id":3909,"parameterSlots":1,"returnSlots":0},"fun_resize":{"entryPoint":20915,"id":1200,"parameterSlots":2,"returnSlots":0},"fun_sendNovaFunctionsRequest":{"entryPoint":17262,"id":4000,"parameterSlots":4,"returnSlots":0},"fun_sendRequest":{"entryPoint":16987,"id":809,"parameterSlots":4,"returnSlots":1},"fun_setArgs":{"entryPoint":16190,"id":652,"parameterSlots":2,"returnSlots":0},"fun_setCoordinator_inner":{"entryPoint":10233,"id":null,"parameterSlots":1,"returnSlots":0},"fun_startArray":{"entryPoint":18672,"id":1880,"parameterSlots":1,"returnSlots":0},"fun_startNovaFolding":{"entryPoint":9358,"id":3851,"parameterSlots":1,"returnSlots":1},"fun_uint256ToString":{"entryPoint":16030,"id":5920,"parameterSlots":1,"returnSlots":1},"fun_verifyZKProof":{"entryPoint":14013,"id":5510,"parameterSlots":2,"returnSlots":1},"fun_writeBytes":{"entryPoint":18953,"id":1788,"parameterSlots":2,"returnSlots":0},"fun_writeString":{"entryPoint":18317,"id":1821,"parameterSlots":2,"returnSlots":0},"fun_writeUInt256":{"entryPoint":18511,"id":1657,"parameterSlots":2,"returnSlots":0},"increment_uint256":{"entryPoint":8247,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256_25574":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256_25630":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256_25632":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256_25658":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256_25662":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256_25663":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_uint256_of_uint256_25690":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":16013,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":8780,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_uint256_dyn_25679":{"entryPoint":8698,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn_25681":{"entryPoint":8716,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn_25683":{"entryPoint":8732,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn_25685":{"entryPoint":8748,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn_25688":{"entryPoint":8764,"id":null,"parameterSlots":1,"returnSlots":1},"mod_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8091,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":16261,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4393,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":743,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_NovaInstance":{"entryPoint":3031,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_t_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper":{"entryPoint":20736,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_047e":{"entryPoint":8156,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_09d5":{"entryPoint":10594,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_17d9":{"entryPoint":7707,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3d04":{"entryPoint":10684,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5f5c":{"entryPoint":10062,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8b2e":{"entryPoint":10403,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_aa51":{"entryPoint":14048,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_affd":{"entryPoint":10336,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_dbb8":{"entryPoint":8866,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_dcf0":{"entryPoint":8926,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e658":{"entryPoint":8800,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_eba8":{"entryPoint":8028,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ee60":{"entryPoint":10138,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f81b":{"entryPoint":8632,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":8235,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_address_to_address_25579":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_address_to_address_25580":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_25634":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_25660":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_25705":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_25707":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_t_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32_25551":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32_25552":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32_25553":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32_25565":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32_25570":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_CodeLanguage":{"entryPoint":16334,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_Location":{"entryPoint":16283,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool_25723":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_uint16":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"754":[{"length":32,"start":1180},{"length":32,"start":17075}],"4490":[{"length":32,"start":2161}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA76175 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x1098241B EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x10A14C40 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x152A9526 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x176D80C4 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x19C813BE EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x1BD6447A EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x206137AA EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x2091F938 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x223B6637 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x25825746 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x28606775 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x36E0025F EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x39A9E4B3 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x3F5EF0DE EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x454BBD29 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x457B2E41 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x536FFF6C EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x56959332 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x57AABCAC EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x57EFE032 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x5A74373C EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x624CFFD4 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x62625BC1 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x68233EEF EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x683DD777 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x72E4C9F6 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x84A088E5 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x973A814E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xA9431F23 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xB5CCE133 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xD175D81A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xD87318B2 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xDE3D9FB7 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xE2ECF1E2 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x210 JUMPI PUSH4 0xFA0C7A18 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D91 JUMP JUMPDEST PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0x1C2F JUMP JUMPDEST PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x1B20 JUMP JUMPDEST PUSH2 0x1AF7 JUMP JUMPDEST PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0x19E5 JUMP JUMPDEST PUSH2 0x19BC JUMP JUMPDEST PUSH2 0x18F9 JUMP JUMPDEST PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x179B JUMP JUMPDEST PUSH2 0x174E JUMP JUMPDEST PUSH2 0x1662 JUMP JUMPDEST PUSH2 0x1644 JUMP JUMPDEST PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x1575 JUMP JUMPDEST PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x143A JUMP JUMPDEST PUSH2 0x140E JUMP JUMPDEST PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x113F JUMP JUMPDEST PUSH2 0x1025 JUMP JUMPDEST PUSH2 0xFFC JUMP JUMPDEST PUSH2 0xF83 JUMP JUMPDEST PUSH2 0xC2C JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x39C DUP3 PUSH2 0x2FD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x39C DUP3 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x39C DUP3 PUSH2 0x353 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x318 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x3FE DUP3 PUSH2 0x3D7 JUMP JUMPDEST SWAP2 PUSH2 0x40C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x36E JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x429 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x429 JUMPI DUP2 PUSH1 0x20 PUSH2 0x449 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x3F2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x480 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x42E JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x499 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x42E JUMP JUMPDEST SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x539 JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP2 PUSH2 0x2710 DUP4 GT PUSH1 0x0 EQ PUSH2 0x529 JUMPI PUSH2 0x270F NOT DUP4 ADD SWAP3 DUP4 GT PUSH2 0x524 JUMPI PUSH2 0x4FD SWAP3 PUSH2 0x3B43 JUMP JUMPDEST PUSH32 0x85E1543BF2F84FE80C6BADBCE3648C8539AD1DF4D2B3D822938CA0538BE727E6 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0x534 SWAP3 POP DUP4 PUSH2 0x383C JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC6829F83 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x429 JUMPI PUSH2 0x449 SWAP2 PUSH1 0x4 ADD PUSH2 0x42E JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x583 CALLDATASIZE PUSH2 0x54B JUMP JUMPDEST PUSH2 0x598 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x318 JUMPI PUSH2 0x5BC DUP2 PUSH2 0x5B7 PUSH1 0xD SLOAD PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x5FE JUMPI POP DUP2 SWAP1 PUSH2 0x5EE SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x5F3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5D9 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x631 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x66D JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x654 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x649 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x636 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6C4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6B4 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x6ED DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xC0 PUSH2 0x733 PUSH1 0x40 DUP6 ADD MLOAD DUP4 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x826 PUSH1 0x40 DUP1 PUSH1 0xC0 DUP2 MLOAD PUSH2 0x781 DUP2 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 DUP1 SWAP4 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x81C PUSH1 0xFF PUSH1 0x5 DUP4 MLOAD SWAP5 PUSH2 0x7C8 DUP7 PUSH2 0x2FD JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x7EB PUSH1 0x2 DUP3 ADD PUSH2 0xF21 JUMP JUMPDEST DUP7 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x429 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x429 JUMPI PUSH2 0x8DF PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x8F4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x50 SHL NOT AND PUSH1 0x50 SWAP4 SWAP1 SWAP4 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x50 SHL AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x90 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFFFFFFFF PUSH1 0x90 SHL AND OR SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xB SSTORE STOP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x429 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x429 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x429 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x99E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x93B JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xA96 JUMPI POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xA5B JUMPI PUSH2 0x3E7 NOT NUMBER ADD NUMBER DUP2 GT PUSH2 0x524 JUMPI DUP5 PUSH2 0xA43 PUSH2 0xA22 PUSH32 0x2374D5481494AD7962D4BD1B98B91E9F3117C9B66533B2804BE3D76C41A49088 SWAP4 PUSH2 0xA1C PUSH2 0xA13 DUP10 PUSH2 0xA59 SWAP12 PUSH2 0x2CBA JUMP JUMPDEST CALLDATALOAD PUSH2 0x3E8 SWAP1 MOD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2CFC JUMP JUMPDEST SWAP6 DUP7 SWAP3 DUP4 PUSH1 0x3 PUSH2 0xA3C DUP10 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE LOG2 PUSH2 0x2F86 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A5908159491881C995C5D595CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0xB16 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xBCC JUMPI JUMPDEST ISZERO PUSH2 0xB93 JUMPI PUSH1 0x2 DUP4 LT ISZERO DUP1 PUSH2 0xB89 JUMPI JUMPDEST ISZERO PUSH2 0xB4E JUMPI PUSH2 0xA59 SWAP3 PUSH2 0xB44 PUSH2 0xB49 SWAP3 PUSH1 0x18 SSTORE JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH1 0x1A SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C69642062617463682073697A6573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 DUP4 GT ISZERO PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x92DCECC2D8D2C840DAC2F040C8CAE0E8D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 GT ISZERO PUSH2 0xB1F JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0xBE4 DUP2 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF PUSH1 0x6 DUP4 SWAP6 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH2 0x180 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH2 0xCE4 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0xC PUSH2 0xC82 PUSH1 0x5 DUP7 ADD PUSH2 0xBD7 JUMP JUMPDEST SWAP5 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH1 0xC0 DUP1 SWAP2 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xD1E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xD08 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xCFD JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 PUSH2 0xD37 DUP3 PUSH2 0xCEE JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xD9F JUMPI POP PUSH1 0x1 EQ PUSH2 0xD5E JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST SWAP1 SWAP4 SWAP5 SWAP6 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0xD8B JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xD57 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0xD73 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xC SLOAD SWAP2 PUSH2 0xDD2 DUP4 PUSH2 0xCEE JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE5E JUMPI POP PUSH1 0x1 EQ PUSH2 0xDFD JUMPI JUMPDEST POP POP PUSH2 0x39C SWAP3 POP SUB DUP4 PUSH2 0x36E JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xE46 JUMPI POP PUSH2 0x39C SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0xDEF JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0xE2B JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x39C SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xD SLOAD SWAP2 PUSH2 0xE96 DUP4 PUSH2 0xCEE JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xE5E JUMPI POP PUSH1 0x1 EQ PUSH2 0xEC0 JUMPI POP POP PUSH2 0x39C SWAP3 POP SUB DUP4 PUSH2 0x36E JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xF09 JUMPI POP PUSH2 0x39C SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0xDEF JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0xEEE JUMP JUMPDEST SWAP1 PUSH2 0x39C PUSH2 0xF35 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xD28 JUMP JUMPDEST SUB DUP4 PUSH2 0x36E JUMP JUMPDEST SWAP6 SWAP3 PUSH1 0xC0 SWAP6 SWAP3 PUSH2 0xF6A SWAP3 SWAP10 SWAP9 SWAP6 SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xE0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH2 0x826 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xFD4 DUP6 PUSH2 0xFCD DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0xD28 JUMP JUMPDEST SUB DUP7 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x5 PUSH1 0x4 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0xFF DUP1 DUP8 PUSH1 0x8 SHR AND SWAP7 AND SWAP5 DUP9 PUSH2 0xF3C JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x1B SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x1033 CALLDATASIZE PUSH2 0x54B JUMP JUMPDEST PUSH2 0x1048 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x318 JUMPI PUSH2 0x106C DUP2 PUSH2 0x1067 PUSH1 0xC SLOAD PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x10A2 JUMPI POP DUP2 SWAP1 PUSH2 0x109D SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x5F3 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xC SSTORE STOP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x10D5 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1111 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x10F8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x10ED JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x10DA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x0 SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x117F JUMPI DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x11B6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x42E JUMP JUMPDEST SWAP1 DUP1 ISZERO ISZERO DUP1 PUSH2 0x1236 JUMPI JUMPDEST PUSH2 0x11C9 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xC DUP3 ADD SLOAD AND ISZERO PUSH2 0x11FB JUMPI DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP2 EQ DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10985D18DA081B9BDD0818DBDB5C1B195D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD DUP2 GT ISZERO PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x429 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x1271 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x429 JUMPI PUSH1 0x13 SLOAD PUSH2 0xA59 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x129A SWAP1 DUP4 AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x18 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x429 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x429 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x429 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x429 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x132E CALLDATASIZE PUSH2 0x12D7 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0x524 JUMPI PUSH2 0x1349 SWAP1 PUSH1 0x7 SLOAD LT PUSH2 0x1FDC JUMP JUMPDEST PUSH2 0x1352 TIMESTAMP PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x2BF7F019 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x657468657265756D PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x84 DUP2 ADD SUB DUP2 PUSH1 0x0 ADDRESS GAS CALL DUP1 ISZERO PUSH2 0x13CA JUMPI PUSH2 0x13A2 JUMPI STOP JUMPDEST PUSH2 0xA59 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13C3 JUMPI JUMPDEST PUSH2 0x13BB DUP2 DUP4 PUSH2 0x36E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x201C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x202B JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13F0 PUSH2 0x1242 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x1A SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x148B PUSH2 0x826 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x42E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x14F1 PUSH2 0x149C PUSH1 0x5 SLOAD PUSH2 0x2037 JUMP JUMPDEST SWAP3 PUSH2 0x14A6 DUP5 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x14AE PUSH2 0x38F JUMP JUMPDEST CALLER DUP2 MSTORE SWAP1 TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x14EC DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2046 JUMP JUMPDEST DUP1 PUSH2 0x1548 JUMPI PUSH2 0x14FF DUP3 PUSH2 0x31A3 JUMP JUMPDEST DUP2 PUSH32 0x7EF8CA77FDC89C79F093F2A6B2348B1FCDA0BEB941CE31CE9F2D9D260C4DB9D2 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1535 CALLER SWAP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1552 DUP2 DUP4 PUSH2 0x2F86 JUMP JUMPDEST PUSH2 0x14FF JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x318 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x429 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x429 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x15E7 DUP3 PUSH2 0x1593 JUMP JUMPDEST SWAP2 PUSH2 0x15F5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x36E JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x429 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1635 JUMPI PUSH2 0x826 PUSH2 0x1625 DUP6 PUSH2 0x248E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1612 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x1742 JUMPI JUMPDEST PUSH2 0x1688 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1707 JUMPI DUP1 PUSH2 0x1702 PUSH2 0x16C4 PUSH2 0xA59 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0xC DUP3 ADD SWAP2 PUSH2 0x16DE PUSH2 0x16D9 DUP5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x274E JUMP JUMPDEST ADD PUSH2 0x16F6 DUP2 SLOAD PUSH2 0x16F1 PUSH1 0x18 SLOAD DUP3 LT PUSH2 0x279A JUMP JUMPDEST PUSH2 0x2037 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737BA103130BA31B4103932B8BAB2B9BA32B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD DUP2 GT ISZERO PUSH2 0x167F JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x175C CALLDATASIZE PUSH2 0x12D7 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x7 SLOAD LT PUSH1 0x40 MLOAD SWAP1 PUSH2 0x177B DUP3 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0x826 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x17C1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1885 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER SUB PUSH2 0x1847 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x18A8 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x189A JUMP JUMPDEST SWAP5 SWAP2 SWAP7 SWAP6 SWAP3 PUSH2 0x18D6 PUSH1 0xA0 SWAP6 SWAP3 PUSH1 0xC0 DUP9 MSTORE PUSH1 0xC0 DUP9 ADD SWAP1 PUSH2 0x1888 JUMP JUMPDEST SWAP8 PUSH1 0x1 DUP1 DUP8 SHL SUB AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x19B0 JUMPI JUMPDEST PUSH2 0x1920 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP5 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0xC DUP9 ADD SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH1 0x20 DUP11 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP10 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x199B JUMPI POP POP POP POP POP PUSH2 0x198F DUP6 PUSH2 0x826 SWAP7 SWAP8 SWAP9 SUB DUP8 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x18BC JUMP JUMPDEST DUP5 SLOAD DUP13 MSTORE SWAP11 DUP12 ADD SWAP11 SWAP4 DUP4 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1972 JUMP JUMPDEST POP PUSH1 0x17 SLOAD DUP2 GT ISZERO PUSH2 0x1917 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x19FE PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x1A4C JUMPI JUMPDEST PUSH2 0x1A24 JUMPI PUSH2 0xA59 DUP4 PUSH2 0x27F9 JUMP JUMPDEST PUSH1 0x64 SWAP3 POP PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x61DB9C1 PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 PUSH1 0x2 SLOAD AND CALLER EQ ISZERO PUSH2 0x1A17 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x44 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x429 JUMPI PUSH2 0x1AD8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1E1B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x9 SSTORE PUSH4 0xFFFFFFFF NOT PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x1B51 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x93B JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x429 JUMPI PUSH2 0x1B6A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x93B JUMP JUMPDEST SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1BCC JUMPI JUMPDEST ISZERO PUSH2 0x1B96 JUMPI PUSH2 0x826 SWAP4 PUSH2 0x1625 SWAP4 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B84 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH1 0x20 PUSH1 0x19 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x1C66 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 CALLER DUP4 SWAP1 SUB PUSH2 0x1D04 JUMPI AND SWAP1 CALLER DUP3 EQ PUSH2 0x1CBF JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x39C SWAP1 SWAP3 SWAP2 SWAP3 PUSH1 0xE0 DUP2 ADD SWAP4 PUSH1 0xC0 DUP1 SWAP2 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x429 JUMPI PUSH2 0x826 PUSH2 0x1E03 PUSH1 0x5 PUSH1 0x40 PUSH1 0xC0 PUSH1 0x4 CALLDATALOAD DUP3 MLOAD PUSH2 0x1DBC DUP2 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP2 DUP5 DUP1 SWAP4 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE DUP1 ISZERO ISZERO DUP1 PUSH2 0x1E0F JUMPI JUMPDEST PUSH2 0x1DF5 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE KECCAK256 ADD PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1D42 JUMP JUMPDEST POP PUSH1 0x17 SLOAD DUP2 GT ISZERO PUSH2 0x1DEC JUMP JUMPDEST ISZERO PUSH2 0x1E22 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1E5F JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E54 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1E78 JUMPI POP POP JUMP JUMPDEST PUSH2 0x39C SWAP2 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1EC2 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1E54 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1ED9 JUMPI POP POP JUMP JUMPDEST PUSH2 0x39C SWAP2 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1EC2 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1E54 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1F31 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x39C SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1EC2 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1E54 JUMP JUMPDEST ISZERO PUSH2 0x1F63 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A590818985D18DA081251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST PUSH1 0x1F NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1FE3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155C1AD9595C081B9BDD081B9959591959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x429 JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x524 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x2 DUP4 ADD SWAP2 PUSH1 0x40 DUP6 ADD MLOAD DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x318 JUMPI PUSH2 0x20A1 DUP5 PUSH2 0x209B DUP8 SLOAD PUSH2 0xCEE JUMP JUMPDEST DUP8 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0x2139 JUMPI POP POP SWAP4 PUSH2 0x2123 SWAP4 PUSH2 0x20E1 DUP5 PUSH1 0xC0 SWAP6 PUSH1 0x5 SWAP6 PUSH2 0x39C SWAP11 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x5F3 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 PUSH2 0x211C PUSH2 0x210A PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 PUSH2 0x2151 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x21A1 JUMPI POP POP POP DUP5 PUSH1 0x5 SWAP5 PUSH2 0x39C SWAP10 SWAP9 SWAP5 PUSH2 0x2123 SWAP9 SWAP5 PUSH1 0xC0 SWAP9 PUSH1 0x1 SWAP6 LT PUSH2 0x2188 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x20E4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x217B JUMP JUMPDEST DUP5 DUP7 ADD MLOAD DUP8 SSTORE SWAP6 DUP7 ADD SWAP6 SWAP5 DUP2 ADD SWAP5 SWAP2 DUP2 ADD SWAP2 PUSH2 0x2156 JUMP JUMPDEST ISZERO PUSH2 0x21BF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081C1C9BDBD98818DBDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2207 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1129 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x4 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2267 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141C9BDBD9881B9BDD0818DBDB5C1B195D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22A9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B210383937B7B3 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22E5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xA0E4DEDECC40C2D8E4CAC2C8F240D2DC40C4C2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x524 JUMPI JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x318 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0x318 JUMPI DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x2395 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 SWAP2 ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2383 JUMPI POP POP POP POP POP JUMP JUMPDEST DUP4 MLOAD DUP4 DUP3 ADD SSTORE SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2375 JUMP JUMPDEST PUSH2 0x23AD SWAP1 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1E54 JUMP JUMPDEST CODESIZE PUSH2 0x2362 JUMP JUMPDEST SWAP3 SWAP1 DUP4 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 SWAP3 PUSH1 0x0 SWAP4 DUP3 SLOAD PUSH2 0x23D0 DUP2 PUSH2 0xCEE JUMP JUMPDEST SWAP4 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x2434 JUMPI POP PUSH1 0x1 EQ PUSH2 0x23F0 JUMPI JUMPDEST POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP7 SWAP6 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 JUMPDEST DUP6 DUP3 LT PUSH2 0x2421 JUMPI POP POP POP POP PUSH1 0x40 SWAP3 SWAP4 POP ADD ADD CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x23E7 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP4 ADD DUP6 ADD MSTORE SWAP1 DUP8 ADD SWAP1 DUP3 ADD PUSH2 0x2404 JUMP JUMPDEST SWAP5 SWAP7 POP POP POP POP POP PUSH1 0x40 SWAP4 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE DUP1 ISZERO ISZERO MUL ADD ADD CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x23E7 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2469 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x245C JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x449 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x24A6 DUP2 MLOAD PUSH1 0x19 SLOAD DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2741 JUMPI JUMPDEST POP PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x253A JUMPI PUSH1 0x1 SWAP1 PUSH2 0x250C PUSH2 0x2507 PUSH1 0x5 PUSH2 0x24EF PUSH2 0x24EA DUP3 PUSH2 0x24E2 PUSH2 0x24D1 DUP9 DUP12 PUSH2 0x224C JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24FC PUSH2 0x24D1 DUP6 DUP9 PUSH2 0x224C JUMP JUMPDEST ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x2534 PUSH2 0x252D PUSH2 0x251C DUP4 DUP7 PUSH2 0x224C JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x22DE JUMP JUMPDEST ADD PUSH2 0x24A9 JUMP JUMPDEST POP PUSH2 0x2546 PUSH1 0x17 SLOAD PUSH2 0x2037 JUMP JUMPDEST SWAP1 PUSH2 0x2550 DUP3 PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH2 0x2564 DUP3 PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x256E DUP3 DUP3 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP1 DUP2 PUSH1 0x2 SWAP2 TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 SWAP1 PUSH1 0x0 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x25A9 PUSH1 0xC DUP3 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP4 PUSH1 0xE PUSH1 0xD DUP4 ADD SWAP3 ADD SWAP4 JUMPDEST PUSH2 0x25FE JUMPI JUMPDEST POP POP POP POP POP POP DUP2 PUSH32 0x5D74F4C80F98633A9CE8E3F825E7019210BFB85159F33A7FCEB58FA9CB8CA621 PUSH1 0x40 MLOAD DUP1 PUSH2 0x25F2 CALLER SWAP6 DUP3 PUSH2 0x247D JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x449 DUP2 PUSH2 0x3285 JUMP JUMPDEST DUP7 MLOAD DUP6 LT ISZERO PUSH2 0x273C JUMPI DUP6 DUP6 PUSH2 0x2735 PUSH2 0x2617 DUP4 SWAP9 DUP12 PUSH2 0x224C JUMP JUMPDEST MLOAD DUP12 PUSH2 0x262D DUP3 PUSH1 0x0 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x4 SWAP1 DUP2 PUSH2 0x2646 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 PUSH2 0x2713 DUP8 PUSH2 0x270D DUP12 PUSH2 0x2665 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP4 DUP12 PUSH2 0x26C0 DUP11 DUP6 PUSH2 0x2682 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP9 PUSH2 0x269F PUSH2 0x26AD PUSH1 0x40 SWAP12 DUP13 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 SWAP14 DUP15 DUP5 ADD SWAP7 DUP8 PUSH2 0x23B3 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x36E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x26C9 PUSH2 0x3B8 JUMP JUMPDEST SWAP7 PUSH2 0x26DE DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD DUP8 MSTORE DUP13 PUSH2 0x26F7 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD DUP6 DUP9 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0xF21 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2458 JUMP JUMPDEST ADD SWAP5 PUSH2 0x25B6 JUMP JUMPDEST PUSH2 0x25BB JUMP JUMPDEST SWAP1 POP PUSH1 0x1A SLOAD LT ISZERO CODESIZE PUSH2 0x24A0 JUMP JUMPDEST ISZERO PUSH2 0x2755 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726576696F757320666F6C64696E67206E6F7420636F6D706C657465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x27A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820726563757273696F6E20646570746820726561636865640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x27F3 DUP3 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x284E JUMPI PUSH1 0x20 DUP2 PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 SWAP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2867 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420696E70757420617272617973 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x28AA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6F206D616E792070726F6F667320746F2061676772656761746500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x28F9 DUP3 PUSH2 0x1593 JUMP JUMPDEST PUSH2 0x2906 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x36E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2917 PUSH1 0x1F NOT SWAP2 PUSH2 0x1593 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x429 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x429 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x429 JUMPI SWAP2 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2969 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6F6620696E206167677265676174696F6E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x29C3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F6620616C7265616479207573656420696E206167677265676174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 DUP5 MLOAD PUSH1 0x20 DUP1 SWAP7 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2A4C JUMPI POP POP POP DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP2 POP JUMP JUMPDEST DUP3 MLOAD DUP7 MSTORE SWAP5 DUP8 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2A22 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x318 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0x318 JUMPI DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x2AC2 JUMPI JUMPDEST POP PUSH2 0x2A9E PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2AB0 JUMPI POP POP POP POP POP JUMP JUMPDEST DUP4 MLOAD DUP4 DUP3 ADD SSTORE SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2AA2 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x2AE2 JUMPI POP POP PUSH2 0x2A89 JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2AD4 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 DUP2 DUP5 EQ DUP1 PUSH2 0x2CB1 JUMPI JUMPDEST PUSH2 0x2B03 SWAP1 PUSH2 0x2860 JUMP JUMPDEST PUSH2 0x2B10 PUSH1 0xA DUP6 GT ISZERO PUSH2 0x28A3 JUMP JUMPDEST PUSH2 0x2B19 DUP5 PUSH2 0x28EF JUMP JUMPDEST SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2BDB JUMPI POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2B41 DUP2 PUSH2 0x269F CALLER TIMESTAMP DUP8 DUP8 PUSH2 0x2A12 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x2B76 PUSH2 0x2B53 PUSH1 0x5 SLOAD PUSH2 0x2037 JUMP JUMPDEST SWAP2 PUSH2 0x2B5D DUP4 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x2B71 DUP4 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2A60 JUMP JUMPDEST PUSH2 0x2B9A PUSH2 0x2B8D DUP4 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD PUSH1 0x40 MLOAD DUP1 PUSH2 0x2BD5 DUP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x1 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x2C20 PUSH2 0x2C1B PUSH2 0x2C15 PUSH2 0x2BF2 PUSH1 0x1 SWAP6 DUP8 DUP12 PUSH2 0x2921 JUMP JUMPDEST PUSH2 0x2C0D PUSH2 0x2C03 DUP8 DUP13 DUP13 SWAP7 SWAP6 SWAP7 PUSH2 0x2921 JUMP JUMPDEST SWAP5 SWAP1 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x3F2 JUMP JUMPDEST SWAP3 CALLDATASIZE SWAP2 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 PUSH2 0x36BD JUMP JUMPDEST PUSH2 0x2962 JUMP JUMPDEST PUSH2 0x2CAB PUSH2 0x2B8D PUSH2 0x2C5F PUSH2 0x2C59 PUSH2 0x2C37 DUP6 DUP9 DUP13 PUSH2 0x2921 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x269F PUSH2 0x2C47 DUP9 DUP14 DUP14 PUSH2 0x2921 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP9 DUP10 SWAP2 PUSH2 0x29AE JUMP JUMPDEST SWAP2 PUSH2 0x29AE JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x2C8F PUSH2 0x2C8A PUSH2 0x2C86 PUSH2 0x2C7F DUP5 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x29BC JUMP JUMPDEST DUP1 PUSH2 0x2C9A DUP6 DUP13 PUSH2 0x224C JUMP JUMPDEST MSTORE PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2B1D JUMP JUMPDEST POP DUP4 ISZERO ISZERO PUSH2 0x2AFA JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x2207 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST PUSH1 0x30 ADD SWAP1 DUP2 PUSH1 0x30 GT PUSH2 0x524 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x2710 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x524 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x160 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE PUSH2 0x131 DUP3 MSTORE PUSH17 0x72696E6769667928726573756C7429293B PUSH1 0x78 SHL PUSH2 0x140 DUP4 PUSH32 0x636F6E737420636861696E49643D7061727365496E7428617267735B305D293B PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x636F6E737420626C6F636B4E756D626572733D4A534F4E2E7061727365286172 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x67735B315D293B636F6E737420726573756C743D7B737563636573733A747275 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x652C636861696E49642C626C6F636B4E756D626572732C76616C696469747948 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x6173683A27307831323334353637383930616263646566313233343536373839 PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0x3061626364656631323334353637383930616263646566313233343536373839 PUSH1 0xC0 DUP3 ADD MSTORE PUSH32 0x30616263646566272C6D657461646174613A7B74696D657374616D703A4D6174 PUSH1 0xE0 DUP3 ADD MSTORE PUSH32 0x682E666C6F6F7228446174652E6E6F7728292F31303030297D7D3B7265747572 PUSH2 0x100 DUP3 ADD MSTORE PUSH32 0x6E2046756E6374696F6E732E656E636F6465537472696E67284A534F4E2E7374 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2EAE DUP3 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC0 DUP4 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2EE7 DUP3 PUSH2 0x353 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE DUP2 PUSH1 0x0 JUMPDEST PUSH1 0xA0 DUP2 LT PUSH2 0x2EFB JUMPI POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x2EEF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE PUSH1 0x3 DUP3 MSTORE DUP2 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x60 DUP1 DUP3 LT ISZERO PUSH2 0x2F4C JUMPI SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x2F32 JUMP JUMPDEST POP POP SWAP1 SWAP2 POP JUMP JUMPDEST SWAP1 PUSH2 0x2F66 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x6B1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2F81 PUSH1 0x20 SWAP2 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0xD28 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH32 0x89652D00E157965D54F5AD31AF9352416C4E90B879711EC122680D4E3A1DE9A6 SWAP1 PUSH2 0x2FBD DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2FC5 PUSH2 0xDBE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x3135 JUMPI JUMPDEST PUSH2 0x30E7 PUSH2 0x310B SWAP2 PUSH2 0x2FE6 PUSH2 0x2FDF PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x470C JUMP JUMPDEST PUSH2 0x30E2 PUSH1 0x2 PUSH2 0x2FF3 PUSH2 0x2EDA JUMP JUMPDEST SWAP6 ADD SWAP5 PUSH2 0x300F PUSH2 0x300A PUSH2 0x3005 DUP9 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x3018 DUP3 PUSH2 0x21FA JUMP JUMPDEST MSTORE PUSH2 0x3022 DUP2 PUSH2 0x21FA JUMP JUMPDEST POP PUSH2 0x3056 PUSH2 0x3063 PUSH2 0x3032 DUP10 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x269F PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH2 0x3050 PUSH1 0x20 DUP6 ADD PUSH1 0x1 SWAP1 PUSH1 0x5B PUSH1 0xF8 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2F53 JUMP JUMPDEST PUSH1 0x5D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x306C DUP3 PUSH2 0x220C JUMP JUMPDEST MSTORE PUSH2 0x3076 DUP2 PUSH2 0x220C JUMP JUMPDEST POP PUSH2 0x308F PUSH2 0x300A PUSH2 0x3089 PUSH1 0xE SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3098 DUP3 PUSH2 0x221C JUMP JUMPDEST MSTORE PUSH2 0x30A2 DUP2 PUSH2 0x221C JUMP JUMPDEST POP PUSH2 0x30AC CHAINID PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x30B5 DUP3 PUSH2 0x222C JUMP JUMPDEST MSTORE PUSH2 0x30BF DUP2 PUSH2 0x222C JUMP JUMPDEST POP PUSH2 0x30C8 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0x30D1 DUP3 PUSH2 0x223C JUMP JUMPDEST MSTORE PUSH2 0x30DB DUP2 PUSH2 0x223C JUMP JUMPDEST POP DUP3 PUSH2 0x3F3E JUMP JUMPDEST PUSH2 0x408D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH4 0xFFFFFFFF DUP4 PUSH1 0x90 SHR AND SWAP3 PUSH1 0x50 SHR AND SWAP1 PUSH2 0x425B JUMP JUMPDEST SWAP4 PUSH2 0x3120 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x3130 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2F6A JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST POP PUSH2 0x310B PUSH2 0x30E7 PUSH2 0x3144 PUSH2 0x2D09 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0xE0 PUSH1 0xA0 PUSH2 0x449 SWAP4 PUSH1 0x20 DUP5 MSTORE DUP1 MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xFFFF PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF DUP1 SWAP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD AND DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH1 0xC0 DUP1 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x323C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x321B PUSH1 0xA SLOAD PUSH4 0xFFFFFFFF SWAP1 PUSH2 0x31DE PUSH2 0x31D6 PUSH2 0x39E JUMP JUMPDEST DUP11 DUP2 MSTORE PUSH2 0x4335 JUMP JUMPDEST SWAP4 PUSH2 0x31E7 PUSH2 0x3AB JUMP JUMPDEST SWAP6 DUP7 MSTORE DUP9 DUP7 ADD MSTORE DUP1 DUP9 SHR PUSH2 0xFFFF AND PUSH1 0x40 DUP7 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 DUP4 AND AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x30 SHR AND PUSH1 0x80 DUP5 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x4D8E1C2F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x314C JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x13CA JUMPI PUSH2 0x3263 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x3266 JUMPI JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x327F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13C3 JUMPI PUSH2 0x13BB DUP2 DUP4 PUSH2 0x36E JUMP JUMPDEST CODESIZE PUSH2 0x3252 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD PUSH32 0x636F6E73742062617463684964203D207061727365496E7428617267735B305D SWAP1 MSTORE PUSH1 0x40 DUP3 ADD PUSH2 0x293B PUSH1 0xF0 SHL SWAP1 MSTORE DUP2 PUSH1 0x42 DUP2 ADD PUSH2 0x330B SWAP1 PUSH1 0x25 SWAP1 PUSH32 0x636F6E73742070726F6F66436F756E74203D207061727365496E742861726773 DUP2 MSTORE PUSH5 0x5B315D293B PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH32 0x636F6E73742073746570496E203D207061727365496E7428617267735B325D29 DUP2 MSTORE PUSH1 0x3B PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x21 ADD PUSH32 0x2F2F2047656E6572617465204E6F7661207265637572736976652070726F6F66 DUP2 MSTORE PUSH22 0x202D2073696D706C696669656420666F722064656D6F PUSH1 0x50 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x36 ADD PUSH32 0x636F6E7374206167677265676174656448617368203D206574686572732E7574 DUP2 MSTORE PUSH14 0xD2D8E65CD6CAC6C6C2D6646A6C5 PUSH1 0x93 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2E ADD PUSH32 0x20206574686572732E7574696C732E64656661756C74416269436F6465722E65 DUP2 MSTORE PUSH6 0xDCC6DEC8CA5 PUSH1 0xD3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x26 ADD PUSH32 0x202020205B2775696E74323536272C202775696E74323536272C202775696E74 DUP2 MSTORE PUSH6 0xC8D4D89D74B PUSH1 0xD2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x26 ADD PUSH32 0x202020205B626174636849642C2070726F6F66436F756E742C2073746570496E DUP2 MSTORE PUSH1 0x5D PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x21 ADD PUSH3 0x202029 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x3 ADD PUSH2 0x293B PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH32 0x636F6E737420666F6C646564496E7374616E6365203D207B0000000000000000 DUP2 MSTORE PUSH1 0x18 ADD PUSH17 0x8081CDD195C125B8E881CDD195C125B8B PUSH1 0x7A SHL DUP2 MSTORE PUSH1 0x11 ADD PUSH22 0x8081CDD195C13DD5D0E881CDD195C125B880AC80C4B PUSH1 0x52 SHL DUP2 MSTORE PUSH1 0x16 ADD PUSH32 0x202070726F6772616D436F756E7465723A20446174652E6E6F7728292C000000 DUP2 MSTORE PUSH1 0x1D ADD PUSH32 0x20207374617465526F6F74496E3A2061676772656761746564486173682C0000 DUP2 MSTORE PUSH1 0x1E ADD PUSH32 0x20207374617465526F6F744F75743A2061676772656761746564486173682C00 DUP2 MSTORE PUSH1 0x1F ADD PUSH32 0x20206E756C6C6966696572486173683A206574686572732E7574696C732E6B65 DUP2 MSTORE PUSH32 0x6363616B323536286167677265676174656448617368292C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x38 ADD PUSH15 0x2020697356616C69643A2074727565 PUSH1 0x88 SHL DUP2 MSTORE PUSH1 0xF ADD PUSH2 0x7D3B PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH32 0x72657475726E2046756E6374696F6E732E656E636F6465537472696E67284A53 DUP2 MSTORE PUSH14 0x4F4E2E737472696E67696679287B PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2E ADD PUSH19 0x80818985D18DA12590E8818985D18DA12590B PUSH1 0x6A SHL DUP2 MSTORE PUSH1 0x13 ADD PUSH32 0x202061676772656761746564486173683A206167677265676174656448617368 DUP2 MSTORE PUSH1 0xB PUSH1 0xFA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x21 ADD PUSH32 0x2020666F6C646564496E7374616E63653A20666F6C646564496E7374616E6365 DUP2 MSTORE PUSH1 0xB PUSH1 0xFA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x21 ADD PUSH32 0x202072656375727369766550726F6F663A206167677265676174656448617368 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x7D29293B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE PUSH2 0x36AC SWAP1 DUP4 PUSH2 0x36E JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x3 ADD SLOAD SWAP2 PUSH2 0x39C SWAP4 PUSH2 0x436E JUMP JUMPDEST MLOAD ISZERO SWAP1 DUP2 ISZERO PUSH2 0x36D6 JUMPI JUMPDEST POP PUSH2 0x36D1 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD ISZERO CODESIZE PUSH2 0x36C7 JUMP JUMPDEST ISZERO PUSH2 0x36E7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642046756E6374696F6E73207265717565737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x449 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x374A DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x73756363657373 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x376D DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0x3430B9A932B0B6283937B7B3 PUSH1 0xA1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3795 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0xECC2D8D2C8D2E8F290C2E6D PUSH1 0xA3 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP3 SWAP2 SWAP1 PUSH2 0x37C6 DUP5 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x6B1 JUMP JUMPDEST ADD SWAP1 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37DB DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x383937B7B3 PUSH1 0xD9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37FC DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0xD DUP3 MSTORE PUSH13 0x7075626C69635369676E616C73 PUSH1 0x98 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x382C PUSH1 0x20 SWAP3 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST SWAP1 DUP3 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH1 0x0 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x3851 DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x385E DUP3 ISZERO ISZERO PUSH2 0x36E0 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3A4A JUMPI POP PUSH32 0x50348C1AF87D1D2E61E0A7E9BF83A9C67F047D8DE73BE6B88ACAC8655A97581E SWAP2 PUSH2 0x3130 SWAP2 PUSH2 0x389C PUSH2 0x3896 PUSH2 0x373D JUMP JUMPDEST DUP4 PUSH2 0x447C JUMP JUMPDEST PUSH2 0x38B0 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE SWAP1 SWAP2 ISZERO PUSH2 0x3A06 JUMPI PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD SWAP2 PUSH2 0x38F9 PUSH2 0x38F3 PUSH2 0x3760 JUMP JUMPDEST DUP7 PUSH2 0x447C JUMP JUMPDEST ISZERO PUSH2 0x39F1 JUMPI PUSH2 0x390F PUSH2 0x3909 PUSH2 0x37CE JUMP JUMPDEST DUP7 PUSH2 0x4568 JUMP JUMPDEST PUSH2 0x3920 PUSH2 0x391A PUSH2 0x37EF JUMP JUMPDEST DUP8 PUSH2 0x4568 JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP1 PUSH2 0x39E7 JUMPI JUMPDEST ISZERO PUSH2 0x39AB JUMPI PUSH2 0x396A SWAP3 PUSH2 0x399B SWAP5 SWAP3 PUSH2 0x269F PUSH2 0x3955 PUSH1 0x4 SWAP5 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x3050 PUSH1 0x20 DUP5 ADD DUP1 SWAP8 PUSH2 0x2F53 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 DUP5 SWAP4 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SSTORE PUSH2 0x3983 PUSH2 0x2B8D DUP3 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x1 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3818 JUMP JUMPDEST POP POP PUSH2 0x39DF SWAP2 PUSH1 0x4 PUSH2 0x396A SWAP3 PUSH2 0x39C8 PUSH2 0x39C2 PUSH2 0x3788 JUMP JUMPDEST DUP10 PUSH2 0x4568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3955 DUP2 PUSH2 0x269F PUSH1 0x20 DUP3 ADD SWAP5 TIMESTAMP SWAP1 DUP7 PUSH2 0x37B0 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x399F JUMP JUMPDEST POP DUP1 MLOAD ISZERO ISZERO PUSH2 0x392A JUMP JUMPDEST PUSH2 0x39DF SWAP2 PUSH1 0x4 PUSH2 0x396A SWAP3 PUSH2 0x39C8 PUSH2 0x39C2 PUSH2 0x3788 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD PUSH1 0x40 MLOAD DUP1 PUSH2 0x39DF DUP2 SWAP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH32 0x8117AD48DB1A08344670D33ACDEB14D7EC953B1119DAFA9AB361E5E721D43562 SWAP3 POP PUSH2 0x3A97 PUSH1 0x5 PUSH2 0x3A89 PUSH2 0x3130 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x372C JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3AC0 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3AB2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xC0 PUSH2 0x39C SWAP4 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x449 SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST SWAP2 SWAP1 DUP2 MLOAD PUSH2 0x3CBF JUMPI PUSH32 0x788C5F43C02F6032D8146C17D8B085814337BACFF42A64ADDF4F97FFCEBDACFF SWAP2 POP PUSH2 0x3B82 DUP4 PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP4 PUSH32 0xE72448DEE39249921F3F9C2134DC1CA195A9E3882D4B52E6C3E49C775A4A4311 PUSH2 0x3CAC DUP5 MLOAD PUSH1 0x20 DUP7 ADD KECCAK256 PUSH1 0x4 DUP6 ADD SWAP1 DUP2 SSTORE PUSH2 0x3BC9 PUSH1 0xC DUP7 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3C94 PUSH1 0x3 DUP7 ADD SWAP6 PUSH1 0x5 DUP8 SLOAD SWAP2 PUSH2 0x3BDF DUP4 PUSH2 0x2CC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 PUSH2 0x3BF1 DUP3 DUP7 PUSH2 0x3AA3 JUMP JUMPDEST SUB SWAP2 PUSH2 0x3C05 PUSH1 0x1F NOT SWAP4 DUP5 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x36E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP8 SLOAD PUSH1 0x1 DUP6 ADD SLOAD SWAP1 SWAP3 DUP13 SWAP2 PUSH2 0x3C52 SWAP2 PUSH2 0x3C5E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 DUP8 MSTORE PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP3 ADD MSTORE SWAP3 DUP4 SWAP1 PUSH1 0x54 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x36E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH2 0x3C6A PUSH2 0x38F JUMP JUMPDEST SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP5 ADD MSTORE ADD PUSH2 0x3AD7 JUMP JUMPDEST SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 SLOAD PUSH2 0x3130 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3B2C JUMP JUMPDEST POP PUSH2 0x3130 PUSH32 0x8117AD48DB1A08344670D33ACDEB14D7EC953B1119DAFA9AB361E5E721D43562 SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x372C JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 MLOAD SWAP1 PUSH1 0x20 SWAP1 DUP3 PUSH2 0x3D08 DUP4 DUP3 ADD DUP1 SWAP4 PUSH2 0x2F53 JUMP JUMPDEST SUB SWAP3 PUSH2 0x3D1C PUSH1 0x1F NOT SWAP5 DUP6 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x36E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 DUP1 MLOAD DUP3 DUP2 ADD SWAP1 PUSH2 0x3D4F DUP2 PUSH2 0x3D43 DUP5 PUSH1 0x8 SWAP1 PUSH8 0x657468657265756D PUSH1 0xC0 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SUB DUP7 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x36E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x3E5C JUMPI DUP1 MLOAD PUSH8 0x617262697472756D PUSH1 0xC0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x3D7A DUP2 PUSH1 0x8 DUP5 ADD PUSH2 0x3D43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x3E52 JUMPI DUP1 MLOAD PUSH8 0x6F7074696D69736D PUSH1 0xC0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x3DA5 DUP2 PUSH1 0x8 DUP5 ADD PUSH2 0x3D43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x3E49 JUMPI DUP1 MLOAD PUSH4 0x62617365 PUSH1 0xE0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x3DCC DUP2 PUSH1 0x4 DUP5 ADD PUSH2 0x3D43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x3E3F JUMPI DUP1 MLOAD PUSH7 0x3837B63CB3B7B7 PUSH1 0xC9 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x3DF6 DUP2 PUSH1 0x7 DUP5 ADD PUSH2 0x3D43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x3E36 JUMPI PUSH2 0x3E23 SWAP1 MLOAD SWAP2 DUP3 ADD SWAP3 DUP3 PUSH2 0x3C52 DUP6 PUSH1 0x9 SWAP1 PUSH9 0x6176616C616E636865 PUSH1 0xB8 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH2 0x3E30 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0xA86A SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x89 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH2 0x2105 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0xA SWAP1 JUMP JUMPDEST POP POP POP POP PUSH2 0xA4B1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3E6F DUP3 PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x3E7C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x36E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2917 PUSH1 0x1F NOT SWAP2 PUSH2 0x3D7 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2207 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F20 JUMPI PUSH1 0x0 DUP2 DUP2 DUP2 DUP1 JUMPDEST PUSH2 0x3F08 JUMPI POP PUSH2 0x3EB9 DUP2 PUSH2 0x3E65 JUMP JUMPDEST SWAP4 JUMPDEST PUSH2 0x3EC5 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x3ECE SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST SWAP1 PUSH1 0xA SWAP1 PUSH2 0x3EF3 PUSH2 0x3EE3 PUSH2 0x3089 DUP5 DUP5 MOD PUSH2 0x2CD1 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP5 BYTE PUSH2 0x3EFF DUP5 DUP8 PUSH2 0x3E8D JUMP JUMPDEST MSTORE8 DIV SWAP1 DUP2 PUSH2 0x3EBB JUMP JUMPDEST SWAP2 POP PUSH2 0x3F15 PUSH1 0xA SWAP2 PUSH2 0x2037 JUMP JUMPDEST SWAP2 DIV DUP1 DUP5 SWAP3 SWAP2 PUSH2 0x3EAB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3F2D DUP2 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x3F4B JUMPI PUSH1 0xA0 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFE936CB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3F6A DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0x31B7B232A637B1B0BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x3FA5 JUMPI JUMP JUMPDEST PUSH2 0x3F85 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3FB7 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x8 DUP3 MSTORE PUSH8 0x6C616E6775616765 PUSH1 0xC0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 GT ISZERO PUSH2 0x3FA5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3FE5 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x736F75726365 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4007 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x61726773 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4027 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0xF DUP3 MSTORE PUSH15 0x39B2B1B932BA39A637B1B0BA34B7B7 PUSH1 0x89 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4052 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x73656372657473 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4075 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x627974657341726773 PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x4095 PUSH2 0x473D JUMP JUMPDEST SWAP1 PUSH2 0x40A7 PUSH2 0x40A1 PUSH2 0x3F5D JUMP JUMPDEST DUP4 PUSH2 0x478D JUMP JUMPDEST PUSH2 0x40C4 DUP2 MLOAD PUSH2 0x40B5 DUP2 PUSH2 0x3F9B JUMP JUMPDEST PUSH2 0x40BE DUP2 PUSH2 0x3F9B JUMP JUMPDEST DUP4 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x40CF PUSH2 0x40A1 PUSH2 0x3FAA JUMP JUMPDEST PUSH2 0x40E9 PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x40E0 DUP2 PUSH2 0x3FCE JUMP JUMPDEST PUSH2 0x40BE DUP2 PUSH2 0x3FCE JUMP JUMPDEST PUSH2 0x40F4 PUSH2 0x40A1 PUSH2 0x3FD8 JUMP JUMPDEST PUSH2 0x4102 PUSH1 0x60 DUP3 ADD MLOAD DUP4 PUSH2 0x478D JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD DUP1 MLOAD MLOAD PUSH2 0x4202 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD SWAP1 DUP2 MLOAD MLOAD PUSH2 0x4182 JUMPI JUMPDEST PUSH1 0xC0 SWAP2 POP ADD DUP1 MLOAD MLOAD PUSH2 0x412F JUMPI JUMPDEST POP MLOAD MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x413B PUSH2 0x40A1 PUSH2 0x4068 JUMP JUMPDEST PUSH2 0x4144 DUP3 PUSH2 0x48F0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x416F JUMPI SWAP1 PUSH2 0x4169 PUSH2 0x4162 DUP3 PUSH1 0x1 SWAP5 PUSH2 0x224C JUMP JUMPDEST MLOAD DUP6 PUSH2 0x4A09 JUMP JUMPDEST ADD PUSH2 0x4147 JUMP JUMPDEST POP POP SWAP2 POP PUSH2 0x417C DUP2 PUSH2 0x497C JUMP JUMPDEST CODESIZE PUSH2 0x4129 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH2 0x4191 DUP2 PUSH2 0x3F9B JUMP JUMPDEST PUSH2 0x419A DUP2 PUSH2 0x3F9B JUMP JUMPDEST ISZERO PUSH2 0x41F0 JUMPI PUSH1 0xC0 SWAP3 PUSH2 0x41D3 PUSH2 0x41EB SWAP3 PUSH2 0x41BA PUSH2 0x41B4 PUSH2 0x401A JUMP JUMPDEST DUP9 PUSH2 0x478D JUMP JUMPDEST MLOAD PUSH2 0x41C4 DUP2 PUSH2 0x3F9B JUMP JUMPDEST PUSH2 0x41CD DUP2 PUSH2 0x3F9B JUMP JUMPDEST DUP7 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x41E4 PUSH2 0x41DE PUSH2 0x4045 JUMP JUMPDEST DUP7 PUSH2 0x478D JUMP JUMPDEST MLOAD DUP5 PUSH2 0x4A09 JUMP JUMPDEST PUSH2 0x411C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA80D31F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 PUSH2 0x4214 PUSH2 0x420E PUSH2 0x3FFA JUMP JUMPDEST DUP5 PUSH2 0x478D JUMP JUMPDEST PUSH2 0x421D DUP4 PUSH2 0x48F0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x4248 JUMPI SWAP1 PUSH2 0x4242 PUSH2 0x423B DUP3 PUSH1 0x1 SWAP5 PUSH2 0x224C JUMP JUMPDEST MLOAD DUP7 PUSH2 0x478D JUMP JUMPDEST ADD PUSH2 0x4220 JUMP JUMPDEST POP POP SWAP3 POP PUSH2 0x4255 DUP3 PUSH2 0x497C JUMP JUMPDEST CODESIZE PUSH2 0x410E JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH4 0xFFFFFFFF PUSH2 0x429A PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH4 0x230E93B1 PUSH1 0xE1 SHL DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0xA4 DUP7 ADD SWAP1 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x44 DUP7 ADD MSTORE SWAP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x13CA JUMPI PUSH1 0x0 SWAP2 PUSH2 0x4316 JUMPI JUMPDEST POP DUP1 PUSH32 0x1131472297A800FEE664D1D89CFA8F7676FF07189ECC53F80BBB5F4969099DB8 PUSH1 0x0 DUP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x432F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x13C3 JUMPI PUSH2 0x13BB DUP2 DUP4 PUSH2 0x36E JUMP JUMPDEST CODESIZE PUSH2 0x42EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x125FA267 PUSH1 0xE3 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x318 JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x4379 PUSH2 0x2EA1 JUMP JUMPDEST SWAP3 DUP1 MLOAD ISZERO PUSH2 0x446A JUMPI DUP4 PUSH2 0x30E2 PUSH2 0x4419 SWAP4 PUSH2 0x4406 PUSH2 0x3130 SWAP7 PUSH2 0x30E7 SWAP6 PUSH1 0x0 PUSH32 0x89652D00E157965D54F5AD31AF9352416C4E90B879711EC122680D4E3A1DE9A6 SWAP11 MSTORE PUSH1 0x0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x43F3 PUSH2 0x43D0 PUSH2 0x2F0C JUMP JUMPDEST SWAP4 PUSH2 0x43DA DUP13 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x43E3 DUP7 PUSH2 0x21FA JUMP JUMPDEST MSTORE PUSH2 0x43ED DUP6 PUSH2 0x21FA JUMP JUMPDEST POP PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x43FC DUP5 PUSH2 0x220C JUMP JUMPDEST MSTORE PUSH2 0x43ED DUP4 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x440F DUP3 PUSH2 0x221C JUMP JUMPDEST MSTORE PUSH2 0x30DB DUP2 PUSH2 0x221C JUMP JUMPDEST SWAP3 PUSH2 0x4423 DUP2 PUSH2 0x2CDF JUMP JUMPDEST PUSH2 0x4437 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x40 DUP4 MSTORE PUSH1 0xA PUSH1 0x40 DUP5 ADD MSTORE PUSH10 0xDCDEECC25AC4C2E8C6D PUSH1 0xB3 SHL PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x20 PUSH1 0x80 DUP5 ADD SWAP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22CE3EDD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH2 0x44B4 SWAP1 DUP3 SWAP1 PUSH2 0x269F SWAP1 PUSH2 0x44A2 SWAP1 PUSH1 0x21 DUP5 ADD PUSH2 0x3050 JUMP JUMPDEST PUSH6 0x223A74727565 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x44C5 DUP4 MLOAD DUP3 MLOAD SWAP1 PUSH2 0x1FCF JUMP JUMPDEST DUP3 GT PUSH2 0x4560 JUMPI PUSH1 0x1 SWAP3 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4556 JUMPI PUSH2 0x44FE PUSH2 0x44F0 PUSH2 0x44EA DUP4 DUP8 PUSH2 0x2CFC JUMP JUMPDEST DUP5 PUSH2 0x3E8D JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x451B PUSH2 0x450E PUSH2 0x44F0 DUP5 DUP8 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP2 AND SUB PUSH2 0x4534 JUMPI PUSH1 0x1 ADD PUSH2 0x44D1 JUMP JUMPDEST POP SWAP3 POP SWAP1 PUSH1 0x0 JUMPDEST PUSH2 0x454E JUMPI PUSH2 0x4548 SWAP1 PUSH2 0x2037 JUMP JUMPDEST SWAP1 PUSH2 0x44B8 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x453B JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x45AB PUSH2 0x458E SWAP3 PUSH2 0x459D PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH2 0x3050 PUSH1 0x20 DUP6 ADD PUSH1 0x1 SWAP1 PUSH1 0x11 PUSH1 0xF9 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH3 0x111D11 PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x3 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x45BC DUP5 MLOAD DUP5 MLOAD SWAP1 PUSH2 0x1FCF JUMP JUMPDEST DUP3 GT PUSH2 0x4700 JUMPI PUSH1 0x1 SWAP3 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x46F6 JUMPI PUSH2 0x45E7 PUSH2 0x44F0 PUSH2 0x45E1 DUP4 DUP8 PUSH2 0x2CFC JUMP JUMPDEST DUP9 PUSH2 0x3E8D JUMP JUMPDEST PUSH2 0x45F7 PUSH2 0x450E PUSH2 0x44F0 DUP5 DUP7 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP2 AND SUB PUSH2 0x4610 JUMPI PUSH1 0x1 ADD PUSH2 0x45C8 JUMP JUMPDEST POP SWAP3 POP SWAP1 PUSH1 0x0 JUMPDEST PUSH2 0x462B JUMPI JUMPDEST PUSH2 0x4625 SWAP1 PUSH2 0x2037 JUMP JUMPDEST SWAP1 PUSH2 0x45AF JUMP JUMPDEST SWAP1 PUSH2 0x4637 DUP4 MLOAD DUP4 PUSH2 0x2CFC JUMP JUMPDEST SWAP3 DUP4 JUMPDEST DUP6 MLOAD DUP2 LT DUP1 PUSH2 0x46D2 JUMPI JUMPDEST ISZERO PUSH2 0x4657 JUMPI PUSH2 0x4652 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH2 0x463A JUMP JUMPDEST SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 DUP1 DUP3 GT PUSH2 0x466A JUMPI POP POP PUSH2 0x461C JUMP JUMPDEST SWAP2 POP SWAP3 POP PUSH2 0x4680 PUSH2 0x467B DUP3 DUP6 PUSH2 0x1FCF JUMP JUMPDEST PUSH2 0x3E65 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST PUSH2 0x468E DUP4 DUP7 PUSH2 0x1FCF JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x46C9 JUMPI DUP3 PUSH1 0x1 DUP3 PUSH2 0x46B2 PUSH2 0x44F0 PUSH2 0x46AC PUSH2 0x468E SWAP7 DUP7 PUSH2 0x2CFC JUMP JUMPDEST DUP12 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x0 BYTE PUSH2 0x46BF DUP3 DUP10 PUSH2 0x3E8D JUMP JUMPDEST MSTORE8 ADD SWAP2 POP POP PUSH2 0x4684 JUMP JUMPDEST POP SWAP4 POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x46EE PUSH2 0x44F0 DUP5 DUP11 PUSH2 0x3E8D JUMP JUMPDEST AND EQ ISZERO PUSH2 0x4644 JUMP JUMPDEST POP SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x4617 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x449 PUSH2 0x27E6 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x446A JUMPI PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4730 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH1 0x60 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4749 DUP2 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x4751 PUSH2 0x4723 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP2 MSTORE PUSH2 0x4764 PUSH2 0x4723 JUMP JUMPDEST POP PUSH2 0x100 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH2 0x120 DUP3 ADD SWAP2 DUP3 LT PUSH2 0x429 JUMPI PUSH1 0x0 SWAP2 PUSH1 0x40 MSTORE MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x47D1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x47D4 JUMPI PUSH2 0x47BC SWAP2 POP PUSH1 0x60 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x4ED7 JUMP JUMPDEST POP JUMPDEST MLOAD SWAP1 PUSH2 0x47C8 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD SWAP2 PUSH2 0x5107 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x47F9 JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x47EB DUP4 MLOAD PUSH2 0x4CDE JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x5093 JUMP JUMPDEST POP PUSH2 0x47BE JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x4818 JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x4810 DUP4 MLOAD PUSH2 0x4C79 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x5025 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x4839 JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x4831 DUP4 MLOAD PUSH2 0x4C14 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x4FB5 JUMP JUMPDEST PUSH2 0x47F3 SWAP1 PUSH2 0x4847 DUP4 MLOAD PUSH2 0x4BA4 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x4F42 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH2 0x485B PUSH2 0x4723 JUMP JUMPDEST POP DUP3 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP6 ADD MLOAD DUP2 LT ISZERO PUSH2 0x48B4 JUMPI JUMPDEST PUSH1 0xC2 PUSH1 0x20 PUSH2 0x39C SWAP7 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x48AC JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP3 MSTORE PUSH2 0x48A7 DUP3 PUSH2 0x31D JUMP JUMPDEST PUSH2 0x4A09 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x488F JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP5 DUP3 DUP7 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH1 0x20 DUP2 PUSH2 0x48E6 PUSH2 0x39C SWAP9 PUSH2 0x48DF PUSH1 0xC2 SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x4A8D JUMP JUMPDEST POP DUP3 PUSH2 0x4ADF JUMP JUMPDEST POP SWAP7 POP POP POP PUSH2 0x4878 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x48FB PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4949 JUMPI JUMPDEST PUSH1 0x9F PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4941 JUMPI JUMPDEST POP POP ADD DUP1 MLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x524 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x492D JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH1 0x20 DUP2 PUSH2 0x4972 DUP3 SWAP8 PUSH2 0x48DF PUSH1 0x9F SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x4A8D JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x4918 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x4987 PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x49D6 JUMPI JUMPDEST PUSH1 0xFF PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x49CE JUMPI JUMPDEST POP POP ADD DUP1 MLOAD PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x524 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x49B9 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH1 0x20 DUP2 PUSH2 0x49FF DUP3 SWAP8 PUSH2 0x48DF PUSH1 0xFF SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x4A8D JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x49A4 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x47D1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x4A38 JUMPI PUSH2 0x47BC SWAP2 POP PUSH1 0x40 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x4ED7 JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x4A4F JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x47EB DUP4 MLOAD PUSH2 0x4E72 JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x4A66 JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x4810 DUP4 MLOAD PUSH2 0x4E0D JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x4A7F JUMPI PUSH2 0x47F3 SWAP1 PUSH2 0x4831 DUP4 MLOAD PUSH2 0x4DA8 JUMP JUMPDEST PUSH2 0x47F3 SWAP1 PUSH2 0x4847 DUP4 MLOAD PUSH2 0x4D43 JUMP JUMPDEST SWAP1 PUSH2 0x4A96 PUSH2 0x4723 JUMP JUMPDEST POP PUSH1 0x1F DUP2 AND DUP1 PUSH2 0x4AC5 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 MSTORE PUSH1 0x0 DUP3 MSTORE DUP2 ADD PUSH1 0x20 ADD SWAP1 DUP2 LT PUSH2 0x429 JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 SUB PUSH1 0x20 DUP2 GT PUSH2 0x524 JUMPI DUP2 ADD DUP1 SWAP2 GT PUSH2 0x524 JUMPI CODESIZE PUSH2 0x4AA1 JUMP JUMPDEST SWAP1 PUSH2 0x4AE8 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD SWAP1 PUSH2 0x4AF4 PUSH2 0x4723 JUMP JUMPDEST POP PUSH2 0x4B02 DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x5100 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH2 0x4B10 DUP2 DUP5 PUSH2 0x2CFC JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x20 DUP7 ADD MLOAD DUP3 GT PUSH2 0x4B8D JUMPI JUMPDEST PUSH1 0x20 SWAP2 DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x4B85 JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x4B5D JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x4B79 PUSH2 0x4B73 PUSH2 0x4B7F SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2CEE JUMP JUMPDEST SWAP5 PUSH2 0x2CEE JUMP JUMPDEST SWAP3 PUSH2 0x1FC0 JUMP JUMPDEST SWAP1 PUSH2 0x4B38 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x4B33 JUMP JUMPDEST PUSH2 0x4B9F PUSH2 0x4B99 DUP4 PUSH2 0x2323 JUMP JUMPDEST DUP8 PUSH2 0x51B3 JUMP JUMPDEST PUSH2 0x4B1F JUMP JUMPDEST PUSH2 0x4BAC PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4BE5 JUMPI JUMPDEST PUSH1 0x7B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4C0E SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP DUP5 PUSH2 0x4ADF JUMP JUMPDEST POP PUSH2 0x4BC9 JUMP JUMPDEST PUSH2 0x4C1C PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4C51 JUMPI JUMPDEST PUSH1 0x7A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4C73 SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4C39 JUMP JUMPDEST PUSH2 0x4C81 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4CB6 JUMPI JUMPDEST PUSH1 0x79 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4CD8 SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4C9E JUMP JUMPDEST PUSH2 0x4CE6 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4D1B JUMPI JUMPDEST PUSH1 0x78 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4D3D SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4D03 JUMP JUMPDEST PUSH2 0x4D4B PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4D80 JUMPI JUMPDEST PUSH1 0x5B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4DA2 SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4D68 JUMP JUMPDEST PUSH2 0x4DB0 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4DE5 JUMPI JUMPDEST PUSH1 0x5A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4E07 SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4DCD JUMP JUMPDEST PUSH2 0x4E15 PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4E4A JUMPI JUMPDEST PUSH1 0x59 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4E6C SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4E32 JUMP JUMPDEST PUSH2 0x4E7A PUSH2 0x4723 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4EAF JUMPI JUMPDEST PUSH1 0x58 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4ED1 SWAP1 PUSH2 0x4C07 DUP6 MLOAD SWAP2 DUP7 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4E97 JUMP JUMPDEST SWAP1 PUSH2 0x4EE0 PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP3 LT ISZERO PUSH2 0x4F13 JUMPI JUMPDEST PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4F3C SWAP1 PUSH2 0x4F35 DUP7 MLOAD SWAP2 DUP8 PUSH2 0x4A8D JUMP JUMPDEST POP DUP6 PUSH2 0x4ADF JUMP JUMPDEST POP PUSH2 0x4EFD JUMP JUMPDEST SWAP1 PUSH2 0x4F4B PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x8 ADD SWAP2 DUP3 PUSH1 0x8 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x4F8D JUMPI JUMPDEST PUSH1 0x8 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x4FAF SWAP1 PUSH2 0x4F35 DUP7 MLOAD SWAP2 DUP8 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4F68 JUMP JUMPDEST SWAP1 PUSH2 0x4FBE PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x4 ADD SWAP2 DUP3 PUSH1 0x4 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x4FFD JUMPI JUMPDEST PUSH1 0x4 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH4 0xFFFFFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x501F SWAP1 PUSH2 0x4F35 DUP7 MLOAD SWAP2 DUP8 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4FDB JUMP JUMPDEST SWAP1 PUSH2 0x502E PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x2 ADD SWAP2 DUP3 PUSH1 0x2 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x506B JUMPI JUMPDEST PUSH1 0x2 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH2 0xFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x508D SWAP1 PUSH2 0x4F35 DUP7 MLOAD SWAP2 DUP8 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x504B JUMP JUMPDEST SWAP1 PUSH2 0x509C PUSH2 0x4723 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x1 ADD SWAP2 DUP3 PUSH1 0x1 GT PUSH2 0x524 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x50D8 JUMPI JUMPDEST PUSH1 0x1 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0xFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x4BE1 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x524 JUMPI PUSH2 0x50FA SWAP1 PUSH2 0x4F35 DUP7 MLOAD SWAP2 DUP8 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x50B9 JUMP JUMPDEST ISZERO PUSH2 0x429 JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x5111 PUSH2 0x4723 JUMP JUMPDEST POP PUSH2 0x511F DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x5100 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH1 0x20 PUSH2 0x512F DUP3 DUP6 PUSH2 0x2CFC JUMP JUMPDEST SWAP3 DUP2 SWAP4 DUP3 DUP8 ADD MLOAD DUP2 GT PUSH2 0x519C JUMPI JUMPDEST DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x5194 JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x5178 JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x4B79 PUSH2 0x4B73 PUSH2 0x518E SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2CEE JUMP JUMPDEST SWAP1 PUSH2 0x5153 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x514E JUMP JUMPDEST PUSH2 0x51AE PUSH2 0x51A8 DUP3 PUSH2 0x2323 JUMP JUMPDEST DUP9 PUSH2 0x51B3 JUMP JUMPDEST PUSH2 0x513D JUMP JUMPDEST SWAP1 PUSH2 0x47D1 SWAP2 PUSH2 0x51C4 DUP2 MLOAD SWAP3 DUP3 PUSH2 0x4A8D JUMP JUMPDEST POP PUSH2 0x4ADF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B ADDRESS 0xB4 TIMESTAMP ADDRESS SWAP10 NOT SHL MSTORE8 0xB0 LOG1 0xBE 0xD0 0xE3 PUSH10 0xE3FBA230F16D9AC9A227 SLT SWAP7 0xB0 POP SDIV 0x26 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"406:12273:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;:::o;:::-;-1:-1:-1;;;;;406:12273:20;;;;;;-1:-1:-1;;406:12273:20;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;;;;:::o;:::-;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;406:12273:20;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;2273:17:7;-1:-1:-1;;;;;406:12273:20;2251:10:7;:40;2247:90;;-1:-1:-1;406:12273:20;;;;;;;;;;;8203:19;8217:5;8203:19;;8199:286;8217:5;;;-1:-1:-1;;406:12273:20;;;;;;;8346:3;;;:::i;:::-;2394:27:7;;;;406:12273:20;;;;:::i;8199:286::-;8470:3;;;;;:::i;:::-;8199:286;;2247:90:7;406:12273:20;;-1:-1:-1;;;2308:22:7;;406:12273:20;;2308:22:7;406:12273:20;;-1:-1:-1;;406:12273:20;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;3681:43:21;406:12273:20;;;;;3703:6:21;406:12273:20;;3689:10:21;:20;3681:43;:::i;:::-;406:12273:20;;-1:-1:-1;;;;;406:12273:20;;;;;;;19814:23:21;406:12273:20;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;19814:23:21;406:12273:20;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;19814:23:21;406:12273:20;;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;19814:23:21;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;-1:-1:-1;406:12273:20;1659:47;406:12273;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;406:12273:20;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;406:12273:20;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18682:13:21;406:12273:20;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;;;:::i;:::-;;;;;18682:13:21;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;-1:-1:-1;406:12273:20;3030:46:21;406:12273:20;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;3082:48:21;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;406:12273:20;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;:::i;:::-;3681:43:21;406:12273:20;;;;;3703:6:21;406:12273:20;;3689:10:21;:20;3681:43;:::i;:::-;19475:42;406:12273:20;;-1:-1:-1;;;;406:12273:20;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;19567:24:21;406:12273:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;406:12273:20;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;:::i;:::-;7612:16:14;406:12273:20;;;;;-1:-1:-1;;;;;406:12273:20;7590:10:14;:39;;;7586:131;;406:12273:20;;-1:-1:-1;406:12273:20;;;;;-1:-1:-1;406:12273:20;;6648:19:21;;;406:12273:20;;;;6793:12:21;406:12273:20;6793:12:21;406:12273:20;;;;6816:14:21;6968;6793:45;6938:60;6816:14;:21;:14;;7120:13;6816:14;;:::i;:::-;406:12273:20;6808:4:21;406:12273:20;;;;6816:21:21;6793:45;;:::i;:::-;6857:29;;;;:13;:29;;406:12273:20;;4897:13:21;406:12273:20;;;;;;;6857:29:21;:41;406:12273:20;6968:14:21;:::i;:::-;406:12273:20;;;;;;;;;;;;;;6938:60:21;7120:13;:::i;:::-;406:12273:20;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;7586:131:14;406:12273:20;;;;7646:64:14;;;;;;7590:10;406:12273:20;7646:64:14;;406:12273:20;;;;;7646:64:14;406:12273:20;;;;;;-1:-1:-1;;406:12273:20;;;;;;-1:-1:-1;406:12273:20;1581:46;406:12273;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;;;;;;;3681:43:21;406:12273:20;;;;;3703:6:21;406:12273:20;;3689:10:21;:20;3681:43;:::i;:::-;12336:22:20;;;:50;;;406:12273;;;;12448:1;12426:23;;;:67;;;406:12273;;;;12632:38;12536;;12584;12536;;406:12273;;12536:38;12584;406:12273;;12584:38;12632;406:12273;;;;;-1:-1:-1;;;406:12273:20;;;;;;;3703:6:21;406:12273:20;;;;-1:-1:-1;;;406:12273:20;;;;;;;12426:67;12453:40;;;;;12426:67;;406:12273;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;12336:50;12362:24;406:12273;12362:24;;;12336:50;;406:12273;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;406:12273:20;;;;;;-1:-1:-1;406:12273:20;1507:68;406:12273;;;;-1:-1:-1;406:12273:20;;;;;;1507:68;;;406:12273;;1507:68;406:12273;1507:68;;;406:12273;1507:68;;;;406:12273;;1507:68;;406:12273;1507:68;406:12273;1507:68;;;;;;:::i;:::-;;;406:12273;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;406:12273:20;;;;;-1:-1:-1;406:12273:20;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;-1:-1:-1;406:12273:20;7590:17:21;406:12273:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;7590:17:21;-1:-1:-1;406:12273:20;;;-1:-1:-1;406:12273:20;;;;;;;-1:-1:-1;406:12273:20;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;8606:17:21;406:12273:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;8606:17:21;-1:-1:-1;406:12273:20;;;-1:-1:-1;406:12273:20;;;;;;;-1:-1:-1;406:12273:20;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;406:12273:20;;;;;;-1:-1:-1;406:12273:20;2129:53:21;406:12273:20;;;-1:-1:-1;406:12273:20;;;;;;;;;2129:53:21;406:12273:20;2129:53:21;;;406:12273:20;;;;2129:53:21;406:12273:20;2129:53:21;406:12273:20;2129:53:21;;;;406:12273:20;:::i;:::-;;;;:::i;:::-;2129:53:21;;;406:12273:20;2129:53:21;;406:12273:20;2129:53:21;;406:12273:20;2129:53:21;;406:12273:20;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;406:12273:20;;;;1970:27;406:12273;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;;:::i;:::-;3681:43:21;406:12273:20;;;;;3703:6:21;406:12273:20;;3689:10:21;:20;3681:43;:::i;:::-;406:12273:20;;-1:-1:-1;;;;;406:12273:20;;;;;;;19691:26:21;406:12273:20;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;19691:26:21;406:12273:20;;;;;;;;;;19691:26:21;406:12273:20;;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;19691:26:21;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;-1:-1:-1;406:12273:20;;;;;3175:58:21;406:12273:20;;;;;;;3175:58:21;;;;;406:12273:20;;;;;;;;;;;;;;;3175:58:21;;;;406:12273:20;;;;;;-1:-1:-1;;406:12273:20;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;:::i;:::-;2063:11;;;;:38;;;406:12273;2055:67;;;:::i;:::-;-1:-1:-1;406:12273:20;10810:21;406:12273;;;-1:-1:-1;406:12273:20;;10858:17;;;406:12273;;;;;;;;;;;10985:16;406:12273;11034:20;;;;406:12273;;;11018:36;;406:12273;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;2063:38;-1:-1:-1;2089:12:20;406:12273;2078:23;;;2063:38;;406:12273;;;;-1:-1:-1;;;;;406:12273:20;;;;;;:::o;:::-;;;;;;-1:-1:-1;;406:12273:20;;;;;;:::i;:::-;;;;;;;;;;3703:6:21;406:12273:20;18997:38:21;;-1:-1:-1;;;;;406:12273:20;3681:43:21;;406:12273:20;;3689:10:21;:20;3681:43;:::i;:::-;406:12273:20;-1:-1:-1;406:12273:20;18997:17:21;406:12273:20;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;1778:37;406:12273;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;16353:19:21;406:12273:20;16335:15:21;406:12273:20;16335:15:21;406:12273:20;;;;16326:86:21;406:12273:20;16376:14:21;406:12273:20;-1:-1:-1;16326:86:21;:::i;:::-;16431:37;16335:15;16353:19;406:12273:20;;16431:37:21;406:12273:20;;;-1:-1:-1;;;16534:44:21;;406:12273:20;16534:44:21;;406:12273:20;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;-1:-1:-1;406:12273:20;;;;16534:44:21;406:12273:20;;;;;16534:44:21;:4;-1:-1:-1;16534:4:21;:44;;;;;;;;406:12273:20;16534:44:21;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;406:12273:20:-;;;;;;-1:-1:-1;;406:12273:20;;;;-1:-1:-1;;;;;406:12273:20;;:::i;:::-;;-1:-1:-1;406:12273:20;3319:49:21;406:12273:20;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;-1:-1:-1;406:12273:20;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;1863:36;406:12273;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;:::i;:::-;;;;4862:16:21;;406:12273:20;4862:16:21;:::i;:::-;;;;;406:12273:20;;4862:16:21;406:12273:20;;:::i;:::-;4962:10:21;406:12273:20;;4962:10:21;4997:15;406:12273:20;4924:276:21;;406:12273:20;;4924:276:21;;406:12273:20;4924:276:21;;;;406:12273:20;-1:-1:-1;4924:276:21;;;406:12273:20;-1:-1:-1;4924:276:21;;;406:12273:20;-1:-1:-1;4924:276:21;;;406:12273:20;4897:24:21;;406:12273:20;;4897:13:21;406:12273:20;;;;;;;4897:24:21;406:12273:20;:::i;:::-;5288:22:21;;;5346:9;;;:::i;:::-;406:12273:20;5466:56:21;406:12273:20;;4962:10:21;5466:56;4962:10;5466:56;;406:12273:20;;;;;;;;5466:56:21;;;;406:12273:20;;;;;;;;;;;;;5284:167:21;5422:17;;;;:::i;:::-;5284:167;;406:12273:20;;;;;;-1:-1:-1;;406:12273:20;;;;;2334:36:21;406:12273:20;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;2294:34:21;406:12273:20;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;1745:27;406:12273;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;2063:11;;;:38;;;406:12273;2055:67;;;:::i;:::-;-1:-1:-1;406:12273:20;;;2213:21;406:12273;;;;;;2213:40;406:12273;-1:-1:-1;;;;;406:12273:20;2257:10;2213:54;406:12273;;8814:30;9055:25;8814:30;9147:7;8814:30;406:12273;;3796:21;406:12273;;;;;;;8814:30;8932:20;8862:17;;;406:12273;8854:60;406:12273;;;;;;;;8854:60;:::i;:::-;8932:20;9023:22;406:12273;;8924:80;8955:17;406:12273;8932:40;;8924:80;:::i;:::-;9023:22;:::i;:::-;406:12273;;;;-1:-1:-1;;406:12273:20;;;;9055:25;9147:7;:::i;406:12273::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;2063:38;-1:-1:-1;2089:12:20;406:12273;2078:23;;;2063:38;;406:12273;;;;;;;:::i;:::-;;;16110:19:21;406:12273:20;16092:15:21;406:12273:20;16092:15:21;406:12273:20;;;;16133:14:21;406:12273:20;-1:-1:-1;406:12273:20;;;;;;:::i;:::-;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;406:12273:20;;;;3681:43:21;406:12273:20;;;;;3703:6:21;406:12273:20;;3689:10:21;:20;3681:43;:::i;:::-;406:12273:20;;18857:28:21;406:12273:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;1136:10:9;:28;406:12273:20;;;;-1:-1:-1;;;;;406:12273:20;;;;-1:-1:-1;;;;;;406:12273:20;1136:10:9;406:12273:20;;;1136:10:9;1150:14;406:12273:20;;-1:-1:-1;;;;;;406:12273:20;;;1136:10:9;406:12273:20;;1295:42:9;;;;406:12273:20;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;2063:11;;;:38;;;406:12273;2055:67;;;:::i;:::-;-1:-1:-1;406:12273:20;11525:21;406:12273;;;-1:-1:-1;406:12273:20;11614:15;;406:12273;;;;;11614:15;;;406:12273;;11643:15;;;;406:12273;11672:20;;;406:12273;;11706:20;;406:12273;11740:17;406:12273;11740:17;;;406:12273;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;-1:-1:-1;406:12273:20;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2063:38;-1:-1:-1;2089:12:20;406:12273;2078:23;;;2063:38;;406:12273;;;;;;-1:-1:-1;;406:12273:20;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;:::i;:::-;-1:-1:-1;406:12273:20;-1:-1:-1;;;;;406:12273:20;;;;8155:10:14;:21;;;;:64;;406:12273:20;8151:162:14;;8318:1;;;:::i;8151:162::-;406:12273:20;;;8288:16:14;406:12273:20;;;;8236:70:14;;;;;;8155:10;406:12273:20;8236:70:14;;406:12273:20;;;;;;;;;8236:70:14;8155:64;406:12273:20;;8202:16:14;406:12273:20;;8155:10:14;8180:39;;8155:64;;406:12273:20;;;;;;-1:-1:-1;;406:12273:20;;;;;2259:29:21;406:12273:20;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;6077:45:14;406:12273:20;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;;;;;;;;;3681:43:21;406:12273:20;;;;;3703:6:21;406:12273:20;;3689:10:21;:20;3681:43;:::i;:::-;406:12273:20;;19203:33:21;406:12273:20;;;19246:19:21;406:12273:20;;;19275:37:21;406:12273:20;;;19275:37:21;406:12273:20;-1:-1:-1;406:12273:20;;;;;;;;-1:-1:-1;;406:12273:20;;;;3619:6:21;406:12273:20;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;3465:10:21;;-1:-1:-1;406:12273:20;3447:17:21;406:12273:20;;;;-1:-1:-1;406:12273:20;;;3447:53:21;;;;406:12273:20;;;;;17096:1421:21;;;;:::i;406:12273:20:-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;3447:53:21;-1:-1:-1;3494:6:21;406:12273:20;-1:-1:-1;;;;;406:12273:20;3465:10:21;3480:20;3447:53;;406:12273:20;;;;;;-1:-1:-1;;406:12273:20;;;;;;-1:-1:-1;406:12273:20;3239:47:21;406:12273:20;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;20525:16:21;406:12273:20;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;1821:36;406:12273;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;:::i;:::-;-1:-1:-1;406:12273:20;-1:-1:-1;;;;;406:12273:20;;;;1918:10:9;:21;;;406:12273:20;;;1918:10:9;;1649:16;;406:12273:20;;1700:19:9;406:12273:20;;-1:-1:-1;;;;;;406:12273:20;;;;;1731:39:9;-1:-1:-1;;1731:39:9;406:12273:20;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;12010:45;406:12273;;;;;;;;;:::i;:::-;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2063:11;;;:38;;;406:12273;2055:67;;;:::i;:::-;406:12273;;12010:21;406:12273;;;12010:45;406:12273;:::i;:::-;;;;;;;;:::i;2063:38::-;-1:-1:-1;2089:12:20;406:12273;2078:23;;;2063:38;;406:12273;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;:::o;:::-;;;19814:23:21;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;:::o;:::-;;;19691:26:21;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;406:12273:20;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;;;:::o;:::-;-1:-1:-1;;406:12273:20;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;;406:12273:20;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;8376:1:21;406:12273:20;;;;;;;:::o;:::-;;;8340:19:21;406:12273:20;;;;;;;:::o;:::-;;;7373:13:21;406:12273:20;;;;;;;:::o;:::-;;;8601:1:21;406:12273:20;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;3138:1:12;406:12273:20;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;406:12273:20;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;-1:-1:-1;406:12273:20;;-1:-1:-1;406:12273:20;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;-1:-1:-1;406:12273:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;406:12273:20;;-1:-1:-1;406:12273:20;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3078:2076::-;3199:143;406:12273;;3239:17;406:12273;3220:36;;;:76;;;;3078:2076;3199:143;;:::i;:::-;-1:-1:-1;3455:3:20;406:12273;;3434:19;;;;;406:12273;3482:38;3558:60;3566:34;3482:38;3474:70;3482:38;3496:11;3482:26;3496:11;;;;:::i;:::-;406:12273;;;4897:13:21;406:12273:20;;;;;;;3482:26;:38;406:12273;;;;;3482:38;3474:70;:::i;:::-;3566:26;3580:11;;;;:::i;3566:26::-;:34;406:12273;;;;;;;3566:34;3558:60;:::i;:::-;3632:65;3640:25;3653:11;;;;:::i;:::-;406:12273;;;3640:12;406:12273;;;;;;;3640:25;406:12273;3640:30;3632:65;:::i;:::-;406:12273;3419:13;;3434:19;;3736:14;;406:12273;3736:14;:::i;:::-;;;;;406:12273;;3736:14;3796:30;;406:12273;;3796:21;406:12273;;;;;;;3796:30;406:12273;;;;:::i;:::-;;3880:15;;;406:12273;;-1:-1:-1;;;;;;406:12273:20;3898:10;406:12273;;;;3918:15;;3936;;3918;;;406:12273;3482:13;3961:20;-1:-1:-1;3482:13:20;3961:20;;406:12273;3995:25;:17;;;406:12273;;;;;;;;3995:25;-1:-1:-1;4316:17:20;4664:18;4316:17;;;4664:18;;4087:849;406:12273;;;4087:849;406:12273;;;;;;;4959:49;406:12273;;3898:10;4959:49;3898:10;4959:49;;;:::i;:::-;;;;5106:7;;;:::i;4128:3::-;406:12273;;4107:19;;;;;4165:11;;406:12273;4165:11;;;;;:::i;:::-;406:12273;4190:21;;;406:12273;;3640:12;406:12273;;;;;;;4190:21;406:12273;4404:32;:22;;;;406:12273;;4897:13:21;406:12273:20;;;;;;;4404:22;:32;406:12273;4458:22;406:12273;4458:22;4841;4458;;;406:12273;;4897:13:21;406:12273:20;;;;;;;4458:22;:34;406:12273;4514:22;;4316:20;4514:22;;;;406:12273;;4897:13:21;406:12273:20;;;;;;;4514:22;:34;406:12273;4366:200;;406:12273;;;;4366:200;;;;;;;;;;;:::i;:::-;;406:12273;;4366:200;;;;;;:::i;:::-;406:12273;4339:241;;4316:20;406:12273;;;;;;;;;;4316:20;406:12273;;;:::i;:::-;4714:22;;;406:12273;;4897:13:21;406:12273:20;;;;;;;4714:22;:32;406:12273;;;4765:22;;;406:12273;;4897:13:21;406:12273:20;;;;;;;4765:22;:34;406:12273;4688:237;;;406:12273;;;4897:13:21;406:12273:20;;;;;;;4841:22;:34;406:12273;:::i;:::-;;;;;4825:52;4688:237;;;406:12273;3936:15;4688:237;;;406:12273;;;;;;;;;;;;;:::i;:::-;;4092:13;;;4107:19;;;3220:76;406:12273;;3279:17;406:12273;-1:-1:-1;3260:36:20;3220:76;;;406:12273;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14263:1:21;406:12273:20;;:::o;7831:276:14:-;-1:-1:-1;;;;;406:12273:20;7931:29:14;;7927:70;;406:12273:20;;8071:31:14;406:12273:20;;;;8002:57:14;406:12273:20;;;8002:57:14;406:12273:20;;;;;;8071:31:14;7831:276::o;7927:70::-;406:12273:20;;-1:-1:-1;;;7977:13:14;;;;;406:12273:20;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;;;;;;-1:-1:-1;;;406:12273:20;;;;-1:-1:-1;;406:12273:20;;;;;;;;-1:-1:-1;406:12273:20:o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;406:12273:20;-1:-1:-1;406:12273:20;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;17096:1421:21;;;;;17279:41;;;:62;;;17096:1421;17271:95;;;:::i;:::-;17376:60;17401:2;17384:19;;;17376:60;:::i;:::-;17514:28;;;:::i;:::-;17625:13;17637:1;17640:17;;;;;;406:12273:20;;;;;;;17823:49:21;18150:58;;18197:10;18150:58;18197:10;18150:58;18197:10;18180:15;18150:58;;;:::i;:::-;406:12273:20;18140:69:21;;406:12273:20;;18281:16:21;;406:12273:20;18281:16:21;:::i;:::-;;;;4862;406:12273:20;;18281:16:21;18307:32;;406:12273:20;;18307:21:21;406:12273:20;;;;;;;18307:32:21;406:12273:20;:::i;:::-;18363:37:21;:30;;406:12273:20;;18363:14:21;406:12273:20;;;;;;;18363:30:21;406:12273:20;;-1:-1:-1;;406:12273:20;18056:4:21;406:12273:20;;;;18363:37:21;18424:46;406:12273:20;;18424:46:21;;;;406:12273:20;;;;;;;18056:4:21;406:12273:20;;;;;18424:46:21;;;;17096:1421;:::o;17659:3::-;17701:9;17678:88;17686:47;406:12273:20;17701:9:21;406:12273:20;17701:9:21;;;;:::i;:::-;406:12273:20;17712:20:21;;;;;;;;:::i;:::-;406:12273:20;;;;;;:::i;:::-;;;;;:::i;:::-;17686:47:21;;:::i;:::-;17678:88;:::i;:::-;18027:33;:26;17823:49;406:12273:20;17840:9:21;;;;;:::i;:::-;17851:20;;406:12273:20;17851:20:21;;;;;:::i;:::-;406:12273:20;;17823:49:21;;;;;;406:12273:20;;;;:::i;:::-;;;:::i;17823:49:21:-;406:12273:20;17813:60:21;;17887:73;17895:27;17896:26;;;406:12273:20;;17896:15:21;406:12273:20;;;;;;;17896:26:21;406:12273:20;;;;;17896:26:21;17895:27;;406:12273:20;17895:27:21;17887:73;:::i;:::-;17987:26;;;;;:::i;:::-;406:12273:20;;;17896:15:21;406:12273:20;;;;;;;18027:33:21;406:12273:20;17625:13:21;;17279:62;-1:-1:-1;17324:17:21;;;17279:62;;406:12273:20;;;;;;:::o;:::-;;9751:4;406:12273;;;;;;;:::o;:::-;20344:2:21;406:12273:20;;;20344:2:21;406:12273:20;;;:::o;:::-;;7788:5;406:12273;;;;;;;:::o;:::-;;3084:12:12;406:12273:20;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;406:12273:20;;-1:-1:-1;406:12273:20;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;8291:1:21;406:12273:20;;;-1:-1:-1;406:12273:20;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;375:3:5;406:12273:20;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;7245:1818:21:-;;8982:74;7245:1818;7373:29;;406:12273:20;;4897:13:21;406:12273:20;;;;;;;7373:29:21;406:12273:20;;:::i;:::-;;;7621:25:21;7617:411;;7245:1818;8757:16;8731:154;406:12273:20;4508:16:5;406:12273:20;;:::i;:::-;4508:16:5;;;:::i;:::-;8686:4:21;8340:19;8278:15;;:::i;:::-;8340:19;;406:12273:20;8313:48:21;8329:31;406:12273:20;;;:::i;:::-;8329:31:21;:::i;:::-;8313:48;:::i;:::-;8303:58;;;:::i;:::-;;;;;:::i;:::-;;406:12273:20;8388:56:21;8410:28;;;:::i;:::-;406:12273:20;;;8388:56:21;;;406:12273:20;8388:56:21;;;406:12273:20;;-1:-1:-1;;;406:12273:20;;;;;;;;:::i;:::-;-1:-1:-1;;;406:12273:20;;;;;;8388:56:21;8371:74;;;:::i;:::-;;;;;:::i;:::-;;8481:28;;406:12273:20;8497:11:21;406:12273:20;;;;;;;;;;8481:28:21;8471:38;;;:::i;:::-;;;;;:::i;:::-;;8529:30;8545:13;8529:30;:::i;:::-;8519:40;;;:::i;:::-;;;;;:::i;:::-;;406:12273:20;;:::i;:::-;8596:27:21;;;:::i;:::-;;;;;:::i;:::-;;8686:4;;:::i;:::-;8757:16;:::i;:::-;8787:25;406:12273:20;8859:16:21;406:12273:20;;-1:-1:-1;;;;;406:12273:20;;;;;;;;;8731:154:21;;:::i;:::-;8896:45;;;406:12273:20;;8601:1:21;406:12273:20;;;;;;;8896:45:21;406:12273:20;8982:74:21;406:12273:20;;8982:74:21;;;;;:::i;:::-;;;;7245:1818::o;7617:411::-;406:12273:20;8731:154:21;8757:16;406:12273:20;;:::i;:::-;7617:411:21;;;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5649:733:21:-;5744:16;406:12273:20;-1:-1:-1;;406:12273:20;;5744:488:21;;-1:-1:-1;;;;;406:12273:20;5855:9:21;406:12273:20;5889:16:21;406:12273:20;5793:429:21;5945:22;406:12273:20;;;6088:119:21;406:12273:20;;:::i;:::-;;;;6088:119:21;:::i;:::-;406:12273:20;;;:::i;:::-;;;;5793:429:21;;;406:12273:20;;;;;;5793:429:21;;;406:12273:20;;;;;;5793:429:21;;;406:12273:20;;;;5793:429:21;;;406:12273:20;;;;;;5793:429:21;;;;406:12273:20;5793:429:21;406:12273:20;;;;;;;;;;5744:488:21;;;;;;:::i;:::-;;;;;;;;;6310:48;5744:488;-1:-1:-1;5744:488:21;;;5649:733;6310:48;406:12273:20;;8601:1:21;406:12273:20;;;;;;;6310:48:21;406:12273:20;5649:733:21:o;5744:488::-;;;;406:12273:20;5744:488:21;406:12273:20;5744:488:21;;;;;;;:::i;:::-;;;;5248:1561:20;406:12273;-1:-1:-1;406:12273:20;5362:21;406:12273;;;-1:-1:-1;406:12273:20;;;5496:1137;406:12273;5496:1137;;406:12273;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;-1:-1:-1;;;406:12273:20;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;-1:-1:-1;;;406:12273:20;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;5496:1137;406:12273;;5496:1137;;;;;;;;:::i;:::-;406:12273;;6781:20;;;406:12273;6781:20;;;;:::i;15525:371:21:-;406:12273:20;15714:17:21;:45;;;;;15525:371;15710:63;;;15885:4;15525:371;:::o;15710:63::-;15730:1;15761:12;:::o;15714:45::-;406:12273:20;;;15735:24:21;15714:45;;;406:12273:20;;;;:::o;:::-;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;406:12273:20;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;406:12273:20;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;406:12273:20;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;406:12273:20;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;406:12273:20;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;9926:3304:21:-;;10102:36;;406:12273:20;;8601:1:21;406:12273:20;;;;;;;10102:36:21;406:12273:20;10156:19:21;10148:57;10156:19;;;10148:57;:::i;:::-;406:12273:20;;10216:197:21;;406:12273:20;13173:50:21;406:12273:20;13173:50:21;406:12273:20;10609:39:21;406:12273:20;;:::i;:::-;10609:39:21;;:::i;:::-;10698:29;;406:12273:20;;4897:13:21;406:12273:20;;;;;;;10698:29:21;10737:19;;;406:12273:20;;-1:-1:-1;;406:12273:20;18056:4:21;406:12273:20;;;10737:19:21;;10782:2368;;;11857:46;406:12273:20;10881:44:21;406:12273:20;;:::i;:::-;10881:44:21;;:::i;:::-;406:12273:20;;;11066:39:21;406:12273:20;;:::i;:::-;11066:39:21;;:::i;:::-;11157:47;406:12273:20;;:::i;:::-;11157:47:21;;:::i;:::-;406:12273:20;;11243:27:21;;:66;;;10952:2067;11239:1243;;;11682:22;406:12273:20;11857:46:21;406:12273:20;;;11592:46:21;10102:25;406:12273:20;;;11592:46:21;;;406:12273:20;11592:46:21;;;406:12273:20;;;:::i;11592:46:21:-;406:12273:20;11582:57:21;;11682:22;;;406:12273:20;;;;;;;;;;11682:22:21;11726:17;406:12273:20;11777:32:21;:25;;406:12273:20;;18363:14:21;406:12273:20;;;;;;;11777:32:21;406:12273:20;;11857:46:21;;;;406:12273:20;;;;;;;18056:4:21;406:12273:20;;;;;11857:46:21;;;;11239:1243;406:12273:20;;13173:50:21;;;;;:::i;11239:1243::-;406:12273:20;;12417:46:21;406:12273:20;10102:25:21;12242:22;406:12273:20;12053:46:21;406:12273:20;;:::i;:::-;12053:46:21;;:::i;:::-;406:12273:20;;12151:47:21;;;;;;12182:15;;12151:47;;;:::i;12417:46::-;;;;11239:1243;;11243:66;406:12273:20;;;11274:35:21;;11243:66;;10952:2067;12958:46;406:12273:20;10102:25:21;12799:22;406:12273:20;12622:46:21;406:12273:20;;:::i;10782:2368:21:-;406:12273:20;;-1:-1:-1;;406:12273:20;;;-1:-1:-1;13091:48:21;406:12273:20;;13091:48:21;;;406:12273:20;10174:1:21;406:12273:20;;;;;;;;;;;10216:197:21;10345:37;10278:29;;:48;:41;:29;10345:37;10278:29;406:12273:20;;4897:13:21;406:12273:20;;;;;;;10278:29:21;:41;406:12273:20;;-1:-1:-1;;406:12273:20;18056:4:21;406:12273:20;;;;10278:48:21;406:12273:20;;10345:37:21;;;;;:::i;406:12273:20:-;;;-1:-1:-1;406:12273:20;;;;;;;;-1:-1:-1;406:12273:20;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9238:1164::-;;;406:12273;;9376:147;;10331:64;9577:30;;;;406:12273;;3796:21;406:12273;;;;;;;9577:30;406:12273;10259:57;;406:12273;;;;;9702:19;9679:20;;;406:12273;;;9731:24;:17;;;18056:4:21;406:12273:20;;;;;;;;;9731:24;406:12273;9885:20;;;406:12273;9827:20;406:12273;;9928:24;;;;:::i;:::-;406:12273;;;10034:32;;406:12273;;;;;:::i;:::-;10034:32;406:12273;10034:32;406:12273;;10034:32;;;;;;;;:::i;:::-;406:12273;10024:43;;406:12273;;9751:4;10180:15;;406:12273;;;;;10154:42;;;;-1:-1:-1;;;;;406:12273:20;;;;;10154:42;;406:12273;;;;;;;;-1:-1:-1;;406:12273:20;;;;;;;;;;;;;10154:42;;;;;;;;;:::i;:::-;406:12273;10144:53;;406:12273;;;:::i;:::-;;;;;9850:385;;406:12273;9982:15;406:12273;9850:385;;406:12273;9850:385;;;406:12273;9850:385;;;406:12273;9850:385;;;406:12273;9751:4;9850:385;;;406:12273;9827:20;406:12273;:::i;:::-;;;;;;;;9751:4;406:12273;;;;;;;;;;;;10259:57;;;;406:12273;10331:64;406:12273;;10331:64;;;;;:::i;9376:147::-;406:12273;9415:44;;406:12273;;;9415:44;;;;;:::i;9145:696:21:-;406:12273:20;;;;9262:27:21;;;;406:12273:20;9262:27:21;;;406:12273:20;;;:::i;:::-;9262:27:21;406:12273:20;9262:27:21;406:12273:20;;9262:27:21;;;;;;;;:::i;:::-;406:12273:20;9252:38:21;;406:12273:20;;;9336:28:21;;;406:12273:20;9336:28:21;406:12273:20;;;;;-1:-1:-1;;;406:12273:20;;;;;;9336:28:21;;;;;;;;:::i;:::-;406:12273:20;9326:39:21;;9313:52;;9309:66;;406:12273:20;;-1:-1:-1;;;9412:28:21;;;406:12273:20;;;9412:28:21;;406:12273:20;;;;;;9412:28:21;406:12273:20;9402:39:21;;9389:52;;9385:70;;406:12273:20;;-1:-1:-1;;;9492:28:21;;;406:12273:20;;;9492:28:21;;406:12273:20;;;;;;9492:28:21;406:12273:20;9482:39:21;;9469:52;;9465:67;;406:12273:20;;-1:-1:-1;;;9569:24:21;;;406:12273:20;;;9569:24:21;;406:12273:20;;;;;;9569:24:21;406:12273:20;9559:35:21;;9546:48;;9542:65;;406:12273:20;;-1:-1:-1;;;9644:27:21;;;406:12273:20;;;9644:27:21;;406:12273:20;;;;;;9644:27:21;406:12273:20;9634:38:21;;9621:51;;9617:67;;9721:29;406:12273:20;;9721:29:21;;;406:12273:20;;;;;;-1:-1:-1;;;406:12273:20;;;;;9721:29:21;406:12273:20;9711:40:21;;9698:53;9694:71;;9833:1;9145:696;:::o;9694:71::-;9760:5;9753:12;:::o;9617:67::-;9674:10;;;;9681:3;9674:10;:::o;9542:65::-;9596:11;;;;9603:4;9596:11;:::o;9465:67::-;9523:9;;;;9530:2;9523:9;:::o;9385:70::-;9443:12;;;;9450:5;9443:12;:::o;9309:66::-;9367:8;;;;9374:1;9367:8;:::o;406:12273:20:-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;19921:522:21:-;20013:10;;20009:51;;20022:1;20069:20;20022:1;20069:20;;20130:9;;;20229:17;;;;:::i;:::-;20256:150;20263:10;;;20415:21;;;19921:522;:::o;20256:150::-;20289:11;;;:::i;:::-;20185:2;;406:12273:20;20331:39:21;20338:31;20344:24;406:12273:20;;;20344:24:21;:::i;20338:31::-;406:12273:20;;-1:-1:-1;;;;;;406:12273:20;;;20331:39:21;20314:56;;;;;;:::i;:::-;;406:12273:20;20256:150:21;;;;20123:75;20155:8;;;20185:2;20155:8;;:::i;:::-;406:12273:20;;20123:75:21;;;;;;20009:51;406:12273:20;;;;;;:::i;:::-;;;;-1:-1:-1;;;406:12273:20;;;;20039:10:21;:::o;5827:148:5:-;406:12273:20;;5911:16:5;5907:40;;5954:9;;:16;5827:148::o;5907:40::-;406:12273:20;;-1:-1:-1;;;5936:11:5;;;;;375:3;406:12273:20;;;;;;:::i;:::-;375:3:5;406:12273:20;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;406:12273:20;;;375:3:5;;;;;;;;;;-1:-1:-1;375:3:5;;;:::o;:::-;;:::i;:::-;406:12273:20;;;;;;:::i;:::-;375:3:5;406:12273:20;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;;-1:-1:-1;375:3:5;;;:::o;:::-;406:12273:20;;;;;;:::i;:::-;375:3:5;406:12273:20;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;406:12273:20;;;;;;:::i;:::-;375:3:5;406:12273:20;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;406:12273:20;;;;;;:::i;:::-;375:3:5;406:12273:20;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;406:12273:20;;;;;;:::i;:::-;375:3:5;406:12273:20;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;406:12273:20;;;;;;:::i;:::-;375:3:5;406:12273:20;;-1:-1:-1;;;375:3:5;;;;:::o;2158:1270::-;2274:32;;:::i;:::-;375:3;2313:34;375:3;;:::i;:::-;2313:34;;:::i;:::-;2373:26;375:3;;;;;:::i;:::-;;;;:::i;:::-;2373:26;;:::i;:::-;2407:30;375:3;;:::i;2407:30::-;2463:22;2471:13;;;375:3;;;;:::i;:::-;;;;:::i;2463:22::-;2493:28;375:3;;:::i;2493:28::-;2546:11;;;;;;;:::i;:::-;2569:9;;;;;406:12273:20;2565:227:5;;2158:1270;2802:30;;;;;;;406:12273:20;2798:346:5;;2158:1270;3154:14;;;;;;406:12273:20;3150:246:5;;2158:1270;3409:10;;:14;2158:1270;:::o;3150:246::-;375:3;3189:31;375:3;;:::i;3189:31::-;3228:17;;;:::i;:::-;-1:-1:-1;3302:3:5;3279:14;;406:12273:20;;3275:25:5;;;;;3335:17;;;;406:12273:20;3335:17:5;;:::i;:::-;;;;:::i;:::-;406:12273:20;3260:13:5;;3275:25;;;;;3369:18;;;:::i;:::-;3150:246;;;2798:346;2857:20;;;375:3;;;;;:::i;:::-;;;;:::i;:::-;2857:39;2853:88;;3154:14;375:3;3013:29;3106:30;375:3;2948:37;375:3;;:::i;:::-;2948:37;;:::i;:::-;375:3;;;;:::i;:::-;;;;:::i;:::-;3013:29;;:::i;:::-;3051;375:3;;:::i;:::-;3051:29;;:::i;:::-;3106:30;;;:::i;:::-;2798:346;;2853:88;2471:13;406:12273:20;-1:-1:-1;;;2915:17:5;;;;;2565:227;375:3;2599:26;375:3;;:::i;:::-;2599:26;;:::i;:::-;2633:17;;;:::i;:::-;-1:-1:-1;2702:3:5;2684:9;;406:12273:20;;2680:20:5;;;;;2736:12;;;;406:12273:20;2736:12:5;;:::i;:::-;;;;:::i;:::-;406:12273:20;2665:13:5;;2680:20;;;;;2765:18;;;:::i;:::-;2565:227;;;1200:388:7;;;1377:151;1200:388;-1:-1:-1;;;;;1200:388:7;406:12273:20;322:1:5;406:12273:20;;;;;;;;;;1377:151:7;;406:12273:20;1377:151:7;;;322:1:5;;;;;;;;;;;:::i;:::-;;;;;406:12273:20;;;322:1:5;;;406:12273:20;322:1:5;;;406:12273:20;1377:151:7;406:12273:20;-1:-1:-1;1377:17:7;-1:-1:-1;;;;;406:12273:20;1377:151:7;;;;;;;-1:-1:-1;1377:151:7;;;1200:388;1539:22;;;-1:-1:-1;1539:22:7;;1200:388;:::o;1377:151::-;;;;;;;;;;;;;;:::i;:::-;;;;475:163:18;406:12273:20;;;;;;581:52:18;;;;204:36;406:12273:20;;581:52:18;;;406:12273:20;581:52:18;;;406:12273:20;;;;;;-1:-1:-1;;;;;406:12273:20;;;;;;;475:163:18;:::o;6894:993:20:-;;;;406:12273;;:::i;:::-;;;;3937:25:5;3933:51;;406:12273:20;7438:4;7483:154;406:12273;7385:31;7817:63;406:12273;7509:16;406:12273;4466:15:5;7817:63:20;406:12273;;4466:15:5;4029:13;;;406:12273:20;4059:11:5;;;:20;7338:27:20;7259:15;;:::i;:::-;7294:24;;;;:::i;:::-;7284:34;;;:::i;:::-;;;;;:::i;:::-;;7338:27;:::i;:::-;7328:37;;;:::i;:::-;;;;;:::i;7385:31::-;7375:41;;;:::i;:::-;;;;;:::i;7483:154::-;7778:15;;;;:::i;:::-;7730:45;;406:12273;;8601:1:21;406:12273:20;;;;;;;7730:45;406:12273;4029:13:5;406:12273:20;7817:63;;;;406:12273;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;;;;;;3933:51:5;406:12273:20;;-1:-1:-1;;;3971:13:5;;;;;13302:623:21;406:12273:20;;-1:-1:-1;;;13487:36:21;;;406:12273:20;13302:623:21;;13487:36;;406:12273:20;;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;13487:36:21;13558:1;13544:353;13602:3;13566:34;406:12273:20;;;;13566:34:21;;:::i;:::-;13561:39;;;;13636:4;13659:10;13558:1;13692:3;406:12273:20;;13671:19:21;;;;;13719:16;;13729:5;;;;:::i;:::-;13719:16;;:::i;:::-;406:12273:20;-1:-1:-1;;;;;;406:12273:20;;;13719:16:21;:31;13739:11;;;;;:::i;:::-;-1:-1:-1;;;;;;406:12273:20;;;13719:31:21;-1:-1:-1;;;;;;406:12273:20;;;13719:31:21;13715:120;;13636:4;406:12273:20;13659:10:21;;13715:120;13774:15;;;;13558:1;13654:195;13862:24;;13602:3;;;:::i;:::-;13549:10;;;13862:24;13875:11;;;13636:4;13875:11;:::o;13671:19::-;;;;;;;;13561:39;;;;13558:1;13302:623;:::o;13996:1361::-;;14195:33;406:12273:20;13996:1361:21;406:12273:20;;;14195:33:21;;;406:12273:20;14195:33:21;;;406:12273:20;;;;;;;;;;;-1:-1:-1;;;406:12273:20;;;;;;;14195:33:21;406:12273:20;;14195:33:21;;;;;;:::i;:::-;14263:1;14249:1083;14310:3;14271:37;406:12273:20;;;;14271:37:21;;:::i;:::-;14266:42;;;;14344:4;14367:10;14263:1;14403:3;406:12273:20;;14379:22:21;;;;;14430:16;;14440:5;;;;:::i;:::-;14430:16;;:::i;:::-;:34;14450:14;;;;;:::i;14430:34::-;-1:-1:-1;;;;;;406:12273:20;;;14430:34:21;14426:123;;14344:4;406:12273:20;14367:10:21;;14426:123;14488:15;;;;14263:1;14362:201;14576:746;;14362:201;14310:3;;;:::i;:::-;14254:10;;;14576:746;406:12273:20;14681:22:21;406:12273:20;;14681:22:21;;:::i;:::-;14721:26;;14824:117;406:12273:20;;14831:27:21;;:57;;;14824:117;14831:57;;;14912:10;;;:::i;:::-;14824:117;;14831:57;;;;;;14979:21;;;14975:333;;14576:746;;;;14975:333;15060:21;;;;15050:32;15060:21;;;;:::i;:::-;15050:32;:::i;:::-;15109:10;14263:1;15148:3;15125:21;;;;:::i;:::-;15121:25;;;;;15205:14;14344:4;15205:14;15195:25;;15205:14;15125:21;15205:14;;;:::i;:::-;15195:25;;:::i;:::-;14263:1;15179:41;;;;;:::i;:::-;;406:12273:20;15109:10:21;;;;;15121:25;;;;;;;15264;:::o;14831:57::-;-1:-1:-1;;;;;;;;;;14862:19:21;;;;;:::i;:::-;406:12273:20;14862:26:21;;14831:57;;14379:22;;;;;;;;14266:42;;;;;406:12273:20;;:::i;3777:307:5:-;406:12273:20;;3937:25:5;3933:51;;-1:-1:-1;406:12273:20;;;4029:13:5;;;406:12273:20;4059:11:5;;:20;3777:307::o;406:12273:20:-;;;;;;;:::i;:::-;-1:-1:-1;406:12273:20;;;;;;;:::o;1490:173:13:-;406:12273:20;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;406:12273:20;;;;:::i;:::-;;375:3:5;406:12273:20;1251:12:12;;406:12273:20;;1284:265:12;;;;-1:-1:-1;1284:265:12;;;;;;;;;;-1:-1:-1;1284:265:12;406:12273:20;1284:265:12;406:12273:20;1490:173:13;:::o;3021:204::-;406:12273:20;;4648:30:12;;3021:204:13;;-1:-1:-1;;;;;406:12273:20;;;6299:2:13;6290:11;;6299:2;;6317:48;:7;;406:12273:20;;6317:7:13;;406:12273:20;;;6317:48:13;;:::i;:::-;;6286:623;3190:7;406:12273:20;;;:::i;:::-;;;;4648:30:12;;:::i;:::-;;3021:204:13:o;6286:623::-;-1:-1:-1;6395:4:13;6386:13;;6395:4;;6474:27;6415:7;:45;:7;;:45;:::i;:::-;;6474:7;;:27;:::i;:::-;;6286:623;;6382:527;6531:6;6522:15;;6531:6;;6612:27;6553:7;:45;:7;;:45;:::i;:::-;;6612:7;;:27;:::i;6518:391::-;6669:10;6660:19;;6669:10;;6754:27;6695:7;:45;:7;;:45;:::i;:::-;;6754:7;;:27;:::i;6656:253::-;6871:27;6812:7;:45;:7;;:45;:::i;:::-;;6871:7;;:27;:::i;1832:202::-;;1916:7;;406:12273:20;;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;1832:202:13;1942:39;5128:12:12;2009:17:13;5204:416:12;;;;;;;;;;;;;1832:202:13;406:12273:20;;;;2009:17:13;5128:12:12;2009:17:13;;406:12273:20;5128:12:12;2009:17:13;;;;;:::i;:::-;;:::i;5204:416:12:-;;;;;;5117:77;406:12273:20;5106:1:12;406:12273:20;;;;;5181:1:12;406:12273:20;;;;;;;5128:12:12;2099:7;2145:19;2009:17:13;2099:7:12;2116:19;1942:39:13;2099:7:12;;2116:19;;;:::i;:::-;;2145;;:::i;:::-;;5117:77;;;;;;3607:146:13;7035:7;;406:12273:20;;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;3607:146:13;7061:17;5128:12:12;5204:416;;;;;;;;;;;;;;3607:146:13;3732:9;;;406:12273:20;;;5106:1:12;406:12273:20;;;;;;;;3607:146:13:o;5204:416:12:-;;;;;;5117:77;406:12273:20;5106:1:12;406:12273:20;;;;;5181:1:12;406:12273:20;;;;;;;5128:12:12;2099:7;2145:19;2099:7;;2116:19;7061:17:13;2099:7:12;;2116:19;;;:::i;2145:::-;;5117:77;;;;;;4211:154:13;7035:7;;406:12273:20;;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;4211:154:13;406:12273:20;5128:12:12;5204:416;;;;;;;;;;;;;;4211:154:13;-1:-1:-1;;4344:9:13;406:12273:20;;-1:-1:-1;;406:12273:20;;;4344:9:13;406:12273:20;;;;;4211:154:13:o;5204:416:12:-;;;;;;5117:77;406:12273:20;5106:1:12;406:12273:20;;;;;5181:1:12;406:12273:20;;;;;;;5128:12:12;2099:7;2145:19;2099:7;;2116:19;406:12273:20;2099:7:12;;2116:19;;;:::i;2145:::-;;5117:77;;;;;;2828:187:13;406:12273:20;;4648:30:12;;2828:187:13;;-1:-1:-1;;;;;406:12273:20;;;6299:2:13;6290:11;;6299:2;;6317:48;:7;;406:12273:20;;6317:7:13;;406:12273:20;;;6317:48:13;;:::i;6286:623::-;-1:-1:-1;6395:4:13;6386:13;;6395:4;;6474:27;6415:7;:45;:7;;:45;:::i;6382:527::-;6531:6;6522:15;;6531:6;;6612:27;6553:7;:45;:7;;:45;:::i;6518:391::-;6669:10;6660:19;;6669:10;;6754:27;6695:7;:45;:7;;:45;:::i;6656:253::-;6871:27;6812:7;:45;:7;;:45;:::i;1020:555:12:-;;406:12273:20;;:::i;:::-;;;;;1119:18:12;1115:81;;1020:555;1251:12;;1130:2;1251:12;;406:12273:20;1284:265:12;;;;;;-1:-1:-1;1284:265:12;;;;1130:2;1284:265;;;;;;;;1020:555;:::o;1115:81::-;1130:2;406:12273:20;1130:2:12;406:12273:20;;;;;;;;;;;1115:81:12;;;4539:146;;406:12273:20;;:::i;:::-;;;;;;;:::i;:::-;;2955:27:12;406:12273:20;;2963:18:12;;;2955:27;:::i;:::-;3004:7;;406:12273:20;3047:9:12;;;;;:::i;:::-;3084:12;;;;;406:12273:20;3070:26:12;;3066:85;;4539:146;3084:12;3161:9;3198:507;;;;;;;;;;;;;;4539:146;3198:507;;;3765:165;3772:9;;;;;;;406:12273:20;;;;3084:12:12;406:12273:20;4009:3:12;406:12273:20;;4045:189:12;;;;;;;;;;;;;4539:146;:::o;3783:9::-;3808:65;;;3910:9;3886:10;3783:9;3808:65;;;;;3886:10;:::i;:::-;3910:9;;:::i;:::-;3783;;:::i;:::-;3765:165;;;3198:507;;;;;;3066:85;3124:15;;;;:::i;:::-;;;:::i;:::-;3066:85;;4948:699;406:12273:20;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;4948:699;6838:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5204:416::-;;4948:699;:::o;5117:77::-;406:12273:20;5106:1:12;406:12273:20;;;;5181:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;:::-;;2145;;:::i;:::-;;5117:77;;4948:699;406:12273:20;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;4948:699;6721:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;406:12273:20;5106:1:12;406:12273:20;;;;5181:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;406:12273:20;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;4948:699;6579:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;406:12273:20;5106:1:12;406:12273:20;;;;5181:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;406:12273:20;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;4948:699;6441:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;406:12273:20;5106:1:12;406:12273:20;;;;5181:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;406:12273:20;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;4948:699;6838:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;406:12273:20;5106:1:12;406:12273:20;;;;5181:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;406:12273:20;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;4948:699;6721:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;406:12273:20;5106:1:12;406:12273:20;;;;5181:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;406:12273:20;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;4948:699;6579:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;406:12273:20;5106:1:12;406:12273:20;;;;5181:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;406:12273:20;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;4948:699;6441:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;406:12273:20;5106:1:12;406:12273:20;;;;5181:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;;406:12273:20;;:::i;:::-;;5058:7:12;;406:12273:20;5106:1:12;406:12273:20;;;;;;;;5128:12:12;;;406:12273:20;5121:19:12;;;5117:77;;4948:699;5128:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;406:12273:20;5106:1:12;406:12273:20;;;;5181:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;:::-;;2145;;:::i;:::-;;5117:77;;8083:795;;406:12273:20;;:::i;:::-;;8200:7:12;;406:12273:20;;6896:1:13;406:12273:20;;;6896:1:13;406:12273:20;;;8280:12:12;;;406:12273:20;8266:26:12;;8262:85;;8083:795;6896:1:13;8395:457:12;;;;;;;-1:-1:-1;;;;;8395:457:12;;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;406:12273:20;;;;;;8334:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;8083:795;;406:12273:20;;:::i;:::-;;8200:7:12;;406:12273:20;;6779:1:13;406:12273:20;;;6779:1:13;406:12273:20;;;8280:12:12;;;406:12273:20;8266:26:12;;8262:85;;8083:795;6779:1:13;8395:457:12;;;;;;406:12273:20;;;8395:457:12;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;406:12273:20;;;;;;8334:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;8083:795;;406:12273:20;;:::i;:::-;;8200:7:12;;406:12273:20;;6637:1:13;406:12273:20;;;6637:1:13;406:12273:20;;;8280:12:12;;;406:12273:20;8266:26:12;;8262:85;;8083:795;6637:1:13;8395:457:12;;;;;;;;;;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;406:12273:20;;;;;;6637:1:13;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;8083:795;;406:12273:20;;:::i;:::-;;8200:7:12;;406:12273:20;;6499:1:13;406:12273:20;;;6499:1:13;406:12273:20;;;8280:12:12;;;406:12273:20;8266:26:12;;8262:85;;8083:795;6499:1:13;8395:457:12;;;;;;406:12273:20;;;8395:457:12;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;406:12273:20;6499:1:13;406:12273:20;;;;8334:1:12;406:12273:20;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;406:12273:20;;;;:::o;2844:1427:12:-;;;406:12273:20;;:::i;:::-;;2955:27:12;406:12273:20;;2963:18:12;;;2955:27;:::i;:::-;3004:7;;406:12273:20;3047:9:12;3084:12;3047:9;;;;:::i;:::-;3084:12;;;;;;406:12273:20;3070:26:12;;3066:85;;2844:1427;3198:507;;;;;;;;;;;;;;2844:1427;3198:507;;;3765:165;3772:9;;;;;;;406:12273:20;;;;3084:12:12;406:12273:20;4009:3:12;406:12273:20;;4045:189:12;;;;;;;;;;;;;2844:1427;:::o;3783:9::-;3808:65;;;3910:9;3886:10;3783:9;3808:65;;;;;3886:10;:::i;3783:9::-;3765:165;;;3198:507;;;;;;3066:85;3124:15;;;;:::i;:::-;;;:::i;:::-;3066:85;;2004:167;;2145:19;2004:167;2116:19;2099:7;;2116:19;;;:::i;:::-;;2145;:::i"},"methodIdentifiers":{"acceptOwnership()":"79ba5097","aggregateProofs(bytes[],bytes[])":"d175d81a","aggregatedProofHashes(uint256,uint256)":"39a9e4b3","authorizedCallers(address)":"536fff6c","batchCounter()":"68233eef","checkUpkeep(bytes)":"6e04ff0d","continueRecursiveFolding(uint256)":"683dd777","contractOwner()":"ce606ee0","functionsRequestToProofId(bytes32)":"56959332","getFoldedInstance(uint256)":"fa0c7a18","getProofRequest(uint256)":"152a9526","getRecursiveProofBatch(uint256)":"84a088e5","getSubscriptionId()":"de3d9fb7","groth16Verifier()":"19c813be","handleOracleFulfillment(bytes32,bytes,bytes)":"0ca76175","isStateVerified(bytes32)":"a9431f23","lastUpkeepTimestamp()":"624cffd4","maxProofsPerBatch()":"57aabcac","maxRecursionDepth()":"457b2e41","minProofsPerBatch()":"e2ecf1e2","novaVerifier()":"28606775","owner()":"8da5cb5b","performUpkeep(bytes)":"4585e33b","proofRequests(uint256)":"25825746","proofToBatch(uint256)":"10a14c40","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","recursiveProofBatches(uint256)":"223b6637","requestCounter()":"973a814e","requestProofVerification(string,uint256)":"57efe032","s_vrfCoordinator()":"9eccacf6","setAuthorizedCaller(address,bool)":"454bbd29","setCoordinator(address)":"8ea98117","setFunctionsConfig(uint64,uint32,bytes32)":"1bd6447a","setFunctionsSource(string)":"36e0025f","setProofServiceUrl(string)":"1098241b","setUpkeepInterval(uint256)":"72e4c9f6","setVRFConfig(uint256,bytes32,uint32)":"b5cce133","startNovaFolding(uint256[])":"62625bc1","transferOwnership(address)":"f2fde38b","updateRecursionParams(uint256,uint256,uint256)":"2091f938","upkeepInterval()":"5a74373c","usedNullifiers(bytes32)":"206137aa","usedProofHashes(bytes32)":"d87318b2","verifiedProofs(bytes32)":"176d80c4","verifyNovaProof(uint256,bytes)":"3f5ef0de"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"functionsRouter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vrfSubscriptionId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"vrfKeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"functionsSubscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"functionsDonId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"groth16VerifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_novaVerifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EmptyArgs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySource\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoInlineSecrets\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyRouterCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"error\",\"type\":\"bytes\"}],\"name\":\"FunctionsRequestError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"FunctionsRequestSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"publicInputs\",\"type\":\"bytes\"}],\"name\":\"FunctionsResponseReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"aggregatedHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"NovaFoldingCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"proofIds\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"NovaFoldingStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"ProofRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"name\":\"ProofVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"selectedBlock\",\"type\":\"uint256\"}],\"name\":\"RandomnessReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recursionDepth\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"recursiveProof\",\"type\":\"bytes\"}],\"name\":\"RecursiveProofGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"proofs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"publicInputsArray\",\"type\":\"bytes[]\"}],\"name\":\"aggregateProofs\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"aggregatedHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"aggregatedProofHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedCallers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batchCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"name\":\"continueRecursiveFolding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"functionsRequestToProofId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"name\":\"getFoldedInstance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stepIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stepOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"programCounter\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"stateRootIn\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRootOut\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"struct NovaProofAggregator.NovaInstance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getProofRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"struct ZKProofAggregator.ProofRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"name\":\"getRecursiveProofBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proofIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recursionDepth\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"aggregatedHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSubscriptionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"groth16Verifier\",\"outputs\":[{\"internalType\":\"contract Groth16Verifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"handleOracleFulfillment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"name\":\"isStateVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpkeepTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxProofsPerBatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRecursionDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minProofsPerBatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"novaVerifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proofRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proofToBatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recursiveProofBatches\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recursionDepth\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"aggregatedHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stepIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stepOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"programCounter\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"stateRootIn\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRootOut\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"struct NovaProofAggregator.NovaInstance\",\"name\":\"foldedInstance\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"targetBlockNumber\",\"type\":\"uint256\"}],\"name\":\"requestProofVerification\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setAuthorizedCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"gasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"donId\",\"type\":\"bytes32\"}],\"name\":\"setFunctionsConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"source\",\"type\":\"string\"}],\"name\":\"setFunctionsSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"name\":\"setProofServiceUrl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newInterval\",\"type\":\"uint256\"}],\"name\":\"setUpkeepInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"name\":\"setVRFConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proofIds\",\"type\":\"uint256[]\"}],\"name\":\"startNovaFolding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxRecursionDepth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minProofsPerBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxProofsPerBatch\",\"type\":\"uint256\"}],\"name\":\"updateRecursionParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upkeepInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedNullifiers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedProofHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"verifiedProofs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyNovaProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Enhanced ZK proof aggregator with Nova recursive proof capabilities\",\"kind\":\"dev\",\"methods\":{\"aggregateProofs(bytes[],bytes[])\":{\"details\":\"Aggregate multiple ZK proofs into a single verification\",\"params\":{\"proofs\":\"Array of proof data to aggregate\",\"publicInputsArray\":\"Array of public inputs for each proof\"},\"returns\":{\"aggregatedHash\":\"The hash representing the aggregated proof\"}},\"checkUpkeep(bytes)\":{\"details\":\"Chainlink Automation upkeep check\"},\"continueRecursiveFolding(uint256)\":{\"details\":\"Continue recursive folding with additional depth\",\"params\":{\"batchId\":\"The batch to continue folding\"}},\"getFoldedInstance(uint256)\":{\"details\":\"Get folded instance for a batch\"},\"getProofRequest(uint256)\":{\"details\":\"Get proof request details\"},\"getRecursiveProofBatch(uint256)\":{\"details\":\"Get recursive proof batch details\"},\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"details\":\"Either response or error parameter will be set, but never both.\",\"params\":{\"err\":\"Aggregated error either from the request's source code or from the execution pipeline.\",\"requestId\":\"The requestId returned by FunctionsClient.sendRequest().\",\"response\":\"Aggregated response from the request's source code.\"}},\"isStateVerified(bytes32)\":{\"details\":\"Check if a state root has been verified\"},\"performUpkeep(bytes)\":{\"details\":\"Chainlink Automation upkeep perform\"},\"requestProofVerification(string,uint256)\":{\"details\":\"Request proof verification for a specific chain state\",\"params\":{\"sourceChain\":\"The identifier of the source blockchain\",\"targetBlockNumber\":\"The block number to verify (0 for random selection)\"}},\"setUpkeepInterval(uint256)\":{\"details\":\"Administrative functions\"},\"startNovaFolding(uint256[])\":{\"details\":\"Start Nova folding process for multiple proofs\",\"params\":{\"proofIds\":\"Array of proof IDs to aggregate recursively\"},\"returns\":{\"batchId\":\"Unique identifier for this folding batch\"}},\"updateRecursionParams(uint256,uint256,uint256)\":{\"details\":\"Admin function to update recursion parameters\"},\"verifyNovaProof(uint256,bytes)\":{\"details\":\"Verify Nova recursive proof on-chain\",\"params\":{\"batchId\":\"The batch ID to verify\",\"proof\":\"The recursive proof to verify\"},\"returns\":{\"isValid\":\"Whether the proof is valid\"}}},\"title\":\"NovaProofAggregator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"notice\":\"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"This contract enables recursive proof composition for scalable verification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NovaProofAggregator.sol\":\"NovaProofAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"keccak256\":\"0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e0828ef423afef9f6f709bb173a7e3991fe555bf9337a4941d65da525ac4ad3\",\"dweb:/ipfs/QmXz1jHRZFTqdnNxP2tffVQ9NnUE1xgtBMRWuyUrTVY4pm\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c3228edc2cff7c55301d3764e54cd7ada6af81ef9aadf8bc116a2c982523d6\",\"dweb:/ipfs/QmXjJQgCu2gvX6QQJ9GC1gEoy3vrmpf1PiRPLqWqKddwRe\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"keccak256\":\"0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7c96e993b253723ed5461008c34b847d7b067221736068d45f029db4d92b0d\",\"dweb:/ipfs/QmTMMXAWXeDgSChnToydej6e3p331KiJZT3S27ZiPkht9t\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeeaeadc797b7656fd30201ab8c8ed24fe8fb3f83a480142bb55c7c7babb2b4b\",\"dweb:/ipfs/Qmdb55a1iWJetog7qUpZ6FHKGSA8g3Vu68LGsXfqfec9k5\"]},\"@chainlink/contracts/src/v0.8/functions/v1_3_0/FunctionsClient.sol\":{\"keccak256\":\"0xdc40f1e9dea8a572d43d310afa68e978c35218d16097b9cfd9d1b6137df3cd0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec1f247a0c4c401d69fa5ad383b6d2ba8dcd31011ce7edd4cb69fedb89ac3e5\",\"dweb:/ipfs/QmV55NBD35u96AYV4F4U9JYmf5uGm4mVoUsqs3mcw3tu4S\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd\",\"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]},\"contracts/Groth16Verifier.sol\":{\"keccak256\":\"0xf12cebd51a2e197f8e973487233c5f327ff570789c70522a2024de67486ec0dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f73abeb079a6e7b7343e4ff3852409af7e304099980ab09defb10743573ddb8\",\"dweb:/ipfs/QmQgCZGit8RxQ1uJocb14c3nNse1H6oDQtweG2n1utSgUb\"]},\"contracts/NovaProofAggregator.sol\":{\"keccak256\":\"0x2eb7727d762713abe6f7e948a1baf81bff605f15f28a064e09a3ba389c59a382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://221cbe1ed142dbb62f7365e6c9408616eda07e770c65a38a97661fc0ba942b2d\",\"dweb:/ipfs/QmV9fun4rXeF2Vhd277pwSCms6xvgdLERHb3X9oBY3tyvF\"]},\"contracts/ZKProofAggregator.sol\":{\"keccak256\":\"0x9a42f290e41d844f80d54aaf4fda6f7ca604c3311bd49d1fbcc04608bb1f66a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4af4498a19327413f7950004e6348c1028a4ee994eaea3e6794564094298bb2d\",\"dweb:/ipfs/Qmf92g21jvSuW1SSFSEF1pWF4rMTDEhKvVhXwAvn1GDxyN\"]}},\"version\":1}"}},"contracts/ZKProofAggregator.sol":{"ZKProofAggregator":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinator","type":"address"},{"internalType":"address","name":"functionsRouter","type":"address"},{"internalType":"uint256","name":"vrfSubscriptionId","type":"uint256"},{"internalType":"bytes32","name":"vrfKeyHash","type":"bytes32"},{"internalType":"uint64","name":"functionsSubscriptionId","type":"uint64"},{"internalType":"bytes32","name":"functionsDonId","type":"bytes32"},{"internalType":"address","name":"groth16VerifierAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EmptyArgs","type":"error"},{"inputs":[],"name":"EmptySource","type":"error"},{"inputs":[],"name":"NoInlineSecrets","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"coordinator","type":"address"}],"name":"OnlyOwnerOrCoordinator","type":"error"},{"inputs":[],"name":"OnlyRouterCanFulfill","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"error","type":"bytes"}],"name":"FunctionsRequestError","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"string","name":"sourceChain","type":"string"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"FunctionsRequestSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"proof","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"publicInputs","type":"bytes"}],"name":"FunctionsResponseReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"ProofRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"},{"indexed":false,"internalType":"bytes32","name":"stateRoot","type":"bytes32"}],"name":"ProofVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"randomValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"selectedBlock","type":"uint256"}],"name":"RandomnessReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestSent","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"proofs","type":"bytes[]"},{"internalType":"bytes[]","name":"publicInputsArray","type":"bytes[]"}],"name":"aggregateProofs","outputs":[{"internalType":"bytes32","name":"aggregatedHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"aggregatedProofHashes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedCallers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contractOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"functionsRequestToProofId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"getProofRequest","outputs":[{"components":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"sourceChain","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"},{"internalType":"bool","name":"isCompleted","type":"bool"},{"internalType":"bool","name":"isValid","type":"bool"}],"internalType":"struct ZKProofAggregator.ProofRequest","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSubscriptionId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"groth16Verifier","outputs":[{"internalType":"contract Groth16Verifier","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"}],"name":"handleOracleFulfillment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"stateRoot","type":"bytes32"}],"name":"isStateVerified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastUpkeepTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proofRequests","outputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"sourceChain","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"},{"internalType":"bool","name":"isCompleted","type":"bool"},{"internalType":"bool","name":"isValid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"sourceChain","type":"string"},{"internalType":"uint256","name":"targetBlockNumber","type":"uint256"}],"name":"requestProofVerification","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_vrfCoordinator","outputs":[{"internalType":"contract IVRFCoordinatorV2Plus","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"bool","name":"authorized","type":"bool"}],"name":"setAuthorizedCaller","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"gasLimit","type":"uint32"},{"internalType":"bytes32","name":"donId","type":"bytes32"}],"name":"setFunctionsConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"source","type":"string"}],"name":"setFunctionsSource","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"url","type":"string"}],"name":"setProofServiceUrl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newInterval","type":"uint256"}],"name":"setUpkeepInterval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subscriptionId","type":"uint256"},{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"name":"setVRFConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"upkeepInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"usedProofHashes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"verifiedProofs","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":493,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xC0 CALLVALUE PUSH3 0x1D2 JUMPI PUSH1 0x1F PUSH3 0x3DFB CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP2 DUP4 DUP6 GT DUP4 DUP7 LT OR PUSH3 0x1D7 JUMPI DUP2 PUSH1 0xE0 SWAP3 DUP5 SWAP3 PUSH1 0x40 SWAP8 DUP9 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x1D2 JUMPI PUSH3 0x53 DUP2 PUSH3 0x1ED JUMP JUMPDEST PUSH3 0x61 PUSH1 0x20 DUP4 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP3 DUP5 DUP4 ADD MLOAD SWAP3 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD SWAP3 DUP4 AND DUP4 SUB PUSH3 0x1D2 JUMPI PUSH3 0x8E PUSH1 0xC0 PUSH1 0xA0 DUP5 ADD MLOAD SWAP4 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP3 CALLER ISZERO PUSH3 0x18E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP1 ISZERO PUSH3 0x17D JUMPI PUSH21 0x493E00000000000000000000000010003002625A0 SWAP4 SWAP3 SWAP2 DUP8 SWAP2 DUP11 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND PUSH1 0x80 MSTORE PUSH2 0xE10 PUSH1 0x7 SSTORE PUSH1 0xA SLOAD SWAP2 PUSH1 0xFF NOT SWAP8 PUSH1 0x8 DUP10 PUSH1 0xE SLOAD AND OR PUSH1 0xE SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH11 0x100000000000000000000 PUSH1 0x1 PUSH1 0x90 SHL SUB SWAP1 PUSH1 0x50 SHL AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xB0 SHL SUB NOT AND OR OR PUSH1 0xA SSTORE PUSH1 0xB SSTORE AND PUSH1 0xA0 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x1 DUP4 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP1 PUSH1 0x13 SLOAD AND OR PUSH1 0x13 SSTORE TIMESTAMP PUSH1 0x6 SSTORE MLOAD PUSH2 0x3BF8 SWAP1 DUP2 PUSH3 0x203 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x39C ADD MSTORE PUSH2 0x3037 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x707 ADD MSTORE RETURN JUMPDEST DUP10 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x1D2 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA76175 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x1098241B EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x152A9526 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x176D80C4 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x19C813BE EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x1BD6447A EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x25825746 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x36E0025F EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x39A9E4B3 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x454BBD29 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x536FFF6C EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x56959332 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x57EFE032 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x5A74373C EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x624CFFD4 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x72E4C9F6 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x973A814E EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9431F23 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xB5CCE133 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xD175D81A EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xD87318B2 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xDE3D9FB7 EQ PUSH2 0x176 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x148D JUMP JUMPDEST PUSH2 0x146F JUMP JUMPDEST PUSH2 0x143E JUMP JUMPDEST PUSH2 0x136E JUMP JUMPDEST PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x120A JUMP JUMPDEST PUSH2 0x114B JUMP JUMPDEST PUSH2 0x111D JUMP JUMPDEST PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x1094 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST PUSH2 0xF69 JUMP JUMPDEST PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH2 0xC5D JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2BC DUP3 PUSH2 0x21D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2BC DUP3 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2BC DUP3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x238 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2FF DUP3 PUSH2 0x2D8 JUMP JUMPDEST SWAP2 PUSH2 0x30D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x28E JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x32A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x32A JUMPI DUP2 PUSH1 0x20 PUSH2 0x34A SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x2F3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x32A JUMPI PUSH2 0x381 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x32F JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x32A JUMPI PUSH2 0x39A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x32F JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x3FB JUMPI PUSH2 0x3D4 SWAP2 DUP4 PUSH2 0x1FFF JUMP JUMPDEST PUSH32 0x85E1543BF2F84FE80C6BADBCE3648C8539AD1DF4D2B3D822938CA0538BE727E6 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC6829F83 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x32A JUMPI PUSH2 0x34A SWAP2 PUSH1 0x4 ADD PUSH2 0x32F JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH2 0x445 CALLDATASIZE PUSH2 0x40D JUMP JUMPDEST PUSH2 0x45A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x238 JUMPI PUSH2 0x47E DUP2 PUSH2 0x479 PUSH1 0xD SLOAD PUSH2 0x94F JUMP JUMPDEST PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x4C0 JUMPI POP DUP2 SWAP1 PUSH2 0x4B0 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x4B5 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x49B JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x4F3 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x52F JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x516 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x50B JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x55A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x54A JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x583 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x547 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xC0 PUSH2 0x5C9 PUSH1 0x40 DUP6 ADD MLOAD DUP4 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH2 0x6BC PUSH1 0x40 DUP1 PUSH1 0xC0 DUP2 MLOAD PUSH2 0x617 DUP2 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 DUP1 SWAP4 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x6B2 PUSH1 0xFF PUSH1 0x5 DUP4 MLOAD SWAP5 PUSH2 0x65E DUP7 PUSH2 0x21D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x681 PUSH1 0x2 DUP3 ADD PUSH2 0xB82 JUMP JUMPDEST DUP7 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x58F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x32A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x32A JUMPI PUSH2 0x775 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x78A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x50 SHL NOT AND PUSH1 0x50 SWAP4 SWAP1 SWAP4 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x50 SHL AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x90 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFFFFFFFF PUSH1 0x90 SHL AND OR SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xB SSTORE STOP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x32A JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x32A JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x32A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x32A JUMPI PUSH2 0x834 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x931 JUMPI POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x8F6 JUMPI PUSH2 0x3E7 NOT NUMBER ADD NUMBER DUP2 GT PUSH2 0x8F1 JUMPI DUP5 PUSH2 0x8D9 PUSH2 0x8B8 PUSH32 0x2374D5481494AD7962D4BD1B98B91E9F3117C9B66533B2804BE3D76C41A49088 SWAP4 PUSH2 0x8B2 PUSH2 0x8A9 DUP10 PUSH2 0x8EF SWAP12 PUSH2 0x2271 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3E8 SWAP1 MOD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2296 JUMP JUMPDEST SWAP6 DUP7 SWAP3 DUP4 PUSH1 0x3 PUSH2 0x8D2 DUP10 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE LOG2 PUSH2 0x24C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A5908159491881C995C5D595CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x97F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x969 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x95E JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 PUSH2 0x998 DUP3 PUSH2 0x94F JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xA00 JUMPI POP PUSH1 0x1 EQ PUSH2 0x9BF JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST SWAP1 SWAP4 SWAP5 SWAP6 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x9EC JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x9B8 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xC SLOAD SWAP2 PUSH2 0xA33 DUP4 PUSH2 0x94F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xABF JUMPI POP PUSH1 0x1 EQ PUSH2 0xA5E JUMPI JUMPDEST POP POP PUSH2 0x2BC SWAP3 POP SUB DUP4 PUSH2 0x28E JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xAA7 JUMPI POP PUSH2 0x2BC SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0xA50 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0xA8C JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x2BC SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xD SLOAD SWAP2 PUSH2 0xAF7 DUP4 PUSH2 0x94F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xABF JUMPI POP PUSH1 0x1 EQ PUSH2 0xB21 JUMPI POP POP PUSH2 0x2BC SWAP3 POP SUB DUP4 PUSH2 0x28E JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xB6A JUMPI POP PUSH2 0x2BC SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0xA50 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0xB4F JUMP JUMPDEST SWAP1 PUSH2 0x2BC PUSH2 0xB96 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x989 JUMP JUMPDEST SUB DUP4 PUSH2 0x28E JUMP JUMPDEST SWAP6 SWAP3 PUSH1 0xC0 SWAP6 SWAP3 PUSH2 0xBCB SWAP3 SWAP10 SWAP9 SWAP6 SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xE0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH2 0x6BC PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xC35 DUP6 PUSH2 0xC2E DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SUB DUP7 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x5 PUSH1 0x4 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0xFF DUP1 DUP8 PUSH1 0x8 SHR AND SWAP7 AND SWAP5 DUP9 PUSH2 0xB9D JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH2 0xC6B CALLDATASIZE PUSH2 0x40D JUMP JUMPDEST PUSH2 0xC80 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x238 JUMPI PUSH2 0xCA4 DUP2 PUSH2 0xC9F PUSH1 0xC SLOAD PUSH2 0x94F JUMP JUMPDEST PUSH2 0x162D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCDA JUMPI POP DUP2 SWAP1 PUSH2 0xCD5 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x4B5 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xC SSTORE STOP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0xD0D PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0xD49 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0xD30 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xD25 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xD12 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x0 SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xDB7 JUMPI DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x32A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH2 0xDEA PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x32A JUMPI PUSH1 0x13 SLOAD PUSH2 0x8EF SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xE13 SWAP1 DUP4 AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x32A JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x32A JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x32A JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x32A JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH2 0xE89 CALLDATASIZE PUSH2 0xE32 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0x8F1 JUMPI PUSH2 0xEA4 SWAP1 PUSH1 0x7 SLOAD LT PUSH2 0x1736 JUMP JUMPDEST PUSH2 0xEAD TIMESTAMP PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x2BF7F019 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x657468657265756D PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x84 DUP2 ADD SUB DUP2 PUSH1 0x0 ADDRESS GAS CALL DUP1 ISZERO PUSH2 0xF25 JUMPI PUSH2 0xEFD JUMPI STOP JUMPDEST PUSH2 0x8EF SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF1E JUMPI JUMPDEST PUSH2 0xF16 DUP2 DUP4 PUSH2 0x28E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1776 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x1785 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF4B PUSH2 0xDBB JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x32A JUMPI PUSH2 0xFC8 PUSH2 0x6BC SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x102E PUSH2 0xFD9 PUSH1 0x5 SLOAD PUSH2 0x1791 JUMP JUMPDEST SWAP3 PUSH2 0xFE3 DUP5 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0xFEB PUSH2 0x2AF JUMP JUMPDEST CALLER DUP2 MSTORE SWAP1 TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1029 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x17A0 JUMP JUMPDEST DUP1 PUSH2 0x1085 JUMPI PUSH2 0x103C DUP3 PUSH2 0x26D4 JUMP JUMPDEST DUP2 PUSH32 0x7EF8CA77FDC89C79F093F2A6B2348B1FCDA0BEB941CE31CE9F2D9D260C4DB9D2 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1072 CALLER SWAP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x108F DUP2 DUP4 PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0x103C JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH2 0x10DE CALLDATASIZE PUSH2 0xE32 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x7 SLOAD LT PUSH1 0x40 MLOAD SWAP1 PUSH2 0x10FD DUP3 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0x6BC PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH2 0x1143 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1207 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER SUB PUSH2 0x11C9 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH2 0x124C PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x129A JUMPI JUMPDEST PUSH2 0x1272 JUMPI PUSH2 0x8EF DUP4 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x64 SWAP3 POP PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x61DB9C1 PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 PUSH1 0x2 SLOAD AND CALLER EQ ISZERO PUSH2 0x1265 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x44 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x32A JUMPI PUSH2 0x1326 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x9 SSTORE PUSH4 0xFFFFFFFF NOT PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x32A JUMPI PUSH2 0x139F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7D1 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x32A JUMPI PUSH2 0x13B8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7D1 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x142A JUMPI JUMPDEST ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x6BC SWAP4 PUSH2 0x13E4 SWAP4 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13D2 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH2 0x14A6 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 CALLER DUP4 SWAP1 SUB PUSH2 0x1544 JUMPI AND SWAP1 CALLER DUP3 EQ PUSH2 0x14FF JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1589 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x15C7 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1623 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1618 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x160C JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1639 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1695 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x168A JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x167E JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1675 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x16AD JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x16EB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x16E0 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16D4 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x16CB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST PUSH1 0x1F NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x173D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155C1AD9595C081B9BDD081B9959591959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x32A JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8F1 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x2 DUP4 ADD SWAP2 PUSH1 0x40 DUP6 ADD MLOAD DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x238 JUMPI PUSH2 0x17FB DUP5 PUSH2 0x17F5 DUP8 SLOAD PUSH2 0x94F JUMP JUMPDEST DUP8 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0x1893 JUMPI POP POP SWAP4 PUSH2 0x187D SWAP4 PUSH2 0x183B DUP5 PUSH1 0xC0 SWAP6 PUSH1 0x5 SWAP6 PUSH2 0x2BC SWAP11 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x4B5 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 PUSH2 0x1876 PUSH2 0x1864 PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 PUSH2 0x18AB DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x18FB JUMPI POP POP POP DUP5 PUSH1 0x5 SWAP5 PUSH2 0x2BC SWAP10 SWAP9 SWAP5 PUSH2 0x187D SWAP9 SWAP5 PUSH1 0xC0 SWAP9 PUSH1 0x1 SWAP6 LT PUSH2 0x18E2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x183E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x18D5 JUMP JUMPDEST DUP5 DUP7 ADD MLOAD DUP8 SSTORE SWAP6 DUP7 ADD SWAP6 SWAP5 DUP2 ADD SWAP5 SWAP2 DUP2 ADD SWAP2 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x191F DUP3 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x197A JUMPI PUSH1 0x20 DUP2 PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 SWAP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1993 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420696E70757420617272617973 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x19D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6F206D616E792070726F6F667320746F2061676772656761746500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x238 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A3C DUP3 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x1A49 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x28E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1A5A PUSH1 0x1F NOT SWAP2 PUSH2 0x1A1B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x32A JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x32A JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x32A JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST ISZERO PUSH2 0x1AB1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6F6620696E206167677265676174696F6E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1B0B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F6620616C7265616479207573656420696E206167677265676174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x4 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 DUP5 MLOAD PUSH1 0x20 DUP1 SWAP7 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1BF5 JUMPI POP POP POP DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP2 POP JUMP JUMPDEST DUP3 MLOAD DUP7 MSTORE SWAP5 DUP8 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x238 JUMPI PUSH9 0x10000000000000000 DUP4 GT PUSH2 0x238 JUMPI DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x1C86 JUMPI JUMPDEST POP PUSH2 0x1C62 PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1C74 JUMPI POP POP POP POP POP JUMP JUMPDEST DUP4 MLOAD DUP4 DUP3 ADD SSTORE SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x1CA6 JUMPI POP POP PUSH2 0x1C4D JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C98 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 DUP2 DUP5 EQ DUP1 PUSH2 0x1E83 JUMPI JUMPDEST PUSH2 0x1CC7 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1CD4 PUSH1 0xA DUP6 GT ISZERO PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x1CDD DUP5 PUSH2 0x1A32 JUMP JUMPDEST SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1DAD JUMPI POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D13 DUP2 PUSH2 0x1D05 CALLER TIMESTAMP DUP8 DUP8 PUSH2 0x1BBB JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x28E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x1D48 PUSH2 0x1D25 PUSH1 0x5 SLOAD PUSH2 0x1791 JUMP JUMPDEST SWAP2 PUSH2 0x1D2F DUP4 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x1D43 DUP4 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1D6C PUSH2 0x1D5F DUP4 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD PUSH1 0x40 MLOAD DUP1 PUSH2 0x1DA7 DUP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x1 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x1DF2 PUSH2 0x1DED PUSH2 0x1DE7 PUSH2 0x1DC4 PUSH1 0x1 SWAP6 DUP8 DUP12 PUSH2 0x1A64 JUMP JUMPDEST PUSH2 0x1DDF PUSH2 0x1DD5 DUP8 DUP13 DUP13 SWAP7 SWAP6 SWAP7 PUSH2 0x1A64 JUMP JUMPDEST SWAP5 SWAP1 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 CALLDATASIZE SWAP2 PUSH2 0x2F3 JUMP JUMPDEST SWAP1 PUSH2 0x27B6 JUMP JUMPDEST PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x1E7D PUSH2 0x1D5F PUSH2 0x1E31 PUSH2 0x1E2B PUSH2 0x1E09 DUP6 DUP9 DUP13 PUSH2 0x1A64 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1D05 PUSH2 0x1E19 DUP9 DUP14 DUP14 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP9 DUP10 SWAP2 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 PUSH2 0x1AF6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1E61 PUSH2 0x1E5C PUSH2 0x1E58 PUSH2 0x1E51 DUP5 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1B04 JUMP JUMPDEST DUP1 PUSH2 0x1E6C DUP6 DUP13 PUSH2 0x1BA7 JUMP JUMPDEST MSTORE PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x1CE1 JUMP JUMPDEST POP DUP4 ISZERO ISZERO PUSH2 0x1CBE JUMP JUMPDEST ISZERO PUSH2 0x1E93 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642046756E6374696F6E73207265717565737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x34A SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1EF6 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x73756363657373 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F19 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0x3430B9A932B0B6283937B7B3 PUSH1 0xA1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F41 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0xECC2D8D2C8D2E8F290C2E6D PUSH1 0xA3 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1F6F PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x547 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP3 SWAP2 SWAP1 PUSH2 0x1F89 DUP5 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x547 JUMP JUMPDEST ADD SWAP1 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F9E DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x383937B7B3 PUSH1 0xD9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1FBF DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0xD DUP3 MSTORE PUSH13 0x7075626C69635369676E616C73 PUSH1 0x98 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1FEF PUSH1 0x20 SWAP3 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST SWAP1 DUP3 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH1 0x0 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2014 DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x2021 DUP3 ISZERO ISZERO PUSH2 0x1E8C JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2218 JUMPI POP PUSH32 0x50348C1AF87D1D2E61E0A7E9BF83A9C67F047D8DE73BE6B88ACAC8655A97581E SWAP2 PUSH2 0x2174 SWAP2 PUSH2 0x205F PUSH2 0x2059 PUSH2 0x1EE9 JUMP JUMPDEST DUP4 PUSH2 0x27EA JUMP JUMPDEST PUSH2 0x2073 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE SWAP1 SWAP2 ISZERO PUSH2 0x21D4 JUMPI PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD SWAP2 PUSH2 0x20BC PUSH2 0x20B6 PUSH2 0x1F0C JUMP JUMPDEST DUP7 PUSH2 0x27EA JUMP JUMPDEST ISZERO PUSH2 0x21BF JUMPI PUSH2 0x20D2 PUSH2 0x20CC PUSH2 0x1F91 JUMP JUMPDEST DUP7 PUSH2 0x28FE JUMP JUMPDEST PUSH2 0x20E3 PUSH2 0x20DD PUSH2 0x1FB2 JUMP JUMPDEST DUP8 PUSH2 0x28FE JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP1 PUSH2 0x21B5 JUMPI JUMPDEST ISZERO PUSH2 0x2179 JUMPI PUSH2 0x2133 SWAP3 PUSH2 0x2164 SWAP5 SWAP3 PUSH2 0x1D05 PUSH2 0x211E PUSH1 0x4 SWAP5 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x2118 PUSH1 0x20 DUP5 ADD DUP1 SWAP8 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 PUSH2 0x1F5C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 DUP5 SWAP4 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SSTORE PUSH2 0x214C PUSH2 0x1D5F DUP3 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x1 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1FDB JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST POP POP PUSH2 0x21AD SWAP2 PUSH1 0x4 PUSH2 0x2133 SWAP3 PUSH2 0x2196 PUSH2 0x2190 PUSH2 0x1F34 JUMP JUMPDEST DUP10 PUSH2 0x28FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211E DUP2 PUSH2 0x1D05 PUSH1 0x20 DUP3 ADD SWAP5 TIMESTAMP SWAP1 DUP7 PUSH2 0x1F73 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x2168 JUMP JUMPDEST POP DUP1 MLOAD ISZERO ISZERO PUSH2 0x20ED JUMP JUMPDEST PUSH2 0x21AD SWAP2 PUSH1 0x4 PUSH2 0x2133 SWAP3 PUSH2 0x2196 PUSH2 0x2190 PUSH2 0x1F34 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD PUSH1 0x40 MLOAD DUP1 PUSH2 0x21AD DUP2 SWAP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH32 0x8117AD48DB1A08344670D33ACDEB14D7EC953B1119DAFA9AB361E5E721D43562 SWAP3 POP PUSH2 0x2265 PUSH1 0x5 PUSH2 0x2257 PUSH2 0x2174 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x1AA5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x30 ADD SWAP1 DUP2 PUSH1 0x30 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x160 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE PUSH2 0x131 DUP3 MSTORE PUSH17 0x72696E6769667928726573756C7429293B PUSH1 0x78 SHL PUSH2 0x140 DUP4 PUSH32 0x636F6E737420636861696E49643D7061727365496E7428617267735B305D293B PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x636F6E737420626C6F636B4E756D626572733D4A534F4E2E7061727365286172 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x67735B315D293B636F6E737420726573756C743D7B737563636573733A747275 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x652C636861696E49642C626C6F636B4E756D626572732C76616C696469747948 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x6173683A27307831323334353637383930616263646566313233343536373839 PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0x3061626364656631323334353637383930616263646566313233343536373839 PUSH1 0xC0 DUP3 ADD MSTORE PUSH32 0x30616263646566272C6D657461646174613A7B74696D657374616D703A4D6174 PUSH1 0xE0 DUP3 ADD MSTORE PUSH32 0x682E666C6F6F7228446174652E6E6F7728292F31303030297D7D3B7265747572 PUSH2 0x100 DUP3 ADD MSTORE PUSH32 0x6E2046756E6374696F6E732E656E636F6465537472696E67284A534F4E2E7374 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2448 DUP3 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC0 DUP4 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2481 DUP3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE DUP2 PUSH1 0x0 JUMPDEST PUSH1 0xA0 DUP2 LT PUSH2 0x2495 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x2489 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x24BD PUSH1 0x20 SWAP2 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x989 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH32 0x89652D00E157965D54F5AD31AF9352416C4E90B879711EC122680D4E3A1DE9A6 SWAP1 PUSH2 0x24F9 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2501 PUSH2 0xA1F JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2666 JUMPI JUMPDEST PUSH2 0x261D PUSH2 0x2641 SWAP2 PUSH2 0x2522 PUSH2 0x251B PUSH2 0x243B JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x30F2 JUMP JUMPDEST PUSH2 0x2618 PUSH1 0x2 PUSH2 0x252F PUSH2 0x2474 JUMP JUMPDEST SWAP6 ADD SWAP5 PUSH2 0x254B PUSH2 0x2546 PUSH2 0x2541 DUP9 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x2AA2 JUMP JUMPDEST PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x2554 DUP3 PUSH2 0x1B5A JUMP JUMPDEST MSTORE PUSH2 0x255E DUP2 PUSH2 0x1B5A JUMP JUMPDEST POP PUSH2 0x258C PUSH2 0x2599 PUSH2 0x256E DUP10 PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x1D05 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH2 0x2118 PUSH1 0x20 DUP6 ADD PUSH1 0x1 SWAP1 PUSH1 0x5B PUSH1 0xF8 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x5D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x25A2 DUP3 PUSH2 0x1B67 JUMP JUMPDEST MSTORE PUSH2 0x25AC DUP2 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH2 0x25C5 PUSH2 0x2546 PUSH2 0x25BF PUSH1 0xE SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x25CE DUP3 PUSH2 0x1B77 JUMP JUMPDEST MSTORE PUSH2 0x25D8 DUP2 PUSH2 0x1B77 JUMP JUMPDEST POP PUSH2 0x25E2 CHAINID PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x25EB DUP3 PUSH2 0x1B87 JUMP JUMPDEST MSTORE PUSH2 0x25F5 DUP2 PUSH2 0x1B87 JUMP JUMPDEST POP PUSH2 0x25FE PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x2607 DUP3 PUSH2 0x1B97 JUMP JUMPDEST MSTORE PUSH2 0x2611 DUP2 PUSH2 0x1B97 JUMP JUMPDEST POP DUP3 PUSH2 0x2CC2 JUMP JUMPDEST PUSH2 0x2E11 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH4 0xFFFFFFFF DUP4 PUSH1 0x90 SHR AND SWAP3 PUSH1 0x50 SHR AND SWAP1 PUSH2 0x2FDF JUMP JUMPDEST SWAP4 PUSH2 0x2656 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x2174 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x24A6 JUMP JUMPDEST POP PUSH2 0x2641 PUSH2 0x261D PUSH2 0x2675 PUSH2 0x22A3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2509 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0xA0 PUSH2 0x34A SWAP4 PUSH1 0x20 DUP5 MSTORE DUP1 MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xFFFF PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF DUP1 SWAP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD AND DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH1 0xC0 DUP1 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x276D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x274C PUSH1 0xA SLOAD PUSH4 0xFFFFFFFF SWAP1 PUSH2 0x270F PUSH2 0x2707 PUSH2 0x2BE JUMP JUMPDEST DUP11 DUP2 MSTORE PUSH2 0x30B9 JUMP JUMPDEST SWAP4 PUSH2 0x2718 PUSH2 0x2CB JUMP JUMPDEST SWAP6 DUP7 MSTORE DUP9 DUP7 ADD MSTORE DUP1 DUP9 SHR PUSH2 0xFFFF AND PUSH1 0x40 DUP7 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 DUP4 AND AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x30 SHR AND PUSH1 0x80 DUP5 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x4D8E1C2F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x267D JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xF25 JUMPI PUSH2 0x2794 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2797 JUMPI JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x27B0 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF1E JUMPI PUSH2 0xF16 DUP2 DUP4 PUSH2 0x28E JUMP JUMPDEST CODESIZE PUSH2 0x2783 JUMP JUMPDEST MLOAD ISZERO SWAP1 DUP2 ISZERO PUSH2 0x27CF JUMPI JUMPDEST POP PUSH2 0x27CA JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD ISZERO CODESIZE PUSH2 0x27C0 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1AA5 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH2 0x2822 SWAP1 DUP3 SWAP1 PUSH2 0x1D05 SWAP1 PUSH2 0x2810 SWAP1 PUSH1 0x21 DUP5 ADD PUSH2 0x2118 JUMP JUMPDEST PUSH6 0x223A74727565 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x2833 DUP4 MLOAD DUP3 MLOAD SWAP1 PUSH2 0x1729 JUMP JUMPDEST DUP3 GT PUSH2 0x28CE JUMPI PUSH1 0x1 SWAP3 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x28C4 JUMPI PUSH2 0x286C PUSH2 0x285E PUSH2 0x2858 DUP4 DUP8 PUSH2 0x2296 JUMP JUMPDEST DUP5 PUSH2 0x27D9 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x2889 PUSH2 0x287C PUSH2 0x285E DUP5 DUP8 PUSH2 0x27D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP2 AND SUB PUSH2 0x28A2 JUMPI PUSH1 0x1 ADD PUSH2 0x283F JUMP JUMPDEST POP SWAP3 POP SWAP1 PUSH1 0x0 JUMPDEST PUSH2 0x28BC JUMPI PUSH2 0x28B6 SWAP1 PUSH2 0x1791 JUMP JUMPDEST SWAP1 PUSH2 0x2826 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x28A9 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28E0 DUP3 PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x28ED PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x28E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1A5A PUSH1 0x1F NOT SWAP2 PUSH2 0x2D8 JUMP JUMPDEST SWAP2 PUSH2 0x2941 PUSH2 0x2924 SWAP3 PUSH2 0x2933 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH2 0x2118 PUSH1 0x20 DUP6 ADD PUSH1 0x1 SWAP1 PUSH1 0x11 PUSH1 0xF9 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH3 0x111D11 PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x3 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x2952 DUP5 MLOAD DUP5 MLOAD SWAP1 PUSH2 0x1729 JUMP JUMPDEST DUP3 GT PUSH2 0x2A96 JUMPI PUSH1 0x1 SWAP3 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2A8C JUMPI PUSH2 0x297D PUSH2 0x285E PUSH2 0x2977 DUP4 DUP8 PUSH2 0x2296 JUMP JUMPDEST DUP9 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0x298D PUSH2 0x287C PUSH2 0x285E DUP5 DUP7 PUSH2 0x27D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP2 AND SUB PUSH2 0x29A6 JUMPI PUSH1 0x1 ADD PUSH2 0x295E JUMP JUMPDEST POP SWAP3 POP SWAP1 PUSH1 0x0 JUMPDEST PUSH2 0x29C1 JUMPI JUMPDEST PUSH2 0x29BB SWAP1 PUSH2 0x1791 JUMP JUMPDEST SWAP1 PUSH2 0x2945 JUMP JUMPDEST SWAP1 PUSH2 0x29CD DUP4 MLOAD DUP4 PUSH2 0x2296 JUMP JUMPDEST SWAP3 DUP4 JUMPDEST DUP6 MLOAD DUP2 LT DUP1 PUSH2 0x2A68 JUMPI JUMPDEST ISZERO PUSH2 0x29ED JUMPI PUSH2 0x29E8 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x29D0 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 DUP1 DUP3 GT PUSH2 0x2A00 JUMPI POP POP PUSH2 0x29B2 JUMP JUMPDEST SWAP2 POP SWAP3 POP PUSH2 0x2A16 PUSH2 0x2A11 DUP3 DUP6 PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x28D6 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST PUSH2 0x2A24 DUP4 DUP7 PUSH2 0x1729 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2A5F JUMPI DUP3 PUSH1 0x1 DUP3 PUSH2 0x2A48 PUSH2 0x285E PUSH2 0x2A42 PUSH2 0x2A24 SWAP7 DUP7 PUSH2 0x2296 JUMP JUMPDEST DUP12 PUSH2 0x27D9 JUMP JUMPDEST PUSH1 0x0 BYTE PUSH2 0x2A55 DUP3 DUP10 PUSH2 0x27D9 JUMP JUMPDEST MSTORE8 ADD SWAP2 POP POP PUSH2 0x2A1A JUMP JUMPDEST POP SWAP4 POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x2A84 PUSH2 0x285E DUP5 DUP11 PUSH2 0x27D9 JUMP JUMPDEST AND EQ ISZERO PUSH2 0x29DA JUMP JUMPDEST POP SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x29AD JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x34A PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 MLOAD SWAP1 PUSH1 0x20 SWAP1 DUP3 PUSH2 0x2AB9 DUP4 DUP3 ADD DUP1 SWAP4 PUSH2 0x1F5C JUMP JUMPDEST SUB SWAP3 PUSH2 0x2ACD PUSH1 0x1F NOT SWAP5 DUP6 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x28E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 DUP1 MLOAD DUP3 DUP2 ADD SWAP1 PUSH2 0x2B00 DUP2 PUSH2 0x2AF4 DUP5 PUSH1 0x8 SWAP1 PUSH8 0x657468657265756D PUSH1 0xC0 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SUB DUP7 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x28E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x2C19 JUMPI DUP1 MLOAD PUSH8 0x617262697472756D PUSH1 0xC0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x2B2B DUP2 PUSH1 0x8 DUP5 ADD PUSH2 0x2AF4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x2C0F JUMPI DUP1 MLOAD PUSH8 0x6F7074696D69736D PUSH1 0xC0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x2B56 DUP2 PUSH1 0x8 DUP5 ADD PUSH2 0x2AF4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x2C06 JUMPI DUP1 MLOAD PUSH4 0x62617365 PUSH1 0xE0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x2B7D DUP2 PUSH1 0x4 DUP5 ADD PUSH2 0x2AF4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x2BFC JUMPI DUP1 MLOAD PUSH7 0x3837B63CB3B7B7 PUSH1 0xC9 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x2BA7 DUP2 PUSH1 0x7 DUP5 ADD PUSH2 0x2AF4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x2BF3 JUMPI PUSH2 0x2BE0 SWAP1 MLOAD SWAP2 DUP3 ADD SWAP3 DUP3 PUSH2 0x2BD4 DUP6 PUSH1 0x9 SWAP1 PUSH9 0x6176616C616E636865 PUSH1 0xB8 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x28E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH2 0x2BED JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0xA86A SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x89 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH2 0x2105 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0xA SWAP1 JUMP JUMPDEST POP POP POP POP PUSH2 0xA4B1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CA4 JUMPI PUSH1 0x0 DUP2 DUP2 DUP2 DUP1 JUMPDEST PUSH2 0x2C8C JUMPI POP PUSH2 0x2C3D DUP2 PUSH2 0x28D6 JUMP JUMPDEST SWAP4 JUMPDEST PUSH2 0x2C49 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2C52 SWAP1 PUSH2 0x170B JUMP JUMPDEST SWAP1 PUSH1 0xA SWAP1 PUSH2 0x2C77 PUSH2 0x2C67 PUSH2 0x25BF DUP5 DUP5 MOD PUSH2 0x227A JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP5 BYTE PUSH2 0x2C83 DUP5 DUP8 PUSH2 0x27D9 JUMP JUMPDEST MSTORE8 DIV SWAP1 DUP2 PUSH2 0x2C3F JUMP JUMPDEST SWAP2 POP PUSH2 0x2C99 PUSH1 0xA SWAP2 PUSH2 0x1791 JUMP JUMPDEST SWAP2 DIV DUP1 DUP5 SWAP3 SWAP2 PUSH2 0x2C2F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2CB1 DUP2 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2CCF JUMPI PUSH1 0xA0 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFE936CB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2CEE DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0x31B7B232A637B1B0BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x2D29 JUMPI JUMP JUMPDEST PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2D3B DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x8 DUP3 MSTORE PUSH8 0x6C616E6775616765 PUSH1 0xC0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 GT ISZERO PUSH2 0x2D29 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2D69 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x736F75726365 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2D8B DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x61726773 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2DAB DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0xF DUP3 MSTORE PUSH15 0x39B2B1B932BA39A637B1B0BA34B7B7 PUSH1 0x89 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2DD6 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x73656372657473 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2DF9 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x627974657341726773 PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2E19 PUSH2 0x3135 JUMP JUMPDEST SWAP1 PUSH2 0x2E2B PUSH2 0x2E25 PUSH2 0x2CE1 JUMP JUMPDEST DUP4 PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x2E48 DUP2 MLOAD PUSH2 0x2E39 DUP2 PUSH2 0x2D1F JUMP JUMPDEST PUSH2 0x2E42 DUP2 PUSH2 0x2D1F JUMP JUMPDEST DUP4 PUSH2 0x3247 JUMP JUMPDEST PUSH2 0x2E53 PUSH2 0x2E25 PUSH2 0x2D2E JUMP JUMPDEST PUSH2 0x2E6D PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2E64 DUP2 PUSH2 0x2D52 JUMP JUMPDEST PUSH2 0x2E42 DUP2 PUSH2 0x2D52 JUMP JUMPDEST PUSH2 0x2E78 PUSH2 0x2E25 PUSH2 0x2D5C JUMP JUMPDEST PUSH2 0x2E86 PUSH1 0x60 DUP3 ADD MLOAD DUP4 PUSH2 0x3185 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD DUP1 MLOAD MLOAD PUSH2 0x2F86 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD SWAP1 DUP2 MLOAD MLOAD PUSH2 0x2F06 JUMPI JUMPDEST PUSH1 0xC0 SWAP2 POP ADD DUP1 MLOAD MLOAD PUSH2 0x2EB3 JUMPI JUMPDEST POP MLOAD MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2EBF PUSH2 0x2E25 PUSH2 0x2DEC JUMP JUMPDEST PUSH2 0x2EC8 DUP3 PUSH2 0x32E8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2EF3 JUMPI SWAP1 PUSH2 0x2EED PUSH2 0x2EE6 DUP3 PUSH1 0x1 SWAP5 PUSH2 0x1BA7 JUMP JUMPDEST MLOAD DUP6 PUSH2 0x3401 JUMP JUMPDEST ADD PUSH2 0x2ECB JUMP JUMPDEST POP POP SWAP2 POP PUSH2 0x2F00 DUP2 PUSH2 0x3374 JUMP JUMPDEST CODESIZE PUSH2 0x2EAD JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH2 0x2F15 DUP2 PUSH2 0x2D1F JUMP JUMPDEST PUSH2 0x2F1E DUP2 PUSH2 0x2D1F JUMP JUMPDEST ISZERO PUSH2 0x2F74 JUMPI PUSH1 0xC0 SWAP3 PUSH2 0x2F57 PUSH2 0x2F6F SWAP3 PUSH2 0x2F3E PUSH2 0x2F38 PUSH2 0x2D9E JUMP JUMPDEST DUP9 PUSH2 0x3185 JUMP JUMPDEST MLOAD PUSH2 0x2F48 DUP2 PUSH2 0x2D1F JUMP JUMPDEST PUSH2 0x2F51 DUP2 PUSH2 0x2D1F JUMP JUMPDEST DUP7 PUSH2 0x3247 JUMP JUMPDEST PUSH2 0x2F68 PUSH2 0x2F62 PUSH2 0x2DC9 JUMP JUMPDEST DUP7 PUSH2 0x3185 JUMP JUMPDEST MLOAD DUP5 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA80D31F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 PUSH2 0x2F98 PUSH2 0x2F92 PUSH2 0x2D7E JUMP JUMPDEST DUP5 PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x2FA1 DUP4 PUSH2 0x32E8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2FCC JUMPI SWAP1 PUSH2 0x2FC6 PUSH2 0x2FBF DUP3 PUSH1 0x1 SWAP5 PUSH2 0x1BA7 JUMP JUMPDEST MLOAD DUP7 PUSH2 0x3185 JUMP JUMPDEST ADD PUSH2 0x2FA4 JUMP JUMPDEST POP POP SWAP3 POP PUSH2 0x2FD9 DUP3 PUSH2 0x3374 JUMP JUMPDEST CODESIZE PUSH2 0x2E92 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH4 0xFFFFFFFF PUSH2 0x301E PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH4 0x230E93B1 PUSH1 0xE1 SHL DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0xA4 DUP7 ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x44 DUP7 ADD MSTORE SWAP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF25 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x309A JUMPI JUMPDEST POP DUP1 PUSH32 0x1131472297A800FEE664D1D89CFA8F7676FF07189ECC53F80BBB5F4969099DB8 PUSH1 0x0 DUP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x30B3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF1E JUMPI PUSH2 0xF16 DUP2 DUP4 PUSH2 0x28E JUMP JUMPDEST CODESIZE PUSH2 0x3070 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x125FA267 PUSH1 0xE3 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x3109 JUMPI PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22CE3EDD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3128 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH1 0x60 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3141 DUP2 PUSH2 0x23D JUMP JUMPDEST PUSH2 0x3149 PUSH2 0x311B JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP2 MSTORE PUSH2 0x315C PUSH2 0x311B JUMP JUMPDEST POP PUSH2 0x100 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH2 0x120 DUP3 ADD SWAP2 DUP3 LT PUSH2 0x32A JUMPI PUSH1 0x0 SWAP2 PUSH1 0x40 MSTORE MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x31C9 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x31CC JUMPI PUSH2 0x31B4 SWAP2 POP PUSH1 0x60 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x38CF JUMP JUMPDEST POP JUMPDEST MLOAD SWAP1 PUSH2 0x31C0 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD SWAP2 PUSH2 0x3AFF JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x31F1 JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x31E3 DUP4 MLOAD PUSH2 0x36D6 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x3A8B JUMP JUMPDEST POP PUSH2 0x31B6 JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x3210 JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x3208 DUP4 MLOAD PUSH2 0x3671 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x3A1D JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x3231 JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x3229 DUP4 MLOAD PUSH2 0x360C JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x39AD JUMP JUMPDEST PUSH2 0x31EB SWAP1 PUSH2 0x323F DUP4 MLOAD PUSH2 0x359C JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x393A JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH2 0x3253 PUSH2 0x311B JUMP JUMPDEST POP DUP3 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP6 ADD MLOAD DUP2 LT ISZERO PUSH2 0x32AC JUMPI JUMPDEST PUSH1 0xC2 PUSH1 0x20 PUSH2 0x2BC SWAP7 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x32A4 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP3 MSTORE PUSH2 0x329F DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH2 0x3401 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x3287 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP5 DUP3 DUP7 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP2 PUSH2 0x32DE PUSH2 0x2BC SWAP9 PUSH2 0x32D7 PUSH1 0xC2 SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x3485 JUMP JUMPDEST POP DUP3 PUSH2 0x34D7 JUMP JUMPDEST POP SWAP7 POP POP POP PUSH2 0x3270 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x32F3 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3341 JUMPI JUMPDEST PUSH1 0x9F PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x3339 JUMPI JUMPDEST POP POP ADD DUP1 MLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8F1 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x3325 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP2 PUSH2 0x336A DUP3 SWAP8 PUSH2 0x32D7 PUSH1 0x9F SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x3485 JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x3310 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x337F PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x33CE JUMPI JUMPDEST PUSH1 0xFF PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x33C6 JUMPI JUMPDEST POP POP ADD DUP1 MLOAD PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x8F1 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x33B1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP2 PUSH2 0x33F7 DUP3 SWAP8 PUSH2 0x32D7 PUSH1 0xFF SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x3485 JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x339C JUMP JUMPDEST DUP2 MLOAD PUSH2 0x31C9 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x3430 JUMPI PUSH2 0x31B4 SWAP2 POP PUSH1 0x40 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x38CF JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x3447 JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x31E3 DUP4 MLOAD PUSH2 0x386A JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x345E JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x3208 DUP4 MLOAD PUSH2 0x3805 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x3477 JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x3229 DUP4 MLOAD PUSH2 0x37A0 JUMP JUMPDEST PUSH2 0x31EB SWAP1 PUSH2 0x323F DUP4 MLOAD PUSH2 0x373B JUMP JUMPDEST SWAP1 PUSH2 0x348E PUSH2 0x311B JUMP JUMPDEST POP PUSH1 0x1F DUP2 AND DUP1 PUSH2 0x34BD JUMPI JUMPDEST POP DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 MSTORE PUSH1 0x0 DUP3 MSTORE DUP2 ADD PUSH1 0x20 ADD SWAP1 DUP2 LT PUSH2 0x32A JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 SUB PUSH1 0x20 DUP2 GT PUSH2 0x8F1 JUMPI DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8F1 JUMPI CODESIZE PUSH2 0x3499 JUMP JUMPDEST SWAP1 PUSH2 0x34E0 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD SWAP1 PUSH2 0x34EC PUSH2 0x311B JUMP JUMPDEST POP PUSH2 0x34FA DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x3AF8 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH2 0x3508 DUP2 DUP5 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x20 DUP7 ADD MLOAD DUP3 GT PUSH2 0x3585 JUMPI JUMPDEST PUSH1 0x20 SWAP2 DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x357D JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x3555 JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x3571 PUSH2 0x356B PUSH2 0x3577 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2288 JUMP JUMPDEST SWAP5 PUSH2 0x2288 JUMP JUMPDEST SWAP3 PUSH2 0x171A JUMP JUMPDEST SWAP1 PUSH2 0x3530 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x352B JUMP JUMPDEST PUSH2 0x3597 PUSH2 0x3591 DUP4 PUSH2 0x1C09 JUMP JUMPDEST DUP8 PUSH2 0x3BAB JUMP JUMPDEST PUSH2 0x3517 JUMP JUMPDEST PUSH2 0x35A4 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x35DD JUMPI JUMPDEST PUSH1 0x7B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3606 SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP DUP5 PUSH2 0x34D7 JUMP JUMPDEST POP PUSH2 0x35C1 JUMP JUMPDEST PUSH2 0x3614 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3649 JUMPI JUMPDEST PUSH1 0x7A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x366B SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x3679 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x36AE JUMPI JUMPDEST PUSH1 0x79 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x36D0 SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3696 JUMP JUMPDEST PUSH2 0x36DE PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3713 JUMPI JUMPDEST PUSH1 0x78 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3735 SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x36FB JUMP JUMPDEST PUSH2 0x3743 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3778 JUMPI JUMPDEST PUSH1 0x5B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x379A SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3760 JUMP JUMPDEST PUSH2 0x37A8 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x37DD JUMPI JUMPDEST PUSH1 0x5A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x37FF SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x37C5 JUMP JUMPDEST PUSH2 0x380D PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3842 JUMPI JUMPDEST PUSH1 0x59 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3864 SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x382A JUMP JUMPDEST PUSH2 0x3872 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x38A7 JUMPI JUMPDEST PUSH1 0x58 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x38C9 SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x388F JUMP JUMPDEST SWAP1 PUSH2 0x38D8 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP3 LT ISZERO PUSH2 0x390B JUMPI JUMPDEST PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3934 SWAP1 PUSH2 0x392D DUP7 MLOAD SWAP2 DUP8 PUSH2 0x3485 JUMP JUMPDEST POP DUP6 PUSH2 0x34D7 JUMP JUMPDEST POP PUSH2 0x38F5 JUMP JUMPDEST SWAP1 PUSH2 0x3943 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x8 ADD SWAP2 DUP3 PUSH1 0x8 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x3985 JUMPI JUMPDEST PUSH1 0x8 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x39A7 SWAP1 PUSH2 0x392D DUP7 MLOAD SWAP2 DUP8 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3960 JUMP JUMPDEST SWAP1 PUSH2 0x39B6 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x4 ADD SWAP2 DUP3 PUSH1 0x4 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x39F5 JUMPI JUMPDEST PUSH1 0x4 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH4 0xFFFFFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3A17 SWAP1 PUSH2 0x392D DUP7 MLOAD SWAP2 DUP8 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x39D3 JUMP JUMPDEST SWAP1 PUSH2 0x3A26 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x2 ADD SWAP2 DUP3 PUSH1 0x2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x3A63 JUMPI JUMPDEST PUSH1 0x2 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH2 0xFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3A85 SWAP1 PUSH2 0x392D DUP7 MLOAD SWAP2 DUP8 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3A43 JUMP JUMPDEST SWAP1 PUSH2 0x3A94 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x1 ADD SWAP2 DUP3 PUSH1 0x1 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x3AD0 JUMPI JUMPDEST PUSH1 0x1 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0xFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3AF2 SWAP1 PUSH2 0x392D DUP7 MLOAD SWAP2 DUP8 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3AB1 JUMP JUMPDEST ISZERO PUSH2 0x32A JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3B09 PUSH2 0x311B JUMP JUMPDEST POP PUSH2 0x3B17 DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x3AF8 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH1 0x20 PUSH2 0x3B27 DUP3 DUP6 PUSH2 0x2296 JUMP JUMPDEST SWAP3 DUP2 SWAP4 DUP3 DUP8 ADD MLOAD DUP2 GT PUSH2 0x3B94 JUMPI JUMPDEST DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x3B8C JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x3571 PUSH2 0x356B PUSH2 0x3B86 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2288 JUMP JUMPDEST SWAP1 PUSH2 0x3B4B JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x3B46 JUMP JUMPDEST PUSH2 0x3BA6 PUSH2 0x3BA0 DUP3 PUSH2 0x1C09 JUMP JUMPDEST DUP9 PUSH2 0x3BAB JUMP JUMPDEST PUSH2 0x3B35 JUMP JUMPDEST SWAP1 PUSH2 0x31C9 SWAP2 PUSH2 0x3BBC DUP2 MLOAD SWAP3 DUP3 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x34D7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 SWAP6 SSTORE SWAP14 SIGNEXTEND SWAP2 0xAE 0xEB 0xB2 0xE4 DUP10 0xD6 PUSH26 0xA51F3DB2874B723660320D7A20E6E0D37372E664736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"1007:19543:21:-:0;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6254:10:14;;598:22:9;1007:19543:21;;-1:-1:-1;1007:19543:21;;-1:-1:-1;;;;;;1007:19543:21;;;6254:10:14;1007:19543:21;;;;;-1:-1:-1;;;;;1007:19543:21;;;6276:29:14;;6272:70;;1007:19543:21;;;;;;;6347:57:14;1007:19543:21;;;6347:57:14;1007:19543:21;;;769:44:7;2366:4:21;;1007:19543;2527:7;1007:19543;;;;;2966:1;1007:19543;2966:1;1007:19543;;;2966:1;1007:19543;2966:1;1007:19543;4133:22;1007:19543;;;;;;;;;;;;;;;;;;;;2527:7;1007:19543;4226:33;1007:19543;;;4269:57;6254:10:14;-1:-1:-1;1007:19543:21;4336:17;1007:19543;;;;-1:-1:-1;1007:19543:21;;;;;;;;6254:10:14;1007:19543:21;4382:19;1007:19543;;;4382:19;1007:19543;4433:15;4411:37;1007:19543;;;;;;;;;;;;;;;;;;;;;;;;;;6272:70:14;1007:19543:21;;-1:-1:-1;;;6322:13:14;;;;;1007:19543:21;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;-1:-1:-1;1007:19543:21;;;;;-1:-1:-1;1007:19543:21;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3515,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn_calldata":{"entryPoint":2001,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_bytes":{"entryPoint":755,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":815,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":3634,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_string":{"entryPoint":1037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":6006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint32":{"entryPoint":1846,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256_string_uint256_bytes32_bool_bool":{"entryPoint":2973,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_bool_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bool_bytes32_16723":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":7896,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":6902,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_stringliteral_c5d2":{"entryPoint":8155,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_array_bytes32_dyn_uint256_address":{"entryPoint":7099,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_string_uint256":{"entryPoint":8051,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":8028,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":2441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage_uint256":{"entryPoint":9382,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":1386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_09d0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2bf6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6e8b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6e9f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9186":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9f50":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ac63":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_b36b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e5e2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f1f3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_ProofRequest":{"entryPoint":1423,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_RandomWordsRequest":{"entryPoint":9853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_array_bytes32_dyn":{"entryPoint":6706,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_string_dyn":{"entryPoint":9332,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_array_bytes":{"entryPoint":10454,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Request":{"entryPoint":9275,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_buffer":{"entryPoint":12571,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":687,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_16771":{"entryPoint":702,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_16773":{"entryPoint":715,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":6418,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":6683,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":728,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage_16639":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_16650":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":6756,"id":null,"parameterSlots":3,"returnSlots":2},"calldata_array_index_access_uint256_dyn_calldata":{"entryPoint":8817,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":8854,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256_16781":{"entryPoint":8826,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_16811":{"entryPoint":8840,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":7177,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":5929,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256_16779":{"entryPoint":5899,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256_16810":{"entryPoint":5914,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":5791,"id":null,"parameterSlots":3,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_16638":{"entryPoint":5563,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_16649":{"entryPoint":5677,"id":null,"parameterSlots":2,"returnSlots":0},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint8_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":2946,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string_16756":{"entryPoint":2591,"id":null,"parameterSlots":0,"returnSlots":1},"copy_array_from_storage_to_memory_string_16767":{"entryPoint":2787,"id":null,"parameterSlots":0,"returnSlots":1},"copy_array_to_storage_from_array_bytes32_dyn_to_array_bytes32_dyn":{"entryPoint":7199,"id":null,"parameterSlots":2,"returnSlots":0},"copy_literal_to_memory_3549a38a23cb1774056dbdf96dbc8ece30f733b8dd04641913d46a279936ce0b":{"entryPoint":11756,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_4b31cabbe5862282e443c4ac3f4c14761a1d2ba88a3c858a2a36f7758f453a38":{"entryPoint":7913,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_65ea7731216d8d2930c089d4d135a485e0d7bab5e0ea8346df02f7b7da161f54":{"entryPoint":8114,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_67ae3148ccb475de270e1abfe65d7d4ba2786e229def1b2906f5f7b5fb445a7f":{"entryPoint":7988,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_6f40e170a7d7da84c7febfa6e1da1bba36ef52c0d32d0501f35b2ff37b7dfb86":{"entryPoint":8867,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_829231cb167e02f32beea96e7533af0ebdf9e1f7ccf9a7270e717c48fe6f0e8e":{"entryPoint":11566,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_82e791741c7274b123c7599c398a59441cc81a8ed229387daff72172292ba931":{"entryPoint":11489,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_a5bd20250df117ee1576cde77471907f0792dabd126e96e46ea0b2c71299ea1e":{"entryPoint":8081,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_cc86ba7285553398a0ce4483ea9702f5bf2fa4bc5afa4b6071eafcc991f7c173":{"entryPoint":7948,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_d66480a2fe9622f21e4ac7cf8871545e676a686cade1079d79e2fb1df6a4f3ac":{"entryPoint":11721,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_e5edaa566e23eea054bbd292b7924839b5627321873e67e30cd0052468eaf099":{"entryPoint":11646,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_f7e3126f87228afb82c9b18537eed25aaeb8171a78814781c26ed2cfeff27e69":{"entryPoint":11612,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_fc4236fa30b862c671ead413b1a0f61e653ce5b99e29091ee0dc6fc114ee9cc8":{"entryPoint":11678,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1351,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_ProofRequest_to_struct_ProofRequest":{"entryPoint":6048,"id":null,"parameterSlots":2,"returnSlots":0},"external_fun_acceptOwnership":{"entryPoint":4427,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_aggregateProofs":{"entryPoint":4974,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_aggregatedProofHashes":{"entryPoint":3447,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_authorizedCallers":{"entryPoint":3882,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_checkUpkeep":{"entryPoint":4304,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_contractOwner":{"entryPoint":4933,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_functionsRequestToProofId":{"entryPoint":3945,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getProofRequest":{"entryPoint":1523,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getSubscriptionId":{"entryPoint":5231,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_groth16Verifier":{"entryPoint":1777,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_handleOracleFulfillment":{"entryPoint":845,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_lastUpkeepTimestamp":{"entryPoint":4274,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":4618,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_performUpkeep":{"entryPoint":3707,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_proofRequests":{"entryPoint":3044,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_rawFulfillRandomWords":{"entryPoint":2049,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_requestCounter":{"entryPoint":4776,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_requestProofVerification":{"entryPoint":3989,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_s_vrfCoordinator":{"entryPoint":4806,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setAuthorizedCaller":{"entryPoint":3537,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setCoordinator":{"entryPoint":4659,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFunctionsConfig":{"entryPoint":1865,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFunctionsSource":{"entryPoint":3165,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setProofServiceUrl":{"entryPoint":1079,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setUpkeepInterval":{"entryPoint":4381,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setVRFConfig":{"entryPoint":4847,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":5261,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_upkeepInterval":{"entryPoint":4244,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_usedProofHashes":{"entryPoint":5182,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verifiedProofs":{"entryPoint":1728,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2383,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":654,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_16641":{"entryPoint":541,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_16792":{"entryPoint":573,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_26635":{"entryPoint":600,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_26636":{"entryPoint":627,"id":null,"parameterSlots":1,"returnSlots":0},"fun_aggregateProofs_inner":{"entryPoint":7345,"id":null,"parameterSlots":4,"returnSlots":1},"fun_append":{"entryPoint":13527,"id":1322,"parameterSlots":2,"returnSlots":1},"fun_appendInt":{"entryPoint":14650,"id":1521,"parameterSlots":2,"returnSlots":1},"fun_appendInt_16803":{"entryPoint":14765,"id":1521,"parameterSlots":2,"returnSlots":1},"fun_appendInt_16805":{"entryPoint":14877,"id":1521,"parameterSlots":2,"returnSlots":1},"fun_appendInt_16807":{"entryPoint":14987,"id":1521,"parameterSlots":2,"returnSlots":1},"fun_appendUint8":{"entryPoint":14543,"id":1363,"parameterSlots":2,"returnSlots":1},"fun_appendUint8_26658":{"entryPoint":13724,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_26659":{"entryPoint":13836,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_26660":{"entryPoint":13937,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_26661":{"entryPoint":14038,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_26665":{"entryPoint":14139,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_26666":{"entryPoint":14240,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_26667":{"entryPoint":14341,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_26668":{"entryPoint":14442,"id":1363,"parameterSlots":1,"returnSlots":1},"fun_append_1302":{"entryPoint":15103,"id":1302,"parameterSlots":3,"returnSlots":1},"fun_argsToBytes":{"entryPoint":12473,"id":2706,"parameterSlots":1,"returnSlots":1},"fun_create":{"entryPoint":12597,"id":1603,"parameterSlots":0,"returnSlots":1},"fun_encodeCBOR":{"entryPoint":11793,"id":471,"parameterSlots":1,"returnSlots":1},"fun_endSequence":{"entryPoint":13172,"id":1946,"parameterSlots":1,"returnSlots":0},"fun_fulfillRequest":{"entryPoint":8191,"id":5241,"parameterSlots":3,"returnSlots":0},"fun_getChainId":{"entryPoint":10914,"id":4984,"parameterSlots":1,"returnSlots":1},"fun_init":{"entryPoint":13445,"id":1147,"parameterSlots":2,"returnSlots":1},"fun_initializeRequest":{"entryPoint":12530,"id":516,"parameterSlots":2,"returnSlots":0},"fun_parseJsonBool":{"entryPoint":10218,"id":5329,"parameterSlots":2,"returnSlots":1},"fun_parseJsonString":{"entryPoint":10494,"id":5485,"parameterSlots":2,"returnSlots":1},"fun_requestProofGeneration":{"entryPoint":9410,"id":4898,"parameterSlots":2,"returnSlots":0},"fun_requestRandomBlock":{"entryPoint":9940,"id":4701,"parameterSlots":1,"returnSlots":0},"fun_resize":{"entryPoint":15275,"id":1200,"parameterSlots":2,"returnSlots":0},"fun_sendRequest":{"entryPoint":12255,"id":809,"parameterSlots":4,"returnSlots":1},"fun_setArgs":{"entryPoint":11458,"id":652,"parameterSlots":2,"returnSlots":0},"fun_setCoordinator_inner":{"entryPoint":6437,"id":null,"parameterSlots":1,"returnSlots":0},"fun_startArray":{"entryPoint":13032,"id":1880,"parameterSlots":1,"returnSlots":0},"fun_uint256ToString":{"entryPoint":11298,"id":5920,"parameterSlots":1,"returnSlots":1},"fun_verifyZKProof":{"entryPoint":10166,"id":5510,"parameterSlots":2,"returnSlots":1},"fun_writeBytes":{"entryPoint":13313,"id":1788,"parameterSlots":2,"returnSlots":0},"fun_writeString":{"entryPoint":12677,"id":1821,"parameterSlots":2,"returnSlots":0},"fun_writeUInt256":{"entryPoint":12871,"id":1657,"parameterSlots":2,"returnSlots":0},"increment_uint256":{"entryPoint":6033,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_bool_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_bool_of_bytes32_16664":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_bool_of_bytes32_16716":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_bool_of_bytes32_16720":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_bool_of_bytes32_16721":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":10201,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes32_dyn":{"entryPoint":7079,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes32_dyn_16759":{"entryPoint":7002,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes32_dyn_16761":{"entryPoint":7015,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes32_dyn_16763":{"entryPoint":7031,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes32_dyn_16765":{"entryPoint":7047,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes32_dyn_16768":{"entryPoint":7063,"id":null,"parameterSlots":1,"returnSlots":1},"mod_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5877,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11529,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3425,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":519,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper":{"entryPoint":15096,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_047e":{"entryPoint":5942,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_09d5":{"entryPoint":6826,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_17d9":{"entryPoint":5506,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3d04":{"entryPoint":6916,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8b2e":{"entryPoint":6607,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_aa51":{"entryPoint":7820,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_affd":{"entryPoint":6540,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":6021,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_address_to_address_16668":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_address_to_address_16669":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_16718":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_16734":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_16736":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_t_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32_16655":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_CodeLanguage":{"entryPoint":11602,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_Location":{"entryPoint":11551,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint16":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"754":[{"length":32,"start":924},{"length":32,"start":12343}],"4490":[{"length":32,"start":1799}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c80630ca76175146102025780631098241b146101fd578063152a9526146101f8578063176d80c41461018f57806319c813be146101f35780631bd6447a146101ee5780631fe543e3146101e957806325825746146101e457806336e0025f146101df57806339a9e4b3146101da578063454bbd29146101d55780634585e33b146101d0578063536fff6c146101cb57806356959332146101c657806357efe032146101c15780635a74373c146101bc578063624cffd4146101b75780636e04ff0d146101b257806372e4c9f6146101ad57806379ba5097146101a85780638da5cb5b146101a35780638ea981171461019e578063973a814e146101995780639eccacf614610194578063a9431f231461018f578063b5cce1331461018a578063ce606ee014610185578063d175d81a14610180578063d87318b21461017b578063de3d9fb7146101765763f2fde38b1461017157600080fd5b61148d565b61146f565b61143e565b61136e565b611345565b6112ef565b6106c0565b6112c6565b6112a8565b611233565b61120a565b61114b565b61111d565b6110d0565b6110b2565b611094565b610f95565b610f69565b610f2a565b610e7b565b610dd1565b610d77565b610c5d565b610be4565b610801565b610749565b6106f1565b6105f3565b610437565b61034d565b634e487b7160e01b600052604160045260246000fd5b60e081019081106001600160401b0382111761023857604052565b610207565b604081019081106001600160401b0382111761023857604052565b602081019081106001600160401b0382111761023857604052565b60c081019081106001600160401b0382111761023857604052565b90601f801991011681019081106001600160401b0382111761023857604052565b604051906102bc8261021d565b565b604051906102bc82610258565b604051906102bc82610273565b6001600160401b03811161023857601f01601f191660200190565b9291926102ff826102d8565b9161030d604051938461028e565b82948184528183011161032a578281602093846000960137010152565b600080fd5b9080601f8301121561032a5781602061034a933591016102f3565b90565b3461032a57606036600319011261032a576004356001600160401b0360243581811161032a5761038190369060040161032f565b9060443590811161032a5761039a90369060040161032f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036103fb576103d49183611fff565b7f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e6600080a2005b60405163c6829f8360e01b8152600490fd5b602060031982011261032a57600435906001600160401b03821161032a5761034a9160040161032f565b3461032a576104453661040d565b61045a60018060a01b03601354163314611582565b80516001600160401b0381116102385761047e81610479600d5461094f565b6115bb565b602080601f83116001146104c0575081906104b0936000926104b5575b50508160011b916000199060031b1c19161790565b600d55005b01519050388061049b565b90601f198316936104f3600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb590565b926000905b86821061052f5750508360019510610516575b505050811b01600d55005b015160001960f88460031b161c1916905538808061050b565b806001859682949686015181550195019301906104f8565b60005b83811061055a5750506000910152565b818101518382015260200161054a565b9060209161058381518092818552858086019101610547565b601f01601f1916010190565b6020815260018060a01b0382511660208201526020820151604082015260e060c06105c9604085015183606086015261010085019061056a565b9360608101516080850152608081015160a085015260a08101511515828501520151151591015290565b3461032a57602036600319011261032a576106bc60408060c081516106178161021d565b60009181838093528260208201526060858201528260608201528260808201528260a082015201526004358152600360205220906106b260ff600583519461065e8661021d565b80546001600160a01b031686526001810154602087015261068160028201610b82565b8686015260038101546060870152600481015460808701520154818116151560a086015260081c16151560c0840152565b519182918261058f565b0390f35b3461032a57602036600319011261032a57600435600052600f602052602060ff604060002054166040519015158152f35b3461032a57600036600319011261032a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b6024359063ffffffff8216820361032a57565b3461032a57606036600319011261032a576004356001600160401b038116810361032a57610775610736565b61078a60018060a01b03601354163314611582565b600a80546bffffffffffffffffffffffff60501b191660509390931b67ffffffffffffffff60501b169290921760909190911b63ffffffff60901b16179055604435600b55005b9181601f8401121561032a578235916001600160401b03831161032a576020808501948460051b01011161032a57565b3461032a57604036600319011261032a576004356024356001600160401b03811161032a576108349036906004016107d1565b600254919290916001600160a01b03163381900361093157508060005260046020526040600020549081156108f6576103e71943014381116108f157846108d96108b87f2374d5481494ad7962d4bd1b98b91e9f3117c9b66533b2804be3d76c41a49088936108b26108a9896108ef9b612271565b356103e8900690565b90612296565b9586928360036108d2896000526003602052604060002090565b0155612271565b60408051913582526020820192909252a26124c2565b005b6116f5565b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a5908159491881c995c5d595cdd606a1b6044820152606490fd5b6044906040519063073e64fd60e21b82523360048301526024820152fd5b90600182811c9216801561097f575b602083101461096957565b634e487b7160e01b600052602260045260246000fd5b91607f169161095e565b8054600093926109988261094f565b91828252602093600191600181169081600014610a0057506001146109bf575b5050505050565b90939495506000929192528360002092846000945b8386106109ec575050505001019038808080806109b8565b8054858701830152940193859082016109d4565b60ff19168685015250505090151560051b0101915038808080806109b8565b60405190600082600c5491610a338361094f565b80835292602090600190818116908115610abf5750600114610a5e575b50506102bc9250038361028e565b915092600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7936000925b828410610aa757506102bc9450505081016020013880610a50565b85548885018301529485019487945092810192610a8c565b915050602092506102bc94915060ff191682840152151560051b8201013880610a50565b60405190600082600d5491610af78361094f565b80835292602090600190818116908115610abf5750600114610b215750506102bc9250038361028e565b915092600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5936000925b828410610b6a57506102bc9450505081016020013880610a50565b85548885018301529485019487945092810192610b4f565b906102bc610b969260405193848092610989565b038361028e565b959260c09592610bcb929998959960018060a01b03168852602088015260e0604088015260e087019061056a565b9660608601526080850152151560a08401521515910152565b3461032a57602036600319011261032a576004356000526003602052604060002060018060a01b03815416906106bc60018201549160405193610c3585610c2e8160028601610989565b038661028e565b600382015491600560048201549101549260405196879660ff808760081c1696169488610b9d565b3461032a57610c6b3661040d565b610c8060018060a01b03601354163314611582565b80516001600160401b03811161023857610ca481610c9f600c5461094f565b61162d565b602080601f8311600114610cda57508190610cd5936000926104b55750508160011b916000199060031b1c19161790565b600c55005b90601f19831693610d0d600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790565b926000905b868210610d495750508360019510610d30575b505050811b01600c55005b015160001960f88460031b161c19169055388080610d25565b80600185968294968601518155019501930190610d12565b634e487b7160e01b600052603260045260246000fd5b3461032a57604036600319011261032a5760243560009060043582526010602052604082208054821015610db75782526020918290200154604051908152f35b8280fd5b600435906001600160a01b038216820361032a57565b3461032a57604036600319011261032a57610dea610dbb565b602435801515810361032a576013546108ef926001600160a01b0391610e139083163314611582565b16600052601260205260406000209060ff801983541691151516179055565b90602060031983011261032a576004356001600160401b039283821161032a578060238301121561032a57816004013593841161032a576024848301011161032a576024019190565b3461032a57610e8936610e32565b505060065442034281116108f157610ea49060075410611736565b610ead42600655565b60408051632bf7f01960e11b815260048101919091526008604482015267657468657265756d60c01b606482015260006024820152602081806084810103816000305af18015610f2557610efd57005b6108ef9060203d602011610f1e575b610f16818361028e565b810190611776565b503d610f0c565b611785565b3461032a57602036600319011261032a576001600160a01b03610f4b610dbb565b166000526012602052602060ff604060002054166040519015158152f35b3461032a57602036600319011261032a5760043560005260046020526020604060002054604051908152f35b3461032a57604036600319011261032a576004356001600160401b03811161032a57610fc86106bc91369060040161032f565b60243561102e610fd9600554611791565b92610fe384600555565b610feb6102af565b33815290426020830152604082015282606082015260006080820152600060a0820152600060c0820152611029846000526003602052604060002090565b6117a0565b806110855761103c826126d4565b817f7ef8ca77fdc89c79f093f2a6b2348b1fcda0beb941ce31ce9f2d9d260c4db9d2604051806110723395829190602083019252565b0390a36040519081529081906020820190565b61108f81836124c2565b61103c565b3461032a57600036600319011261032a576020600754604051908152f35b3461032a57600036600319011261032a576020600654604051908152f35b3461032a576110de36610e32565b505060065442034281116108f15760075410604051906110fd82610258565b600082526106bc604051928392835260406020840152604083019061056a565b3461032a57602036600319011261032a5761114360018060a01b03601354163314611582565b600435600755005b3461032a57600080600319360112611207576001546001600160a01b0390811633036111c95781546001600160a01b0316600080546001600160a01b0319163317905590600180546001600160a01b03191690553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606490fd5b80fd5b3461032a57600036600319011261032a576000546040516001600160a01b039091168152602090f35b3461032a57602036600319011261032a5761124c610dbb565b6000546001600160a01b0390811690338214158061129a575b611272576108ef83611925565b60649250600254166040519163061db9c160e01b835233600484015260248301526044820152fd5b508060025416331415611265565b3461032a57600036600319011261032a576020600554604051908152f35b3461032a57600036600319011261032a576002546040516001600160a01b039091168152602090f35b3461032a57606036600319011261032a5760443563ffffffff811680910361032a5761132660018060a01b03601354163314611582565b60043560085560243560095563ffffffff19600a541617600a55600080f35b3461032a57600036600319011261032a576013546040516001600160a01b039091168152602090f35b3461032a57604036600319011261032a576001600160401b0360043581811161032a5761139f9036906004016107d1565b9160243590811161032a576113b89036906004016107d1565b9033600052601260205260ff60406000205416801561142a575b156113f4576106bc936113e493611cb1565b6040519081529081906020820190565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b506013546001600160a01b031633146113d2565b3461032a57602036600319011261032a576004356000526011602052602060ff604060002054166040519015158152f35b3461032a57600036600319011261032a576020600854604051908152f35b3461032a57602036600319011261032a576114a6610dbb565b6000546001600160a01b0390811691338390036115445716903382146114ff57600180546001600160a01b031916831790557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278600080a3005b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fd5b1561158957565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b6044820152606490fd5b601f81116115c7575050565b600090600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5906020601f850160051c83019410611623575b601f0160051c01915b82811061161857505050565b81815560010161160c565b9092508290611603565b601f8111611639575050565b600090600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7906020601f850160051c83019410611695575b601f0160051c01915b82811061168a57505050565b81815560010161167e565b9092508290611675565b90601f81116116ad57505050565b6000916000526020600020906020601f850160051c830194106116eb575b601f0160051c01915b8281106116e057505050565b8181556001016116d4565b90925082906116cb565b634e487b7160e01b600052601160045260246000fd5b6000198101919082116108f157565b601f198101919082116108f157565b919082039182116108f157565b1561173d57565b60405162461bcd60e51b8152602060048201526011602482015270155c1ad9595c081b9bdd081b9959591959607a1b6044820152606490fd5b9081602091031261032a575190565b6040513d6000823e3d90fd5b60001981146108f15760010190565b815181546001600160a01b0319166001600160a01b0391909116178155600160209060208401516001840155600283019160408501518051926001600160401b038411610238576117fb846117f5875461094f565b8761169f565b602092601f85116001146118935750509361187d9361183b8460c0956005956102bc9a996000926104b55750508160011b916000199060031b1c19161790565b90555b6060850151600382015560808501516004820155019261187661186460a0830151151590565b859060ff801983541691151516179055565b0151151590565b815461ff00191690151560081b61ff0016179055565b929190601f198516906118ab87600052602060002090565b946000915b8383106118fb57505050846005946102bc99989461187d989460c098600195106118e2575b505050811b01905561183e565b015160001960f88460031b161c191690553880806118d5565b8486015187559586019594810194918101916118b0565b6040519061191f82610258565b60008252565b6001600160a01b0316801561197a576020817fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1565b60405163d92e233d60e01b8152600490fd5b1561199357565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420696e7075742061727261797360601b6044820152606490fd5b156119d657565b60405162461bcd60e51b815260206004820152601c60248201527f546f6f206d616e792070726f6f667320746f20616767726567617465000000006044820152606490fd5b6001600160401b0381116102385760051b60200190565b90611a3c82611a1b565b611a49604051918261028e565b8281528092611a5a601f1991611a1b565b0190602036910137565b9190811015611aa55760051b81013590601e198136030182121561032a5701908135916001600160401b03831161032a57602001823603811361032a579190565b610d61565b15611ab157565b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642070726f6f6620696e206167677265676174696f6e000000006044820152606490fd5b908092918237016000815290565b15611b0b57565b60405162461bcd60e51b815260206004820152602160248201527f50726f6f6620616c7265616479207573656420696e206167677265676174696f6044820152603760f91b6064820152608490fd5b805115611aa55760200190565b805160011015611aa55760400190565b805160021015611aa55760600190565b805160031015611aa55760800190565b805160041015611aa55760a00190565b8051821015611aa55760209160051b010190565b9193929093845160208096019060005b818110611bf557505050825260601b6bffffffffffffffffffffffff191660208201526034019150565b825186529487019491870191600101611bcb565b908160011b91808304600214901517156108f157565b8151916001600160401b03831161023857680100000000000000008311610238578154838355808410611c86575b50611c62602080920192600052602060002090565b9060005b848110611c74575050505050565b83518382015592810192600101611c66565b60008360005284602060002092830192015b828110611ca6575050611c4d565b818155600101611c98565b9192909281841480611e83575b611cc79061198c565b611cd4600a8511156119cf565b611cdd84611a32565b9360005b818110611dad5750505050506040516020810190611d1381611d0533428787611bbb565b03601f19810183528261028e565b51902090611d48611d25600554611791565b91611d2f83600555565b611d43836000526010602052604060002090565b611c1f565b611d6c611d5f83600052600f602052604060002090565b805460ff19166001179055565b7f6dd2118914ad2b9a98780fafd92846eebe9361998a810f1a05f67033b17e2cdd60405180611da78582919060206040840193600181520152565b0390a290565b80611df2611ded611de7611dc4600195878b611a64565b611ddf611dd5878c8c969596611a64565b94909236916102f3565b9236916102f3565b906127b6565b611aaa565b611e7d611d5f611e31611e2b611e0985888c611a64565b9290611d05611e19888d8d611a64565b60405195869460208601988991611af6565b91611af6565b519020611e61611e5c611e58611e51846000526011602052604060002090565b5460ff1690565b1590565b611b04565b80611e6c858c611ba7565b526000526011602052604060002090565b01611ce1565b50831515611cbe565b15611e9357565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c69642046756e6374696f6e732072657175657374000000000000006044820152606490fd5b90602061034a92818152019061056a565b60405190611ef68261023d565b60078252667375636365737360c81b6020830152565b60405190611f198261023d565b600c82526b3430b9a932b0b6283937b7b360a11b6020830152565b60405190611f418261023d565b600c82526b0ecc2d8d2c8d2e8f290c2e6d60a31b6020830152565b90611f6f60209282815194859201610547565b0190565b6020929190611f89849282815194859201610547565b019081520190565b60405190611f9e8261023d565b6005825264383937b7b360d91b6020830152565b60405190611fbf8261023d565b600d82526c7075626c69635369676e616c7360981b6020830152565b611fef60209260408352604083019061056a565b9082818303910152600081520190565b91612014836000526004602052604060002090565b5490612021821515611e8c565b805161221857507f50348c1af87d1d2e61e0a7e9bf83a9c67f047d8de73be6b88acac8655a97581e916121749161205f612059611ee9565b836127ea565b612073826000526003602052604060002090565b60058101805460ff191660011781559091156121d4577f6dd2118914ad2b9a98780fafd92846eebe9361998a810f1a05f67033b17e2cdd916120bc6120b6611f0c565b866127ea565b156121bf576120d26120cc611f91565b866128fe565b6120e36120dd611fb2565b876128fe565b81511515806121b5575b1561217957612133926121649492611d0561211e600494604051928391612118602084018097611f5c565b90611f5c565b51902093849361010061ff0019825416179055565b015561214c611d5f82600052600f602052604060002090565b60405191829182919060206040840193600181520152565b0390a25b60405191829182611fdb565b0390a2565b50506121ad91600461213392612196612190611f34565b896128fe565b60405161211e81611d056020820194429086611f73565b0390a2612168565b50805115156120ed565b6121ad91600461213392612196612190611f34565b805461ff0019169055507f6dd2118914ad2b9a98780fafd92846eebe9361998a810f1a05f67033b17e2cdd604051806121ad81906000602060408401938281520152565b7f8117ad48db1a08344670d33acdeb14d7ec953b1119dafa9ab361e5e721d4356292506122656005612257612174946000526003602052604060002090565b01805460ff19166001179055565b60405191829182611ed8565b9015611aa55790565b60300190816030116108f157565b90602082018092116108f157565b919082018092116108f157565b6040519061016082018281106001600160401b038211176102385760405261013182527072696e6769667928726573756c7429293b60781b610140837f636f6e737420636861696e49643d7061727365496e7428617267735b305d293b60208201527f636f6e737420626c6f636b4e756d626572733d4a534f4e2e706172736528617260408201527f67735b315d293b636f6e737420726573756c743d7b737563636573733a74727560608201527f652c636861696e49642c626c6f636b4e756d626572732c76616c69646974794860808201527f6173683a2730783132333435363738393061626364656631323334353637383960a08201527f306162636465663132333435363738393061626364656631323334353637383960c08201527f30616263646566272c6d657461646174613a7b74696d657374616d703a4d617460e08201527f682e666c6f6f7228446174652e6e6f7728292f31303030297d7d3b72657475726101008201527f6e2046756e6374696f6e732e656e636f6465537472696e67284a534f4e2e73746101208201520152565b604051906124488261021d565b606060c08360008152600060208201526000604082015282808201528260808201528260a08201520152565b6040519061248182610273565b600582528160005b60a08110612495575050565b806060602080938501015201612489565b9291906124bd602091604086526040860190610989565b930152565b907f89652d00e157965d54f5ad31af9352416c4e90b879711ec122680d4e3a1de9a6906124f9836000526003602052604060002090565b612501610a1f565b805115612666575b61261d6126419161252261251b61243b565b91826130f2565b612618600261252f612474565b95019461254b61254661254188610b82565b612aa2565b612c22565b61255482611b5a565b5261255e81611b5a565b5061258c61259961256e89612c22565b611d0560405193849261211860208501600190605b60f81b81520190565b605d60f81b815260010190565b6125a282611b67565b526125ac81611b67565b506125c56125466125bf600e5460ff1690565b60ff1690565b6125ce82611b77565b526125d881611b77565b506125e246612c22565b6125eb82611b87565b526125f581611b87565b506125fe610ae3565b61260782611b97565b5261261181611b97565b5082612cc2565b612e11565b600a54600b54916001600160401b0363ffffffff8360901c169260501c1690612fdf565b93612656856000526004602052604060002090565b55612174604051928392836124a6565b5061264161261d6126756122a3565b915050612509565b60e060a061034a9360208452805160208501526020810151604085015261ffff6040820151166060850152606081015163ffffffff80911660808601526080820151168285015201519160c080820152019061056a565b60025460009060209061276d906001600160a01b031660095460085461274c600a5463ffffffff9061270f6127076102be565b8a81526130b9565b936127186102cb565b9586528886015280881c61ffff16604086015263ffffffff81831616606086015260301c16608084019063ffffffff169052565b60a0820152604051948580948193634d8e1c2f60e11b83526004830161267d565b03925af18015610f255761279491600091612797575b506000526004602052604060002090565b55565b6127b0915060203d602011610f1e57610f16818361028e565b38612783565b51159081156127cf575b506127ca57600190565b600090565b90505115386127c0565b908151811015611aa5570160200190565b604051601160f91b60208201529091612822908290611d05906128109060218401612118565b65223a7472756560d01b815260060190565b6000905b6128338351825190611729565b82116128ce5760019260005b82518110156128c45761286c61285e6128588387612296565b846127d9565b516001600160f81b03191690565b61288961287c61285e84876127d9565b6001600160f81b03191690565b6001600160f81b0319909116036128a25760010161283f565b5092509060005b6128bc576128b690611791565b90612826565b505050600190565b50929190916128a9565b505050600090565b906128e0826102d8565b6128ed604051918261028e565b8281528092611a5a601f19916102d8565b916129416129249261293360405194859261211860208501600190601160f91b81520190565b62111d1160e91b815260030190565b03601f19810184528361028e565b6000905b6129528451845190611729565b8211612a965760019260005b8151811015612a8c5761297d61285e6129778387612296565b886127d9565b61298d61287c61285e84866127d9565b6001600160f81b0319909116036129a65760010161295e565b5092509060005b6129c1575b6129bb90611791565b90612945565b906129cd835183612296565b92835b8551811080612a68575b156129ed576129e890611791565b6129d0565b9093929192808211612a005750506129b2565b91509250612a16612a118285611729565b6128d6565b9160005b612a248386611729565b811015612a5f5782600182612a4861285e612a42612a249686612296565b8b6127d9565b60001a612a5582896127d9565b5301915050612a1a565b50935050905090565b50601160f91b6001600160f81b0319612a8461285e848a6127d9565b1614156129da565b50929190916129ad565b9250505061034a611912565b60409081519060209082612ab98382018093611f5c565b0392612acd601f199485810183528261028e565b51902092805182810190612b0081612af48460089067657468657265756d60c01b81520190565b0386810183528261028e565b5190208414612c1957805167617262697472756d60c01b83820190815290612b2b8160088401612af4565b5190208414612c0f578051676f7074696d69736d60c01b83820190815290612b568160088401612af4565b5190208414612c06578051636261736560e01b83820190815290612b7d8160048401612af4565b5190208414612bfc578051663837b63cb3b7b760c91b83820190815290612ba78160078401612af4565b5190208414612bf357612be090519182019282612bd485600990686176616c616e63686560b81b81520190565b0390810183528261028e565b51902014612bed57600190565b61a86a90565b50505050608990565b5050505061210590565b50505050600a90565b5050505061a4b190565b50505050600190565b8015612ca4576000818181805b612c8c5750612c3d816128d6565b935b612c495750505090565b612c529061170b565b90600a90612c77612c676125bf84840661227a565b60f81b6001600160f81b03191690565b841a612c8384876127d9565b53049081612c3f565b9150612c99600a91611791565b910480849291612c2f565b50604051612cb18161023d565b60018152600360fc1b602082015290565b815115612ccf5760a00152565b60405163fe936cb760e01b8152600490fd5b60405190612cee8261023d565b600c82526b31b7b232a637b1b0ba34b7b760a11b6020830152565b634e487b7160e01b600052602160045260246000fd5b60031115612d2957565b612d09565b60405190612d3b8261023d565b60088252676c616e677561676560c01b6020830152565b60011115612d2957565b60405190612d698261023d565b6006825265736f7572636560d01b6020830152565b60405190612d8b8261023d565b60048252636172677360e01b6020830152565b60405190612dab8261023d565b600f82526e39b2b1b932ba39a637b1b0ba34b7b760891b6020830152565b60405190612dd68261023d565b60078252667365637265747360c81b6020830152565b60405190612df98261023d565b600982526862797465734172677360b81b6020830152565b612e19613135565b90612e2b612e25612ce1565b83613185565b612e488151612e3981612d1f565b612e4281612d1f565b83613247565b612e53612e25612d2e565b612e6d6040820151612e6481612d52565b612e4281612d52565b612e78612e25612d5c565b612e86606082015183613185565b60a08101805151612f86575b506080810190815151612f06575b60c0915001805151612eb3575b50515190565b91612ebf612e25612dec565b612ec8826132e8565b60005b83518051821015612ef35790612eed612ee682600194611ba7565b5185613401565b01612ecb565b50509150612f0081613374565b38612ead565b602081018051612f1581612d1f565b612f1e81612d1f565b15612f745760c092612f57612f6f92612f3e612f38612d9e565b88613185565b51612f4881612d1f565b612f5181612d1f565b86613247565b612f68612f62612dc9565b86613185565b5184613401565b612ea0565b60405163a80d31f760e01b8152600490fd5b92612f98612f92612d7e565b84613185565b612fa1836132e8565b60005b84518051821015612fcc5790612fc6612fbf82600194611ba7565b5186613185565b01612fa4565b50509250612fd982613374565b38612e92565b92906020926001600160401b039263ffffffff61301e604051978896879663230e93b160e11b885216600487015260a0602487015260a486019061056a565b60016044860152921660648401526084830152038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610f255760009161309a575b50807f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db8600080a290565b6130b3915060203d602011610f1e57610f16818361028e565b38613070565b6040519063125fa26760e31b6020830152511515602482015260248152606081018181106001600160401b038211176102385760405290565b815115613109576000808252604082015260600152565b6040516322ce3edd60e01b8152600490fd5b604051906131288261023d565b6000602083606081520152565b6040516131418161023d565b61314961311b565b808252602082016000815261315c61311b565b50610100602083015260405180925260008252610120820191821061032a576000916040525290565b81516131c99291906001600160401b03811690601782116131cc576131b49150606060ff8451921617906138cf565b505b51906131c061311b565b50805191613aff565b50565b5060ff81116131f1576131eb906131e383516136d6565b508251613a8b565b506131b6565b61ffff8111613210576131eb906132088351613671565b508251613a1d565b63ffffffff8111613231576131eb90613229835161360c565b5082516139ad565b6131eb9061323f835161359c565b50825161393a565b9081519161325361311b565b5082515160018101908181116108f15760208501518110156132ac575b60c260206102bc96519283010153805182116132a4575b50506040519160208301526020825261329f8261023d565b613401565b523880613287565b8160011b94828604600214831517156108f1576020816132de6102bc986132d760c295519184613485565b50826134d7565b5096505050613270565b8051906132f361311b565b5081515160018101908181116108f1576020840151811015613341575b609f6020809551928301015380518211613339575b505001805190600182018092116108f15752565b523880613325565b8160011b93828504600214831517156108f15760208161336a82976132d7609f95519184613485565b5095505050613310565b80519061337f61311b565b5081515160018101908181116108f15760208401518110156133ce575b60ff60208095519283010153805182116133c6575b50500180516000198101919082116108f15752565b5238806133b1565b8160011b93828504600214831517156108f1576020816133f782976132d760ff95519184613485565b509550505061339c565b81516131c99291906001600160401b0381169060178211613430576131b49150604060ff8451921617906138cf565b5060ff8111613447576131eb906131e3835161386a565b61ffff811161345e576131eb906132088351613805565b63ffffffff8111613477576131eb9061322983516137a0565b6131eb9061323f835161373b565b9061348e61311b565b50601f8116806134bd575b508060208301526040519081835260008252810160200190811061032a5760405290565b602003602081116108f15781018091116108f15738613499565b906134e061311b565b508051906134ec61311b565b506134fa8151831115613af8565b825151916135088184612296565b60209260208601518211613585575b60209186518381519782010196821161357d575b505001915b808210156135555750600019906020036101000a019081199051169082511617905290565b90919261357161356b6135779286518152612288565b94612288565b9261171a565b90613530565b52388061352b565b61359761359183611c09565b87613bab565b613517565b6135a461311b565b5080515160018101908181116108f15760208301518110156135dd575b607b602084519283010153805182116135d957505090565b5290565b8160011b828104600214831517156108f157613606906135ff85519186613485565b50846134d7565b506135c1565b61361461311b565b5080515160018101908181116108f1576020830151811015613649575b607a602084519283010153805182116135d957505090565b8160011b828104600214831517156108f15761366b906135ff85519186613485565b50613631565b61367961311b565b5080515160018101908181116108f15760208301518110156136ae575b6079602084519283010153805182116135d957505090565b8160011b828104600214831517156108f1576136d0906135ff85519186613485565b50613696565b6136de61311b565b5080515160018101908181116108f1576020830151811015613713575b6078602084519283010153805182116135d957505090565b8160011b828104600214831517156108f157613735906135ff85519186613485565b506136fb565b61374361311b565b5080515160018101908181116108f1576020830151811015613778575b605b602084519283010153805182116135d957505090565b8160011b828104600214831517156108f15761379a906135ff85519186613485565b50613760565b6137a861311b565b5080515160018101908181116108f15760208301518110156137dd575b605a602084519283010153805182116135d957505090565b8160011b828104600214831517156108f1576137ff906135ff85519186613485565b506137c5565b61380d61311b565b5080515160018101908181116108f1576020830151811015613842575b6059602084519283010153805182116135d957505090565b8160011b828104600214831517156108f157613864906135ff85519186613485565b5061382a565b61387261311b565b5080515160018101908181116108f15760208301518110156138a7575b6058602084519283010153805182116135d957505090565b8160011b828104600214831517156108f1576138c9906135ff85519186613485565b5061388f565b906138d861311b565b5081515160018101918282116108f157602084015182101561390b575b602084519283010153805182116135d957505090565b8260011b838104600214841517156108f1576139349061392d86519187613485565b50856134d7565b506138f5565b9061394361311b565b508151518060080191826008116108f15760208401518311613985575b6008845192830101906001600160401b0319825116179052805182116135d957505090565b8260011b838104600214841517156108f1576139a79061392d86519187613485565b50613960565b906139b661311b565b508151518060040191826004116108f157602084015183116139f5575b60048451928301019063ffffffff19825116179052805182116135d957505090565b8260011b838104600214841517156108f157613a179061392d86519187613485565b506139d3565b90613a2661311b565b508151518060020191826002116108f15760208401518311613a63575b60028451928301019061ffff19825116179052805182116135d957505090565b8260011b838104600214841517156108f157613a859061392d86519187613485565b50613a43565b90613a9461311b565b508151518060010191826001116108f15760208401518311613ad0575b60018451928301019060ff19825116179052805182116135d957505090565b8260011b838104600214841517156108f157613af29061392d86519187613485565b50613ab1565b1561032a57565b9190613b0961311b565b50613b178151831115613af8565b825151916020613b278285612296565b928193828701518111613b94575b865183815197820101968211613b8c575b505001915b80821015613b705750600019906020036101000a019081199051169082511617905290565b90919261357161356b613b869286518152612288565b90613b4b565b523880613b46565b613ba6613ba082611c09565b88613bab565b613b35565b906131c991613bbc81519282613485565b506134d756fea2646970667358221220c195559d0b91aeebb2e489d679a51f3db2874b723660320d7a20e6e0d37372e664736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA76175 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x1098241B EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x152A9526 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x176D80C4 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x19C813BE EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x1BD6447A EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x25825746 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x36E0025F EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x39A9E4B3 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x454BBD29 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x536FFF6C EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x56959332 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x57EFE032 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x5A74373C EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x624CFFD4 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x72E4C9F6 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x973A814E EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9431F23 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xB5CCE133 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xD175D81A EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xD87318B2 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xDE3D9FB7 EQ PUSH2 0x176 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x148D JUMP JUMPDEST PUSH2 0x146F JUMP JUMPDEST PUSH2 0x143E JUMP JUMPDEST PUSH2 0x136E JUMP JUMPDEST PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x120A JUMP JUMPDEST PUSH2 0x114B JUMP JUMPDEST PUSH2 0x111D JUMP JUMPDEST PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x1094 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST PUSH2 0xF69 JUMP JUMPDEST PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH2 0xC5D JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2BC DUP3 PUSH2 0x21D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2BC DUP3 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2BC DUP3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x238 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2FF DUP3 PUSH2 0x2D8 JUMP JUMPDEST SWAP2 PUSH2 0x30D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x28E JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x32A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x32A JUMPI DUP2 PUSH1 0x20 PUSH2 0x34A SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x2F3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x32A JUMPI PUSH2 0x381 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x32F JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x32A JUMPI PUSH2 0x39A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x32F JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x3FB JUMPI PUSH2 0x3D4 SWAP2 DUP4 PUSH2 0x1FFF JUMP JUMPDEST PUSH32 0x85E1543BF2F84FE80C6BADBCE3648C8539AD1DF4D2B3D822938CA0538BE727E6 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC6829F83 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x32A JUMPI PUSH2 0x34A SWAP2 PUSH1 0x4 ADD PUSH2 0x32F JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH2 0x445 CALLDATASIZE PUSH2 0x40D JUMP JUMPDEST PUSH2 0x45A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x238 JUMPI PUSH2 0x47E DUP2 PUSH2 0x479 PUSH1 0xD SLOAD PUSH2 0x94F JUMP JUMPDEST PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x4C0 JUMPI POP DUP2 SWAP1 PUSH2 0x4B0 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x4B5 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x49B JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x4F3 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x52F JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x516 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x50B JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x55A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x54A JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x583 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x547 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xC0 PUSH2 0x5C9 PUSH1 0x40 DUP6 ADD MLOAD DUP4 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH2 0x6BC PUSH1 0x40 DUP1 PUSH1 0xC0 DUP2 MLOAD PUSH2 0x617 DUP2 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 DUP1 SWAP4 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x6B2 PUSH1 0xFF PUSH1 0x5 DUP4 MLOAD SWAP5 PUSH2 0x65E DUP7 PUSH2 0x21D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x681 PUSH1 0x2 DUP3 ADD PUSH2 0xB82 JUMP JUMPDEST DUP7 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x58F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x32A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x32A JUMPI PUSH2 0x775 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x78A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x50 SHL NOT AND PUSH1 0x50 SWAP4 SWAP1 SWAP4 SHL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x50 SHL AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x90 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFFFFFFFF PUSH1 0x90 SHL AND OR SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xB SSTORE STOP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x32A JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x32A JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x32A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x32A JUMPI PUSH2 0x834 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x931 JUMPI POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x8F6 JUMPI PUSH2 0x3E7 NOT NUMBER ADD NUMBER DUP2 GT PUSH2 0x8F1 JUMPI DUP5 PUSH2 0x8D9 PUSH2 0x8B8 PUSH32 0x2374D5481494AD7962D4BD1B98B91E9F3117C9B66533B2804BE3D76C41A49088 SWAP4 PUSH2 0x8B2 PUSH2 0x8A9 DUP10 PUSH2 0x8EF SWAP12 PUSH2 0x2271 JUMP JUMPDEST CALLDATALOAD PUSH2 0x3E8 SWAP1 MOD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2296 JUMP JUMPDEST SWAP6 DUP7 SWAP3 DUP4 PUSH1 0x3 PUSH2 0x8D2 DUP10 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE LOG2 PUSH2 0x24C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A5908159491881C995C5D595CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x97F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x969 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x95E JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 PUSH2 0x998 DUP3 PUSH2 0x94F JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xA00 JUMPI POP PUSH1 0x1 EQ PUSH2 0x9BF JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST SWAP1 SWAP4 SWAP5 SWAP6 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x9EC JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x9B8 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xC SLOAD SWAP2 PUSH2 0xA33 DUP4 PUSH2 0x94F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xABF JUMPI POP PUSH1 0x1 EQ PUSH2 0xA5E JUMPI JUMPDEST POP POP PUSH2 0x2BC SWAP3 POP SUB DUP4 PUSH2 0x28E JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xAA7 JUMPI POP PUSH2 0x2BC SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0xA50 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0xA8C JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x2BC SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xD SLOAD SWAP2 PUSH2 0xAF7 DUP4 PUSH2 0x94F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xABF JUMPI POP PUSH1 0x1 EQ PUSH2 0xB21 JUMPI POP POP PUSH2 0x2BC SWAP3 POP SUB DUP4 PUSH2 0x28E JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xB6A JUMPI POP PUSH2 0x2BC SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0xA50 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0xB4F JUMP JUMPDEST SWAP1 PUSH2 0x2BC PUSH2 0xB96 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x989 JUMP JUMPDEST SUB DUP4 PUSH2 0x28E JUMP JUMPDEST SWAP6 SWAP3 PUSH1 0xC0 SWAP6 SWAP3 PUSH2 0xBCB SWAP3 SWAP10 SWAP9 SWAP6 SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xE0 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH2 0x6BC PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xC35 DUP6 PUSH2 0xC2E DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SUB DUP7 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x5 PUSH1 0x4 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0xFF DUP1 DUP8 PUSH1 0x8 SHR AND SWAP7 AND SWAP5 DUP9 PUSH2 0xB9D JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH2 0xC6B CALLDATASIZE PUSH2 0x40D JUMP JUMPDEST PUSH2 0xC80 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x238 JUMPI PUSH2 0xCA4 DUP2 PUSH2 0xC9F PUSH1 0xC SLOAD PUSH2 0x94F JUMP JUMPDEST PUSH2 0x162D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCDA JUMPI POP DUP2 SWAP1 PUSH2 0xCD5 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x4B5 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xC SSTORE STOP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0xD0D PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0xD49 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0xD30 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xD25 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xD12 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x0 SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xDB7 JUMPI DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x32A JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH2 0xDEA PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x32A JUMPI PUSH1 0x13 SLOAD PUSH2 0x8EF SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xE13 SWAP1 DUP4 AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x32A JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x32A JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x32A JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x32A JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH2 0xE89 CALLDATASIZE PUSH2 0xE32 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0x8F1 JUMPI PUSH2 0xEA4 SWAP1 PUSH1 0x7 SLOAD LT PUSH2 0x1736 JUMP JUMPDEST PUSH2 0xEAD TIMESTAMP PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x2BF7F019 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x657468657265756D PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x84 DUP2 ADD SUB DUP2 PUSH1 0x0 ADDRESS GAS CALL DUP1 ISZERO PUSH2 0xF25 JUMPI PUSH2 0xEFD JUMPI STOP JUMPDEST PUSH2 0x8EF SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF1E JUMPI JUMPDEST PUSH2 0xF16 DUP2 DUP4 PUSH2 0x28E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1776 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x1785 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF4B PUSH2 0xDBB JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x32A JUMPI PUSH2 0xFC8 PUSH2 0x6BC SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x102E PUSH2 0xFD9 PUSH1 0x5 SLOAD PUSH2 0x1791 JUMP JUMPDEST SWAP3 PUSH2 0xFE3 DUP5 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0xFEB PUSH2 0x2AF JUMP JUMPDEST CALLER DUP2 MSTORE SWAP1 TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1029 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x17A0 JUMP JUMPDEST DUP1 PUSH2 0x1085 JUMPI PUSH2 0x103C DUP3 PUSH2 0x26D4 JUMP JUMPDEST DUP2 PUSH32 0x7EF8CA77FDC89C79F093F2A6B2348B1FCDA0BEB941CE31CE9F2D9D260C4DB9D2 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1072 CALLER SWAP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x108F DUP2 DUP4 PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0x103C JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH2 0x10DE CALLDATASIZE PUSH2 0xE32 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD TIMESTAMP SUB TIMESTAMP DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x7 SLOAD LT PUSH1 0x40 MLOAD SWAP1 PUSH2 0x10FD DUP3 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0x6BC PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH2 0x1143 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1207 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER SUB PUSH2 0x11C9 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH2 0x124C PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x129A JUMPI JUMPDEST PUSH2 0x1272 JUMPI PUSH2 0x8EF DUP4 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x64 SWAP3 POP PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x61DB9C1 PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 PUSH1 0x2 SLOAD AND CALLER EQ ISZERO PUSH2 0x1265 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x44 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x32A JUMPI PUSH2 0x1326 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x13 SLOAD AND CALLER EQ PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x9 SSTORE PUSH4 0xFFFFFFFF NOT PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x32A JUMPI PUSH2 0x139F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7D1 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x32A JUMPI PUSH2 0x13B8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7D1 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x142A JUMPI JUMPDEST ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x6BC SWAP4 PUSH2 0x13E4 SWAP4 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13D2 JUMP JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x32A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x32A JUMPI PUSH2 0x14A6 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 CALLER DUP4 SWAP1 SUB PUSH2 0x1544 JUMPI AND SWAP1 CALLER DUP3 EQ PUSH2 0x14FF JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1589 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x15C7 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1623 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1618 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x160C JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1639 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1695 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x168A JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x167E JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1675 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x16AD JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x16EB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x16E0 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16D4 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x16CB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST PUSH1 0x1F NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x173D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155C1AD9595C081B9BDD081B9959591959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x32A JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8F1 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x2 DUP4 ADD SWAP2 PUSH1 0x40 DUP6 ADD MLOAD DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x238 JUMPI PUSH2 0x17FB DUP5 PUSH2 0x17F5 DUP8 SLOAD PUSH2 0x94F JUMP JUMPDEST DUP8 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0x1893 JUMPI POP POP SWAP4 PUSH2 0x187D SWAP4 PUSH2 0x183B DUP5 PUSH1 0xC0 SWAP6 PUSH1 0x5 SWAP6 PUSH2 0x2BC SWAP11 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x4B5 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP3 PUSH2 0x1876 PUSH2 0x1864 PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 PUSH2 0x18AB DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x18FB JUMPI POP POP POP DUP5 PUSH1 0x5 SWAP5 PUSH2 0x2BC SWAP10 SWAP9 SWAP5 PUSH2 0x187D SWAP9 SWAP5 PUSH1 0xC0 SWAP9 PUSH1 0x1 SWAP6 LT PUSH2 0x18E2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x183E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x18D5 JUMP JUMPDEST DUP5 DUP7 ADD MLOAD DUP8 SSTORE SWAP6 DUP7 ADD SWAP6 SWAP5 DUP2 ADD SWAP5 SWAP2 DUP2 ADD SWAP2 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x191F DUP3 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x197A JUMPI PUSH1 0x20 DUP2 PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 SWAP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1993 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420696E70757420617272617973 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x19D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6F206D616E792070726F6F667320746F2061676772656761746500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x238 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A3C DUP3 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x1A49 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x28E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1A5A PUSH1 0x1F NOT SWAP2 PUSH2 0x1A1B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x32A JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x32A JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x32A JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST ISZERO PUSH2 0x1AB1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6F6620696E206167677265676174696F6E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1B0B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6F6620616C7265616479207573656420696E206167677265676174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x4 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 DUP5 MLOAD PUSH1 0x20 DUP1 SWAP7 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1BF5 JUMPI POP POP POP DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP2 POP JUMP JUMPDEST DUP3 MLOAD DUP7 MSTORE SWAP5 DUP8 ADD SWAP5 SWAP2 DUP8 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1BCB JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x238 JUMPI PUSH9 0x10000000000000000 DUP4 GT PUSH2 0x238 JUMPI DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x1C86 JUMPI JUMPDEST POP PUSH2 0x1C62 PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1C74 JUMPI POP POP POP POP POP JUMP JUMPDEST DUP4 MLOAD DUP4 DUP3 ADD SSTORE SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x1CA6 JUMPI POP POP PUSH2 0x1C4D JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C98 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP3 DUP2 DUP5 EQ DUP1 PUSH2 0x1E83 JUMPI JUMPDEST PUSH2 0x1CC7 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1CD4 PUSH1 0xA DUP6 GT ISZERO PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x1CDD DUP5 PUSH2 0x1A32 JUMP JUMPDEST SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1DAD JUMPI POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D13 DUP2 PUSH2 0x1D05 CALLER TIMESTAMP DUP8 DUP8 PUSH2 0x1BBB JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x28E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x1D48 PUSH2 0x1D25 PUSH1 0x5 SLOAD PUSH2 0x1791 JUMP JUMPDEST SWAP2 PUSH2 0x1D2F DUP4 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x1D43 DUP4 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1D6C PUSH2 0x1D5F DUP4 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD PUSH1 0x40 MLOAD DUP1 PUSH2 0x1DA7 DUP6 DUP3 SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x1 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x1DF2 PUSH2 0x1DED PUSH2 0x1DE7 PUSH2 0x1DC4 PUSH1 0x1 SWAP6 DUP8 DUP12 PUSH2 0x1A64 JUMP JUMPDEST PUSH2 0x1DDF PUSH2 0x1DD5 DUP8 DUP13 DUP13 SWAP7 SWAP6 SWAP7 PUSH2 0x1A64 JUMP JUMPDEST SWAP5 SWAP1 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 CALLDATASIZE SWAP2 PUSH2 0x2F3 JUMP JUMPDEST SWAP1 PUSH2 0x27B6 JUMP JUMPDEST PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x1E7D PUSH2 0x1D5F PUSH2 0x1E31 PUSH2 0x1E2B PUSH2 0x1E09 DUP6 DUP9 DUP13 PUSH2 0x1A64 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1D05 PUSH2 0x1E19 DUP9 DUP14 DUP14 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP9 DUP10 SWAP2 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 PUSH2 0x1AF6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1E61 PUSH2 0x1E5C PUSH2 0x1E58 PUSH2 0x1E51 DUP5 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1B04 JUMP JUMPDEST DUP1 PUSH2 0x1E6C DUP6 DUP13 PUSH2 0x1BA7 JUMP JUMPDEST MSTORE PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x1CE1 JUMP JUMPDEST POP DUP4 ISZERO ISZERO PUSH2 0x1CBE JUMP JUMPDEST ISZERO PUSH2 0x1E93 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642046756E6374696F6E73207265717565737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x34A SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1EF6 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x73756363657373 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F19 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0x3430B9A932B0B6283937B7B3 PUSH1 0xA1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F41 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0xECC2D8D2C8D2E8F290C2E6D PUSH1 0xA3 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1F6F PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x547 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP3 SWAP2 SWAP1 PUSH2 0x1F89 DUP5 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x547 JUMP JUMPDEST ADD SWAP1 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F9E DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x383937B7B3 PUSH1 0xD9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1FBF DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0xD DUP3 MSTORE PUSH13 0x7075626C69635369676E616C73 PUSH1 0x98 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1FEF PUSH1 0x20 SWAP3 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST SWAP1 DUP3 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH1 0x0 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2014 DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x2021 DUP3 ISZERO ISZERO PUSH2 0x1E8C JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2218 JUMPI POP PUSH32 0x50348C1AF87D1D2E61E0A7E9BF83A9C67F047D8DE73BE6B88ACAC8655A97581E SWAP2 PUSH2 0x2174 SWAP2 PUSH2 0x205F PUSH2 0x2059 PUSH2 0x1EE9 JUMP JUMPDEST DUP4 PUSH2 0x27EA JUMP JUMPDEST PUSH2 0x2073 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE SWAP1 SWAP2 ISZERO PUSH2 0x21D4 JUMPI PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD SWAP2 PUSH2 0x20BC PUSH2 0x20B6 PUSH2 0x1F0C JUMP JUMPDEST DUP7 PUSH2 0x27EA JUMP JUMPDEST ISZERO PUSH2 0x21BF JUMPI PUSH2 0x20D2 PUSH2 0x20CC PUSH2 0x1F91 JUMP JUMPDEST DUP7 PUSH2 0x28FE JUMP JUMPDEST PUSH2 0x20E3 PUSH2 0x20DD PUSH2 0x1FB2 JUMP JUMPDEST DUP8 PUSH2 0x28FE JUMP JUMPDEST DUP2 MLOAD ISZERO ISZERO DUP1 PUSH2 0x21B5 JUMPI JUMPDEST ISZERO PUSH2 0x2179 JUMPI PUSH2 0x2133 SWAP3 PUSH2 0x2164 SWAP5 SWAP3 PUSH2 0x1D05 PUSH2 0x211E PUSH1 0x4 SWAP5 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x2118 PUSH1 0x20 DUP5 ADD DUP1 SWAP8 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 PUSH2 0x1F5C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 DUP5 SWAP4 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SSTORE PUSH2 0x214C PUSH2 0x1D5F DUP3 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x1 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1FDB JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST POP POP PUSH2 0x21AD SWAP2 PUSH1 0x4 PUSH2 0x2133 SWAP3 PUSH2 0x2196 PUSH2 0x2190 PUSH2 0x1F34 JUMP JUMPDEST DUP10 PUSH2 0x28FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211E DUP2 PUSH2 0x1D05 PUSH1 0x20 DUP3 ADD SWAP5 TIMESTAMP SWAP1 DUP7 PUSH2 0x1F73 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x2168 JUMP JUMPDEST POP DUP1 MLOAD ISZERO ISZERO PUSH2 0x20ED JUMP JUMPDEST PUSH2 0x21AD SWAP2 PUSH1 0x4 PUSH2 0x2133 SWAP3 PUSH2 0x2196 PUSH2 0x2190 PUSH2 0x1F34 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP PUSH32 0x6DD2118914AD2B9A98780FAFD92846EEBE9361998A810F1A05F67033B17E2CDD PUSH1 0x40 MLOAD DUP1 PUSH2 0x21AD DUP2 SWAP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP4 DUP3 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH32 0x8117AD48DB1A08344670D33ACDEB14D7EC953B1119DAFA9AB361E5E721D43562 SWAP3 POP PUSH2 0x2265 PUSH1 0x5 PUSH2 0x2257 PUSH2 0x2174 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x1AA5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x30 ADD SWAP1 DUP2 PUSH1 0x30 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8F1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x160 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE PUSH2 0x131 DUP3 MSTORE PUSH17 0x72696E6769667928726573756C7429293B PUSH1 0x78 SHL PUSH2 0x140 DUP4 PUSH32 0x636F6E737420636861696E49643D7061727365496E7428617267735B305D293B PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x636F6E737420626C6F636B4E756D626572733D4A534F4E2E7061727365286172 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x67735B315D293B636F6E737420726573756C743D7B737563636573733A747275 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x652C636861696E49642C626C6F636B4E756D626572732C76616C696469747948 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x6173683A27307831323334353637383930616263646566313233343536373839 PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0x3061626364656631323334353637383930616263646566313233343536373839 PUSH1 0xC0 DUP3 ADD MSTORE PUSH32 0x30616263646566272C6D657461646174613A7B74696D657374616D703A4D6174 PUSH1 0xE0 DUP3 ADD MSTORE PUSH32 0x682E666C6F6F7228446174652E6E6F7728292F31303030297D7D3B7265747572 PUSH2 0x100 DUP3 ADD MSTORE PUSH32 0x6E2046756E6374696F6E732E656E636F6465537472696E67284A534F4E2E7374 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2448 DUP3 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC0 DUP4 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2481 DUP3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE DUP2 PUSH1 0x0 JUMPDEST PUSH1 0xA0 DUP2 LT PUSH2 0x2495 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x2489 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x24BD PUSH1 0x20 SWAP2 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x989 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH32 0x89652D00E157965D54F5AD31AF9352416C4E90B879711EC122680D4E3A1DE9A6 SWAP1 PUSH2 0x24F9 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2501 PUSH2 0xA1F JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2666 JUMPI JUMPDEST PUSH2 0x261D PUSH2 0x2641 SWAP2 PUSH2 0x2522 PUSH2 0x251B PUSH2 0x243B JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x30F2 JUMP JUMPDEST PUSH2 0x2618 PUSH1 0x2 PUSH2 0x252F PUSH2 0x2474 JUMP JUMPDEST SWAP6 ADD SWAP5 PUSH2 0x254B PUSH2 0x2546 PUSH2 0x2541 DUP9 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x2AA2 JUMP JUMPDEST PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x2554 DUP3 PUSH2 0x1B5A JUMP JUMPDEST MSTORE PUSH2 0x255E DUP2 PUSH2 0x1B5A JUMP JUMPDEST POP PUSH2 0x258C PUSH2 0x2599 PUSH2 0x256E DUP10 PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x1D05 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH2 0x2118 PUSH1 0x20 DUP6 ADD PUSH1 0x1 SWAP1 PUSH1 0x5B PUSH1 0xF8 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x5D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x25A2 DUP3 PUSH2 0x1B67 JUMP JUMPDEST MSTORE PUSH2 0x25AC DUP2 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH2 0x25C5 PUSH2 0x2546 PUSH2 0x25BF PUSH1 0xE SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x25CE DUP3 PUSH2 0x1B77 JUMP JUMPDEST MSTORE PUSH2 0x25D8 DUP2 PUSH2 0x1B77 JUMP JUMPDEST POP PUSH2 0x25E2 CHAINID PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x25EB DUP3 PUSH2 0x1B87 JUMP JUMPDEST MSTORE PUSH2 0x25F5 DUP2 PUSH2 0x1B87 JUMP JUMPDEST POP PUSH2 0x25FE PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x2607 DUP3 PUSH2 0x1B97 JUMP JUMPDEST MSTORE PUSH2 0x2611 DUP2 PUSH2 0x1B97 JUMP JUMPDEST POP DUP3 PUSH2 0x2CC2 JUMP JUMPDEST PUSH2 0x2E11 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH4 0xFFFFFFFF DUP4 PUSH1 0x90 SHR AND SWAP3 PUSH1 0x50 SHR AND SWAP1 PUSH2 0x2FDF JUMP JUMPDEST SWAP4 PUSH2 0x2656 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x2174 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x24A6 JUMP JUMPDEST POP PUSH2 0x2641 PUSH2 0x261D PUSH2 0x2675 PUSH2 0x22A3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2509 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0xA0 PUSH2 0x34A SWAP4 PUSH1 0x20 DUP5 MSTORE DUP1 MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xFFFF PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF DUP1 SWAP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD AND DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH1 0xC0 DUP1 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x276D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x274C PUSH1 0xA SLOAD PUSH4 0xFFFFFFFF SWAP1 PUSH2 0x270F PUSH2 0x2707 PUSH2 0x2BE JUMP JUMPDEST DUP11 DUP2 MSTORE PUSH2 0x30B9 JUMP JUMPDEST SWAP4 PUSH2 0x2718 PUSH2 0x2CB JUMP JUMPDEST SWAP6 DUP7 MSTORE DUP9 DUP7 ADD MSTORE DUP1 DUP9 SHR PUSH2 0xFFFF AND PUSH1 0x40 DUP7 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 DUP4 AND AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x30 SHR AND PUSH1 0x80 DUP5 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x4D8E1C2F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x267D JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xF25 JUMPI PUSH2 0x2794 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2797 JUMPI JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x27B0 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF1E JUMPI PUSH2 0xF16 DUP2 DUP4 PUSH2 0x28E JUMP JUMPDEST CODESIZE PUSH2 0x2783 JUMP JUMPDEST MLOAD ISZERO SWAP1 DUP2 ISZERO PUSH2 0x27CF JUMPI JUMPDEST POP PUSH2 0x27CA JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD ISZERO CODESIZE PUSH2 0x27C0 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1AA5 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH2 0x2822 SWAP1 DUP3 SWAP1 PUSH2 0x1D05 SWAP1 PUSH2 0x2810 SWAP1 PUSH1 0x21 DUP5 ADD PUSH2 0x2118 JUMP JUMPDEST PUSH6 0x223A74727565 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x2833 DUP4 MLOAD DUP3 MLOAD SWAP1 PUSH2 0x1729 JUMP JUMPDEST DUP3 GT PUSH2 0x28CE JUMPI PUSH1 0x1 SWAP3 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x28C4 JUMPI PUSH2 0x286C PUSH2 0x285E PUSH2 0x2858 DUP4 DUP8 PUSH2 0x2296 JUMP JUMPDEST DUP5 PUSH2 0x27D9 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x2889 PUSH2 0x287C PUSH2 0x285E DUP5 DUP8 PUSH2 0x27D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP2 AND SUB PUSH2 0x28A2 JUMPI PUSH1 0x1 ADD PUSH2 0x283F JUMP JUMPDEST POP SWAP3 POP SWAP1 PUSH1 0x0 JUMPDEST PUSH2 0x28BC JUMPI PUSH2 0x28B6 SWAP1 PUSH2 0x1791 JUMP JUMPDEST SWAP1 PUSH2 0x2826 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x28A9 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28E0 DUP3 PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x28ED PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x28E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1A5A PUSH1 0x1F NOT SWAP2 PUSH2 0x2D8 JUMP JUMPDEST SWAP2 PUSH2 0x2941 PUSH2 0x2924 SWAP3 PUSH2 0x2933 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH2 0x2118 PUSH1 0x20 DUP6 ADD PUSH1 0x1 SWAP1 PUSH1 0x11 PUSH1 0xF9 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH3 0x111D11 PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x3 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x2952 DUP5 MLOAD DUP5 MLOAD SWAP1 PUSH2 0x1729 JUMP JUMPDEST DUP3 GT PUSH2 0x2A96 JUMPI PUSH1 0x1 SWAP3 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2A8C JUMPI PUSH2 0x297D PUSH2 0x285E PUSH2 0x2977 DUP4 DUP8 PUSH2 0x2296 JUMP JUMPDEST DUP9 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0x298D PUSH2 0x287C PUSH2 0x285E DUP5 DUP7 PUSH2 0x27D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 SWAP2 AND SUB PUSH2 0x29A6 JUMPI PUSH1 0x1 ADD PUSH2 0x295E JUMP JUMPDEST POP SWAP3 POP SWAP1 PUSH1 0x0 JUMPDEST PUSH2 0x29C1 JUMPI JUMPDEST PUSH2 0x29BB SWAP1 PUSH2 0x1791 JUMP JUMPDEST SWAP1 PUSH2 0x2945 JUMP JUMPDEST SWAP1 PUSH2 0x29CD DUP4 MLOAD DUP4 PUSH2 0x2296 JUMP JUMPDEST SWAP3 DUP4 JUMPDEST DUP6 MLOAD DUP2 LT DUP1 PUSH2 0x2A68 JUMPI JUMPDEST ISZERO PUSH2 0x29ED JUMPI PUSH2 0x29E8 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x29D0 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 DUP1 DUP3 GT PUSH2 0x2A00 JUMPI POP POP PUSH2 0x29B2 JUMP JUMPDEST SWAP2 POP SWAP3 POP PUSH2 0x2A16 PUSH2 0x2A11 DUP3 DUP6 PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x28D6 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST PUSH2 0x2A24 DUP4 DUP7 PUSH2 0x1729 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2A5F JUMPI DUP3 PUSH1 0x1 DUP3 PUSH2 0x2A48 PUSH2 0x285E PUSH2 0x2A42 PUSH2 0x2A24 SWAP7 DUP7 PUSH2 0x2296 JUMP JUMPDEST DUP12 PUSH2 0x27D9 JUMP JUMPDEST PUSH1 0x0 BYTE PUSH2 0x2A55 DUP3 DUP10 PUSH2 0x27D9 JUMP JUMPDEST MSTORE8 ADD SWAP2 POP POP PUSH2 0x2A1A JUMP JUMPDEST POP SWAP4 POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x2A84 PUSH2 0x285E DUP5 DUP11 PUSH2 0x27D9 JUMP JUMPDEST AND EQ ISZERO PUSH2 0x29DA JUMP JUMPDEST POP SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x29AD JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x34A PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 MLOAD SWAP1 PUSH1 0x20 SWAP1 DUP3 PUSH2 0x2AB9 DUP4 DUP3 ADD DUP1 SWAP4 PUSH2 0x1F5C JUMP JUMPDEST SUB SWAP3 PUSH2 0x2ACD PUSH1 0x1F NOT SWAP5 DUP6 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x28E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 DUP1 MLOAD DUP3 DUP2 ADD SWAP1 PUSH2 0x2B00 DUP2 PUSH2 0x2AF4 DUP5 PUSH1 0x8 SWAP1 PUSH8 0x657468657265756D PUSH1 0xC0 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SUB DUP7 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x28E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x2C19 JUMPI DUP1 MLOAD PUSH8 0x617262697472756D PUSH1 0xC0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x2B2B DUP2 PUSH1 0x8 DUP5 ADD PUSH2 0x2AF4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x2C0F JUMPI DUP1 MLOAD PUSH8 0x6F7074696D69736D PUSH1 0xC0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x2B56 DUP2 PUSH1 0x8 DUP5 ADD PUSH2 0x2AF4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x2C06 JUMPI DUP1 MLOAD PUSH4 0x62617365 PUSH1 0xE0 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x2B7D DUP2 PUSH1 0x4 DUP5 ADD PUSH2 0x2AF4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x2BFC JUMPI DUP1 MLOAD PUSH7 0x3837B63CB3B7B7 PUSH1 0xC9 SHL DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x2BA7 DUP2 PUSH1 0x7 DUP5 ADD PUSH2 0x2AF4 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 EQ PUSH2 0x2BF3 JUMPI PUSH2 0x2BE0 SWAP1 MLOAD SWAP2 DUP3 ADD SWAP3 DUP3 PUSH2 0x2BD4 DUP6 PUSH1 0x9 SWAP1 PUSH9 0x6176616C616E636865 PUSH1 0xB8 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x28E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH2 0x2BED JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0xA86A SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x89 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH2 0x2105 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0xA SWAP1 JUMP JUMPDEST POP POP POP POP PUSH2 0xA4B1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CA4 JUMPI PUSH1 0x0 DUP2 DUP2 DUP2 DUP1 JUMPDEST PUSH2 0x2C8C JUMPI POP PUSH2 0x2C3D DUP2 PUSH2 0x28D6 JUMP JUMPDEST SWAP4 JUMPDEST PUSH2 0x2C49 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2C52 SWAP1 PUSH2 0x170B JUMP JUMPDEST SWAP1 PUSH1 0xA SWAP1 PUSH2 0x2C77 PUSH2 0x2C67 PUSH2 0x25BF DUP5 DUP5 MOD PUSH2 0x227A JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP5 BYTE PUSH2 0x2C83 DUP5 DUP8 PUSH2 0x27D9 JUMP JUMPDEST MSTORE8 DIV SWAP1 DUP2 PUSH2 0x2C3F JUMP JUMPDEST SWAP2 POP PUSH2 0x2C99 PUSH1 0xA SWAP2 PUSH2 0x1791 JUMP JUMPDEST SWAP2 DIV DUP1 DUP5 SWAP3 SWAP2 PUSH2 0x2C2F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2CB1 DUP2 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2CCF JUMPI PUSH1 0xA0 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFE936CB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2CEE DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0x31B7B232A637B1B0BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x2D29 JUMPI JUMP JUMPDEST PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2D3B DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x8 DUP3 MSTORE PUSH8 0x6C616E6775616765 PUSH1 0xC0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 GT ISZERO PUSH2 0x2D29 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2D69 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x736F75726365 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2D8B DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x61726773 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2DAB DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0xF DUP3 MSTORE PUSH15 0x39B2B1B932BA39A637B1B0BA34B7B7 PUSH1 0x89 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2DD6 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x73656372657473 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2DF9 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x627974657341726773 PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2E19 PUSH2 0x3135 JUMP JUMPDEST SWAP1 PUSH2 0x2E2B PUSH2 0x2E25 PUSH2 0x2CE1 JUMP JUMPDEST DUP4 PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x2E48 DUP2 MLOAD PUSH2 0x2E39 DUP2 PUSH2 0x2D1F JUMP JUMPDEST PUSH2 0x2E42 DUP2 PUSH2 0x2D1F JUMP JUMPDEST DUP4 PUSH2 0x3247 JUMP JUMPDEST PUSH2 0x2E53 PUSH2 0x2E25 PUSH2 0x2D2E JUMP JUMPDEST PUSH2 0x2E6D PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2E64 DUP2 PUSH2 0x2D52 JUMP JUMPDEST PUSH2 0x2E42 DUP2 PUSH2 0x2D52 JUMP JUMPDEST PUSH2 0x2E78 PUSH2 0x2E25 PUSH2 0x2D5C JUMP JUMPDEST PUSH2 0x2E86 PUSH1 0x60 DUP3 ADD MLOAD DUP4 PUSH2 0x3185 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD DUP1 MLOAD MLOAD PUSH2 0x2F86 JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD SWAP1 DUP2 MLOAD MLOAD PUSH2 0x2F06 JUMPI JUMPDEST PUSH1 0xC0 SWAP2 POP ADD DUP1 MLOAD MLOAD PUSH2 0x2EB3 JUMPI JUMPDEST POP MLOAD MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2EBF PUSH2 0x2E25 PUSH2 0x2DEC JUMP JUMPDEST PUSH2 0x2EC8 DUP3 PUSH2 0x32E8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2EF3 JUMPI SWAP1 PUSH2 0x2EED PUSH2 0x2EE6 DUP3 PUSH1 0x1 SWAP5 PUSH2 0x1BA7 JUMP JUMPDEST MLOAD DUP6 PUSH2 0x3401 JUMP JUMPDEST ADD PUSH2 0x2ECB JUMP JUMPDEST POP POP SWAP2 POP PUSH2 0x2F00 DUP2 PUSH2 0x3374 JUMP JUMPDEST CODESIZE PUSH2 0x2EAD JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH2 0x2F15 DUP2 PUSH2 0x2D1F JUMP JUMPDEST PUSH2 0x2F1E DUP2 PUSH2 0x2D1F JUMP JUMPDEST ISZERO PUSH2 0x2F74 JUMPI PUSH1 0xC0 SWAP3 PUSH2 0x2F57 PUSH2 0x2F6F SWAP3 PUSH2 0x2F3E PUSH2 0x2F38 PUSH2 0x2D9E JUMP JUMPDEST DUP9 PUSH2 0x3185 JUMP JUMPDEST MLOAD PUSH2 0x2F48 DUP2 PUSH2 0x2D1F JUMP JUMPDEST PUSH2 0x2F51 DUP2 PUSH2 0x2D1F JUMP JUMPDEST DUP7 PUSH2 0x3247 JUMP JUMPDEST PUSH2 0x2F68 PUSH2 0x2F62 PUSH2 0x2DC9 JUMP JUMPDEST DUP7 PUSH2 0x3185 JUMP JUMPDEST MLOAD DUP5 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA80D31F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 PUSH2 0x2F98 PUSH2 0x2F92 PUSH2 0x2D7E JUMP JUMPDEST DUP5 PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x2FA1 DUP4 PUSH2 0x32E8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2FCC JUMPI SWAP1 PUSH2 0x2FC6 PUSH2 0x2FBF DUP3 PUSH1 0x1 SWAP5 PUSH2 0x1BA7 JUMP JUMPDEST MLOAD DUP7 PUSH2 0x3185 JUMP JUMPDEST ADD PUSH2 0x2FA4 JUMP JUMPDEST POP POP SWAP3 POP PUSH2 0x2FD9 DUP3 PUSH2 0x3374 JUMP JUMPDEST CODESIZE PUSH2 0x2E92 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH4 0xFFFFFFFF PUSH2 0x301E PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH4 0x230E93B1 PUSH1 0xE1 SHL DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0xA4 DUP7 ADD SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x44 DUP7 ADD MSTORE SWAP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF25 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x309A JUMPI JUMPDEST POP DUP1 PUSH32 0x1131472297A800FEE664D1D89CFA8F7676FF07189ECC53F80BBB5F4969099DB8 PUSH1 0x0 DUP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x30B3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF1E JUMPI PUSH2 0xF16 DUP2 DUP4 PUSH2 0x28E JUMP JUMPDEST CODESIZE PUSH2 0x3070 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x125FA267 PUSH1 0xE3 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x238 JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x3109 JUMPI PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22CE3EDD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3128 DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH1 0x60 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3141 DUP2 PUSH2 0x23D JUMP JUMPDEST PUSH2 0x3149 PUSH2 0x311B JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP2 MSTORE PUSH2 0x315C PUSH2 0x311B JUMP JUMPDEST POP PUSH2 0x100 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH2 0x120 DUP3 ADD SWAP2 DUP3 LT PUSH2 0x32A JUMPI PUSH1 0x0 SWAP2 PUSH1 0x40 MSTORE MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x31C9 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x31CC JUMPI PUSH2 0x31B4 SWAP2 POP PUSH1 0x60 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x38CF JUMP JUMPDEST POP JUMPDEST MLOAD SWAP1 PUSH2 0x31C0 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD SWAP2 PUSH2 0x3AFF JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x31F1 JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x31E3 DUP4 MLOAD PUSH2 0x36D6 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x3A8B JUMP JUMPDEST POP PUSH2 0x31B6 JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x3210 JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x3208 DUP4 MLOAD PUSH2 0x3671 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x3A1D JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x3231 JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x3229 DUP4 MLOAD PUSH2 0x360C JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x39AD JUMP JUMPDEST PUSH2 0x31EB SWAP1 PUSH2 0x323F DUP4 MLOAD PUSH2 0x359C JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x393A JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH2 0x3253 PUSH2 0x311B JUMP JUMPDEST POP DUP3 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP6 ADD MLOAD DUP2 LT ISZERO PUSH2 0x32AC JUMPI JUMPDEST PUSH1 0xC2 PUSH1 0x20 PUSH2 0x2BC SWAP7 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x32A4 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP3 MSTORE PUSH2 0x329F DUP3 PUSH2 0x23D JUMP JUMPDEST PUSH2 0x3401 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x3287 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP5 DUP3 DUP7 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP2 PUSH2 0x32DE PUSH2 0x2BC SWAP9 PUSH2 0x32D7 PUSH1 0xC2 SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x3485 JUMP JUMPDEST POP DUP3 PUSH2 0x34D7 JUMP JUMPDEST POP SWAP7 POP POP POP PUSH2 0x3270 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x32F3 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3341 JUMPI JUMPDEST PUSH1 0x9F PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x3339 JUMPI JUMPDEST POP POP ADD DUP1 MLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8F1 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x3325 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP2 PUSH2 0x336A DUP3 SWAP8 PUSH2 0x32D7 PUSH1 0x9F SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x3485 JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x3310 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x337F PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x33CE JUMPI JUMPDEST PUSH1 0xFF PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x33C6 JUMPI JUMPDEST POP POP ADD DUP1 MLOAD PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x8F1 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x33B1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP2 PUSH2 0x33F7 DUP3 SWAP8 PUSH2 0x32D7 PUSH1 0xFF SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x3485 JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x339C JUMP JUMPDEST DUP2 MLOAD PUSH2 0x31C9 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x3430 JUMPI PUSH2 0x31B4 SWAP2 POP PUSH1 0x40 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x38CF JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x3447 JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x31E3 DUP4 MLOAD PUSH2 0x386A JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x345E JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x3208 DUP4 MLOAD PUSH2 0x3805 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x3477 JUMPI PUSH2 0x31EB SWAP1 PUSH2 0x3229 DUP4 MLOAD PUSH2 0x37A0 JUMP JUMPDEST PUSH2 0x31EB SWAP1 PUSH2 0x323F DUP4 MLOAD PUSH2 0x373B JUMP JUMPDEST SWAP1 PUSH2 0x348E PUSH2 0x311B JUMP JUMPDEST POP PUSH1 0x1F DUP2 AND DUP1 PUSH2 0x34BD JUMPI JUMPDEST POP DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 MSTORE PUSH1 0x0 DUP3 MSTORE DUP2 ADD PUSH1 0x20 ADD SWAP1 DUP2 LT PUSH2 0x32A JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 SUB PUSH1 0x20 DUP2 GT PUSH2 0x8F1 JUMPI DUP2 ADD DUP1 SWAP2 GT PUSH2 0x8F1 JUMPI CODESIZE PUSH2 0x3499 JUMP JUMPDEST SWAP1 PUSH2 0x34E0 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD SWAP1 PUSH2 0x34EC PUSH2 0x311B JUMP JUMPDEST POP PUSH2 0x34FA DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x3AF8 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH2 0x3508 DUP2 DUP5 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x20 DUP7 ADD MLOAD DUP3 GT PUSH2 0x3585 JUMPI JUMPDEST PUSH1 0x20 SWAP2 DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x357D JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x3555 JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x3571 PUSH2 0x356B PUSH2 0x3577 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2288 JUMP JUMPDEST SWAP5 PUSH2 0x2288 JUMP JUMPDEST SWAP3 PUSH2 0x171A JUMP JUMPDEST SWAP1 PUSH2 0x3530 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x352B JUMP JUMPDEST PUSH2 0x3597 PUSH2 0x3591 DUP4 PUSH2 0x1C09 JUMP JUMPDEST DUP8 PUSH2 0x3BAB JUMP JUMPDEST PUSH2 0x3517 JUMP JUMPDEST PUSH2 0x35A4 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x35DD JUMPI JUMPDEST PUSH1 0x7B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3606 SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP DUP5 PUSH2 0x34D7 JUMP JUMPDEST POP PUSH2 0x35C1 JUMP JUMPDEST PUSH2 0x3614 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3649 JUMPI JUMPDEST PUSH1 0x7A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x366B SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x3679 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x36AE JUMPI JUMPDEST PUSH1 0x79 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x36D0 SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3696 JUMP JUMPDEST PUSH2 0x36DE PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3713 JUMPI JUMPDEST PUSH1 0x78 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3735 SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x36FB JUMP JUMPDEST PUSH2 0x3743 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3778 JUMPI JUMPDEST PUSH1 0x5B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x379A SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3760 JUMP JUMPDEST PUSH2 0x37A8 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x37DD JUMPI JUMPDEST PUSH1 0x5A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x37FF SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x37C5 JUMP JUMPDEST PUSH2 0x380D PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3842 JUMPI JUMPDEST PUSH1 0x59 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3864 SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x382A JUMP JUMPDEST PUSH2 0x3872 PUSH2 0x311B JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x38A7 JUMPI JUMPDEST PUSH1 0x58 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x38C9 SWAP1 PUSH2 0x35FF DUP6 MLOAD SWAP2 DUP7 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x388F JUMP JUMPDEST SWAP1 PUSH2 0x38D8 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP3 LT ISZERO PUSH2 0x390B JUMPI JUMPDEST PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3934 SWAP1 PUSH2 0x392D DUP7 MLOAD SWAP2 DUP8 PUSH2 0x3485 JUMP JUMPDEST POP DUP6 PUSH2 0x34D7 JUMP JUMPDEST POP PUSH2 0x38F5 JUMP JUMPDEST SWAP1 PUSH2 0x3943 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x8 ADD SWAP2 DUP3 PUSH1 0x8 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x3985 JUMPI JUMPDEST PUSH1 0x8 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x39A7 SWAP1 PUSH2 0x392D DUP7 MLOAD SWAP2 DUP8 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3960 JUMP JUMPDEST SWAP1 PUSH2 0x39B6 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x4 ADD SWAP2 DUP3 PUSH1 0x4 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x39F5 JUMPI JUMPDEST PUSH1 0x4 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH4 0xFFFFFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3A17 SWAP1 PUSH2 0x392D DUP7 MLOAD SWAP2 DUP8 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x39D3 JUMP JUMPDEST SWAP1 PUSH2 0x3A26 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x2 ADD SWAP2 DUP3 PUSH1 0x2 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x3A63 JUMPI JUMPDEST PUSH1 0x2 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH2 0xFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3A85 SWAP1 PUSH2 0x392D DUP7 MLOAD SWAP2 DUP8 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3A43 JUMP JUMPDEST SWAP1 PUSH2 0x3A94 PUSH2 0x311B JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x1 ADD SWAP2 DUP3 PUSH1 0x1 GT PUSH2 0x8F1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x3AD0 JUMPI JUMPDEST PUSH1 0x1 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0xFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x35D9 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x3AF2 SWAP1 PUSH2 0x392D DUP7 MLOAD SWAP2 DUP8 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x3AB1 JUMP JUMPDEST ISZERO PUSH2 0x32A JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3B09 PUSH2 0x311B JUMP JUMPDEST POP PUSH2 0x3B17 DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x3AF8 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH1 0x20 PUSH2 0x3B27 DUP3 DUP6 PUSH2 0x2296 JUMP JUMPDEST SWAP3 DUP2 SWAP4 DUP3 DUP8 ADD MLOAD DUP2 GT PUSH2 0x3B94 JUMPI JUMPDEST DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x3B8C JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x3571 PUSH2 0x356B PUSH2 0x3B86 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2288 JUMP JUMPDEST SWAP1 PUSH2 0x3B4B JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x3B46 JUMP JUMPDEST PUSH2 0x3BA6 PUSH2 0x3BA0 DUP3 PUSH2 0x1C09 JUMP JUMPDEST DUP9 PUSH2 0x3BAB JUMP JUMPDEST PUSH2 0x3B35 JUMP JUMPDEST SWAP1 PUSH2 0x31C9 SWAP2 PUSH2 0x3BBC DUP2 MLOAD SWAP3 DUP3 PUSH2 0x3485 JUMP JUMPDEST POP PUSH2 0x34D7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 SWAP6 SSTORE SWAP14 SIGNEXTEND SWAP2 0xAE 0xEB 0xB2 0xE4 DUP10 0xD6 PUSH26 0xA51F3DB2874B723660320D7A20E6E0D37372E664736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"1007:19543:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;1007:19543:21;;;;;;-1:-1:-1;;1007:19543:21;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;:::o;:::-;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;1007:19543:21;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2273:17:7;-1:-1:-1;;;;;1007:19543:21;2251:10:7;:40;2247:90;;2379:3;;;;:::i;:::-;2394:27;-1:-1:-1;2394:27:7;;1007:19543:21;2247:90:7;1007:19543:21;;-1:-1:-1;;;2308:22:7;;1007:19543:21;;2308:22:7;1007:19543:21;;-1:-1:-1;;1007:19543:21;;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;3681:43;1007:19543;;;;;3703:6;1007:19543;;3689:10;:20;3681:43;:::i;:::-;1007:19543;;-1:-1:-1;;;;;1007:19543:21;;;;;;;19814:23;1007:19543;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;19814:23;1007:19543;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;19814:23;1007:19543;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;19814:23;1007:19543;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1007:19543:21;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1007:19543:21;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18682:13;1007:19543;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;;;:::i;:::-;;;;;18682:13;1007:19543;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;-1:-1:-1;1007:19543:21;3030:46;1007:19543;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;3082:48;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1007:19543:21;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;:::i;:::-;3681:43;1007:19543;;;;;3703:6;1007:19543;;3689:10;:20;3681:43;:::i;:::-;19475:42;1007:19543;;-1:-1:-1;;;;1007:19543:21;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;19567:24;1007:19543;;;;;;;;;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1007:19543:21;;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;:::i;:::-;7612:16:14;1007:19543:21;;;;;-1:-1:-1;;;;;1007:19543:21;7590:10:14;:39;;;7586:131;;1007:19543:21;;-1:-1:-1;1007:19543:21;;;;;-1:-1:-1;1007:19543:21;;6648:19;;;1007:19543;;;;6793:12;1007:19543;6793:12;1007:19543;;;;6816:14;6968;6793:45;6938:60;6816:14;:21;:14;;7120:13;6816:14;;:::i;:::-;1007:19543;6808:4;1007:19543;;;;6816:21;6793:45;;:::i;:::-;6857:29;;;;:13;:29;;1007:19543;;4897:13;1007:19543;;;;;;;6857:29;:41;1007:19543;6968:14;:::i;:::-;1007:19543;;;;;;;;;;;;;;6938:60;7120:13;:::i;:::-;1007:19543;;;:::i;:::-;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;7586:131:14;1007:19543:21;;;;7646:64:14;;;;;;7590:10;1007:19543:21;7646:64:14;;1007:19543:21;;;;;7646:64:14;1007:19543:21;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;1007:19543:21;;;;;-1:-1:-1;1007:19543:21;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;-1:-1:-1;1007:19543:21;7590:17;1007:19543;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;7590:17;-1:-1:-1;1007:19543:21;;;-1:-1:-1;1007:19543:21;;;;;;;-1:-1:-1;1007:19543:21;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1007:19543:21;8606:17;1007:19543;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;8606:17;-1:-1:-1;1007:19543:21;;;-1:-1:-1;1007:19543:21;;;;;;;-1:-1:-1;1007:19543:21;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1007:19543:21;;;;;;-1:-1:-1;1007:19543:21;2129:53;1007:19543;;;-1:-1:-1;1007:19543:21;;;;;;;;;2129:53;1007:19543;2129:53;;;1007:19543;;;;2129:53;1007:19543;2129:53;1007:19543;2129:53;;;;1007:19543;:::i;:::-;;;;:::i;:::-;2129:53;;;1007:19543;2129:53;;1007:19543;2129:53;;1007:19543;2129:53;;1007:19543;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;3681:43;1007:19543;;;;;3703:6;1007:19543;;3689:10;:20;3681:43;:::i;:::-;1007:19543;;-1:-1:-1;;;;;1007:19543:21;;;;;;;19691:26;1007:19543;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;19691:26;1007:19543;;;;;;;;;;19691:26;1007:19543;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;19691:26;1007:19543;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;-1:-1:-1;1007:19543:21;;;;;3175:58;1007:19543;;;;;;;3175:58;;;;;1007:19543;;;;;;;;;;;;;;;3175:58;;;;1007:19543;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1007:19543:21;;;;;;:::i;:::-;;;;;;;;;;3703:6;1007:19543;18997:38;;-1:-1:-1;;;;;1007:19543:21;3681:43;;1007:19543;;3689:10;:20;3681:43;:::i;:::-;1007:19543;-1:-1:-1;1007:19543:21;18997:17;1007:19543;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;16353:19;1007:19543;16335:15;1007:19543;16335:15;1007:19543;;;;16326:86;1007:19543;16376:14;1007:19543;-1:-1:-1;16326:86:21;:::i;:::-;16431:37;16335:15;16353:19;1007:19543;;16431:37;1007:19543;;;-1:-1:-1;;;16534:44:21;;1007:19543;16534:44;;1007:19543;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;-1:-1:-1;1007:19543:21;;;;16534:44;1007:19543;;;;;16534:44;:4;-1:-1:-1;16534:4:21;:44;;;;;;;;1007:19543;16534:44;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;1007:19543::-;;;;;;-1:-1:-1;;1007:19543:21;;;;-1:-1:-1;;;;;1007:19543:21;;:::i;:::-;;-1:-1:-1;1007:19543:21;3319:49;1007:19543;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;-1:-1:-1;1007:19543:21;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;:::i;:::-;;;;4862:16;;1007:19543;4862:16;:::i;:::-;;;;;1007:19543;;4862:16;1007:19543;;:::i;:::-;4962:10;1007:19543;;4962:10;4997:15;1007:19543;4924:276;;1007:19543;;4924:276;;1007:19543;4924:276;;;;1007:19543;-1:-1:-1;4924:276:21;;;1007:19543;-1:-1:-1;4924:276:21;;;1007:19543;-1:-1:-1;4924:276:21;;;1007:19543;4897:24;;1007:19543;;4897:13;1007:19543;;;;;;;4897:24;1007:19543;:::i;:::-;5288:22;;;5346:9;;;:::i;:::-;1007:19543;5466:56;1007:19543;;4962:10;5466:56;4962:10;5466:56;;1007:19543;;;;;;;;5466:56;;;;1007:19543;;;;;;;;;;;;;5284:167;5422:17;;;;:::i;:::-;5284:167;;1007:19543;;;;;;-1:-1:-1;;1007:19543:21;;;;;2334:36;1007:19543;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;2294:34;1007:19543;;;;;;;;;;;;;;:::i;:::-;;;16110:19;1007:19543;16092:15;1007:19543;16092:15;1007:19543;;;;16133:14;1007:19543;-1:-1:-1;1007:19543:21;;;;;;:::i;:::-;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1007:19543:21;;;;3681:43;1007:19543;;;;;3703:6;1007:19543;;3689:10;:20;3681:43;:::i;:::-;1007:19543;;18857:28;1007:19543;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;1136:10:9;:28;1007:19543:21;;;;-1:-1:-1;;;;;1007:19543:21;;;;-1:-1:-1;;;;;;1007:19543:21;1136:10:9;1007:19543:21;;;1136:10:9;1150:14;1007:19543:21;;-1:-1:-1;;;;;;1007:19543:21;;;1136:10:9;1007:19543:21;;1295:42:9;;;;1007:19543:21;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;:::i;:::-;-1:-1:-1;1007:19543:21;-1:-1:-1;;;;;1007:19543:21;;;;8155:10:14;:21;;;;:64;;1007:19543:21;8151:162:14;;8318:1;;;:::i;8151:162::-;1007:19543:21;;;8288:16:14;1007:19543:21;;;;8236:70:14;;;;;;8155:10;1007:19543:21;8236:70:14;;1007:19543:21;;;;;;;;;8236:70:14;8155:64;1007:19543:21;;8202:16:14;1007:19543:21;;8155:10:14;8180:39;;8155:64;;1007:19543:21;;;;;;-1:-1:-1;;1007:19543:21;;;;;2259:29;1007:19543;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;6077:45:14;1007:19543:21;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;;;;;;;;;3681:43;1007:19543;;;;;3703:6;1007:19543;;3689:10;:20;3681:43;:::i;:::-;1007:19543;;19203:33;1007:19543;;;19246:19;1007:19543;;;19275:37;1007:19543;;;19275:37;1007:19543;-1:-1:-1;1007:19543:21;;;;;;;;-1:-1:-1;;1007:19543:21;;;;3619:6;1007:19543;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;3465:10;;-1:-1:-1;1007:19543:21;3447:17;1007:19543;;;;-1:-1:-1;1007:19543:21;;;3447:53;;;;1007:19543;;;;;17096:1421;;;;:::i;:::-;1007:19543;;;;;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;3447:53;-1:-1:-1;3494:6:21;1007:19543;-1:-1:-1;;;;;1007:19543:21;3465:10;3480:20;3447:53;;1007:19543;;;;;;-1:-1:-1;;1007:19543:21;;;;;;-1:-1:-1;1007:19543:21;3239:47;1007:19543;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;20525:16;1007:19543;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;:::i;:::-;-1:-1:-1;1007:19543:21;-1:-1:-1;;;;;1007:19543:21;;;;1918:10:9;:21;;;1007:19543:21;;;1918:10:9;;1649:16;;1007:19543:21;;1700:19:9;1007:19543:21;;-1:-1:-1;;;;;;1007:19543:21;;;;;1731:39:9;-1:-1:-1;;1731:39:9;1007:19543:21;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1007:19543:21;19814:23;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1007:19543:21;19691:26;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1007:19543:21;-1:-1:-1;1007:19543:21;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;;;:::o;:::-;-1:-1:-1;;1007:19543:21;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;;1007:19543:21;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14263:1;1007:19543;;:::o;7831:276:14:-;-1:-1:-1;;;;;1007:19543:21;7931:29:14;;7927:70;;1007:19543:21;;8071:31:14;1007:19543:21;;;;8002:57:14;1007:19543:21;;;8002:57:14;1007:19543:21;;;;;;8071:31:14;7831:276::o;7927:70::-;1007:19543:21;;-1:-1:-1;;;7977:13:14;;;;;1007:19543:21;;;;:::o;:::-;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;:::o;:::-;;;8376:1;1007:19543;;;;;;;:::o;:::-;;;8340:19;1007:19543;;;;;;;:::o;:::-;;;7373:13;1007:19543;;;;;;;:::o;:::-;;;8601:1;1007:19543;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;1007:19543:21;;;;;;-1:-1:-1;;;1007:19543:21;;;;-1:-1:-1;;1007:19543:21;;;;;;;;-1:-1:-1;1007:19543:21:o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;3138:1:12;1007:19543:21;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;1007:19543:21;-1:-1:-1;1007:19543:21;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;17096:1421;;;;;17279:41;;;:62;;;17096:1421;17271:95;;;:::i;:::-;17376:60;17401:2;17384:19;;;17376:60;:::i;:::-;17514:28;;;:::i;:::-;17625:13;17637:1;17640:17;;;;;;1007:19543;;;;;;;17823:49;18150:58;;18197:10;18150:58;18197:10;18150:58;18197:10;18180:15;18150:58;;;:::i;:::-;;1007:19543;;18150:58;;;;;;:::i;:::-;1007:19543;18140:69;;1007:19543;;18281:16;;1007:19543;18281:16;:::i;:::-;;;;4862;1007:19543;;18281:16;18307:32;;1007:19543;;18307:21;1007:19543;;;;;;;18307:32;1007:19543;:::i;:::-;18363:37;:30;;1007:19543;;18363:14;1007:19543;;;;;;;18363:30;1007:19543;;-1:-1:-1;;1007:19543:21;18056:4;1007:19543;;;;18363:37;18424:46;1007:19543;;18424:46;;;;1007:19543;;;;;;;18056:4;1007:19543;;;;;18424:46;;;;17096:1421;:::o;17659:3::-;17701:9;17678:88;17686:47;1007:19543;17701:9;1007:19543;17701:9;;;;:::i;:::-;1007:19543;17712:20;;;;;;;;:::i;:::-;1007:19543;;;;;;:::i;:::-;;;;;:::i;:::-;17686:47;;:::i;:::-;17678:88;:::i;:::-;18027:33;:26;17823:49;1007:19543;17840:9;;;;;:::i;:::-;17851:20;;1007:19543;17851:20;;;;;:::i;:::-;1007:19543;;17823:49;;;;;;1007:19543;;;;:::i;:::-;;;:::i;17823:49::-;1007:19543;17813:60;;17887:73;17895:27;17896:26;;;1007:19543;;17896:15;1007:19543;;;;;;;17896:26;1007:19543;;;;;17896:26;17895:27;;1007:19543;17895:27;17887:73;:::i;:::-;17987:26;;;;;:::i;:::-;1007:19543;;;17896:15;1007:19543;;;;;;;18027:33;1007:19543;17625:13;;17279:62;-1:-1:-1;17324:17:21;;;17279:62;;1007:19543;;;;:::o;:::-;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1007:19543:21;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1007:19543:21;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1007:19543:21;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1007:19543:21;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1007:19543:21;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;9926:3304::-;;10102:36;;1007:19543;;10102:25;1007:19543;;;;;;;10102:36;1007:19543;10156:19;10148:57;10156:19;;;10148:57;:::i;:::-;1007:19543;;10216:197;;1007:19543;13173:50;1007:19543;13173:50;1007:19543;10609:39;1007:19543;;:::i;:::-;10609:39;;:::i;:::-;10698:29;;1007:19543;;4897:13;1007:19543;;;;;;;10698:29;10737:19;;;1007:19543;;-1:-1:-1;;1007:19543:21;18056:4;1007:19543;;;10737:19;;10782:2368;;;11857:46;1007:19543;10881:44;1007:19543;;:::i;:::-;10881:44;;:::i;:::-;1007:19543;;;11066:39;1007:19543;;:::i;:::-;11066:39;;:::i;:::-;11157:47;1007:19543;;:::i;:::-;11157:47;;:::i;:::-;1007:19543;;11243:27;;:66;;;10952:2067;11239:1243;;;11682:22;1007:19543;11857:46;1007:19543;;;11592:46;10102:25;1007:19543;;;11592:46;;;1007:19543;11592:46;;;1007:19543;;;:::i;:::-;;;:::i;11592:46::-;1007:19543;11582:57;;11682:22;;;1007:19543;;;;;;;;;;11682:22;11726:17;1007:19543;11777:32;:25;;1007:19543;;18363:14;1007:19543;;;;;;;11777:32;1007:19543;;11857:46;;;;1007:19543;;;;;;;18056:4;1007:19543;;;;;11857:46;;;;11239:1243;1007:19543;;13173:50;;;;;:::i;:::-;;;;9926:3304::o;11239:1243::-;1007:19543;;12417:46;1007:19543;10102:25;12242:22;1007:19543;12053:46;1007:19543;;:::i;:::-;12053:46;;:::i;:::-;1007:19543;;12151:47;;;;;;12182:15;;12151:47;;;:::i;12417:46::-;;;;11239:1243;;11243:66;1007:19543;;;11274:35;;11243:66;;10952:2067;12958:46;1007:19543;10102:25;12799:22;1007:19543;12622:46;1007:19543;;:::i;10782:2368::-;1007:19543;;-1:-1:-1;;1007:19543:21;;;-1:-1:-1;13091:48:21;1007:19543;;13091:48;;;1007:19543;10174:1;1007:19543;;;;;;;;;;;10216:197;10345:37;10278:29;;:48;:41;:29;10345:37;10278:29;1007:19543;;4897:13;1007:19543;;;;;;;10278:29;:41;1007:19543;;-1:-1:-1;;1007:19543:21;18056:4;1007:19543;;;;10278:48;1007:19543;;10345:37;;;;;:::i;1007:19543::-;;;;;;:::o;:::-;20344:2;1007:19543;;;20344:2;1007:19543;;;:::o;:::-;;3084:12:12;1007:19543:21;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;1007:19543:21;;-1:-1:-1;1007:19543:21;;;;-1:-1:-1;1007:19543:21;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;8291:1;1007:19543;;;-1:-1:-1;1007:19543:21;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;7245:1818::-;;8982:74;7245:1818;7373:29;;1007:19543;;4897:13;1007:19543;;;;;;;7373:29;1007:19543;;:::i;:::-;;;7621:25;7617:411;;7245:1818;8757:16;8731:154;1007:19543;4508:16:5;1007:19543:21;;:::i;:::-;4508:16:5;;;:::i;:::-;8686:4:21;8340:19;8278:15;;:::i;:::-;8340:19;;1007:19543;8313:48;8329:31;1007:19543;;;:::i;:::-;8329:31;:::i;:::-;8313:48;:::i;:::-;8303:58;;;:::i;:::-;;;;;:::i;:::-;;1007:19543;8388:56;8410:28;;;:::i;:::-;1007:19543;;;8388:56;;;1007:19543;8388:56;;;1007:19543;;-1:-1:-1;;;1007:19543:21;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;8388:56;8371:74;;;:::i;:::-;;;;;:::i;:::-;;8481:28;;1007:19543;8497:11;1007:19543;;;;;;;;;;8481:28;8471:38;;;:::i;:::-;;;;;:::i;:::-;;8529:30;8545:13;8529:30;:::i;:::-;8519:40;;;:::i;:::-;;;;;:::i;:::-;;1007:19543;;:::i;:::-;8596:27;;;:::i;:::-;;;;;:::i;:::-;;8686:4;;:::i;:::-;8757:16;:::i;:::-;8787:25;1007:19543;8859:16;1007:19543;;-1:-1:-1;;;;;1007:19543:21;;;;;;;;;8731:154;;:::i;:::-;8896:45;;;1007:19543;;10102:25;1007:19543;;;;;;;8896:45;1007:19543;8982:74;1007:19543;;8982:74;;;;;:::i;7617:411::-;1007:19543;8731:154;8757:16;1007:19543;;:::i;:::-;7617:411;;;;;1007:19543;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5649:733::-;5744:16;1007:19543;-1:-1:-1;;1007:19543:21;;5744:488;;-1:-1:-1;;;;;1007:19543:21;5855:9;1007:19543;5889:16;1007:19543;5793:429;5945:22;1007:19543;;;6088:119;1007:19543;;:::i;:::-;;;;6088:119;:::i;:::-;1007:19543;;;:::i;:::-;;;;5793:429;;;1007:19543;;;;;;5793:429;;;1007:19543;;;;;;5793:429;;;1007:19543;;;;5793:429;;;1007:19543;;;;;;5793:429;;;;1007:19543;5793:429;1007:19543;;;;;;;;;;5744:488;;;;;;:::i;:::-;;;;;;;;;6310:48;5744:488;-1:-1:-1;5744:488:21;;;5649:733;6310:48;1007:19543;;10102:25;1007:19543;;;;;;;6310:48;1007:19543;5649:733::o;5744:488::-;;;;1007:19543;5744:488;1007:19543;5744:488;;;;;;;:::i;:::-;;;;15525:371;1007:19543;15714:17;:45;;;;;15525:371;15710:63;;;15885:4;15525:371;:::o;15710:63::-;15730:1;15761:12;:::o;15714:45::-;1007:19543;;;15735:24;15714:45;;;1007:19543;;;;;;;;;;;;;:::o;13302:623::-;1007:19543;;-1:-1:-1;;;13487:36:21;;;1007:19543;13302:623;;13487:36;;1007:19543;;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;13487:36;13558:1;13544:353;13602:3;13566:34;1007:19543;;;;13566:34;;:::i;:::-;13561:39;;;;13636:4;13659:10;13558:1;13692:3;1007:19543;;13671:19;;;;;13719:16;;13729:5;;;;:::i;:::-;13719:16;;:::i;:::-;1007:19543;-1:-1:-1;;;;;;1007:19543:21;;;13719:16;:31;13739:11;;;;;:::i;:::-;-1:-1:-1;;;;;;1007:19543:21;;;13719:31;-1:-1:-1;;;;;;1007:19543:21;;;13719:31;13715:120;;13636:4;1007:19543;13659:10;;13715:120;13774:15;;;;13558:1;13654:195;13862:24;;13602:3;;;:::i;:::-;13549:10;;;13862:24;13875:11;;;13636:4;13875:11;:::o;13671:19::-;;;;;;;;13561:39;;;;13558:1;13302:623;:::o;1007:19543::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;13996:1361::-;;14195:33;1007:19543;13996:1361;1007:19543;;;14195:33;;;1007:19543;14195:33;;;1007:19543;;;;;;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;;14195:33;1007:19543;;14195:33;;;;;;:::i;:::-;14263:1;14249:1083;14310:3;14271:37;1007:19543;;;;14271:37;;:::i;:::-;14266:42;;;;14344:4;14367:10;14263:1;14403:3;1007:19543;;14379:22;;;;;14430:16;;14440:5;;;;:::i;:::-;14430:16;;:::i;:::-;:34;14450:14;;;;;:::i;14430:34::-;-1:-1:-1;;;;;;1007:19543:21;;;14430:34;14426:123;;14344:4;1007:19543;14367:10;;14426:123;14488:15;;;;14263:1;14362:201;14576:746;;14362:201;14310:3;;;:::i;:::-;14254:10;;;14576:746;1007:19543;14681:22;1007:19543;;14681:22;;:::i;:::-;14721:26;;14824:117;1007:19543;;14831:27;;:57;;;14824:117;14831:57;;;14912:10;;;:::i;:::-;14824:117;;14831:57;;;;;;14979:21;;;14975:333;;14576:746;;;;14975:333;15060:21;;;;15050:32;15060:21;;;;:::i;:::-;15050:32;:::i;:::-;15109:10;14263:1;15148:3;15125:21;;;;:::i;:::-;15121:25;;;;;15205:14;14344:4;15205:14;15195:25;;15205:14;15125:21;15205:14;;;:::i;:::-;15195:25;;:::i;:::-;14263:1;15179:41;;;;;:::i;:::-;;1007:19543;15109:10;;;;;15121:25;;;;;;;15264;:::o;14831:57::-;-1:-1:-1;;;;;;;;;;14862:19:21;;;;;:::i;:::-;1007:19543;14862:26;;14831:57;;14379:22;;;;;;;;14266:42;;;;;1007:19543;;:::i;9145:696::-;1007:19543;;;;9262:27;;;;1007:19543;9262:27;;;1007:19543;;;:::i;:::-;9262:27;1007:19543;9262:27;1007:19543;;9262:27;;;;;;;;:::i;:::-;1007:19543;9252:38;;1007:19543;;;9336:28;;;1007:19543;9336:28;1007:19543;;;;;-1:-1:-1;;;1007:19543:21;;;;;;9336:28;;;;;;;;:::i;:::-;1007:19543;9326:39;;9313:52;;9309:66;;1007:19543;;-1:-1:-1;;;9412:28:21;;;1007:19543;;;9412:28;;1007:19543;;;;;;9412:28;1007:19543;9402:39;;9389:52;;9385:70;;1007:19543;;-1:-1:-1;;;9492:28:21;;;1007:19543;;;9492:28;;1007:19543;;;;;;9492:28;1007:19543;9482:39;;9469:52;;9465:67;;1007:19543;;-1:-1:-1;;;9569:24:21;;;1007:19543;;;9569:24;;1007:19543;;;;;;9569:24;1007:19543;9559:35;;9546:48;;9542:65;;1007:19543;;-1:-1:-1;;;9644:27:21;;;1007:19543;;;9644:27;;1007:19543;;;;;;9644:27;1007:19543;9634:38;;9621:51;;9617:67;;9721:29;1007:19543;;9721:29;;;1007:19543;;;;;;-1:-1:-1;;;1007:19543:21;;;;;;9721:29;;;;;;;;:::i;:::-;1007:19543;9711:40;;9698:53;9694:71;;9833:1;9145:696;:::o;9694:71::-;9760:5;9753:12;:::o;9617:67::-;9674:10;;;;9681:3;9674:10;:::o;9542:65::-;9596:11;;;;9603:4;9596:11;:::o;9465:67::-;9523:9;;;;9530:2;9523:9;:::o;9385:70::-;9443:12;;;;9450:5;9443:12;:::o;9309:66::-;9367:8;;;;9374:1;9367:8;:::o;19921:522::-;20013:10;;20009:51;;20022:1;20069:20;20022:1;20069:20;;20130:9;;;20229:17;;;;:::i;:::-;20256:150;20263:10;;;20415:21;;;19921:522;:::o;20256:150::-;20289:11;;;:::i;:::-;20185:2;;1007:19543;20331:39;20338:31;20344:24;1007:19543;;;20344:24;:::i;20338:31::-;1007:19543;;-1:-1:-1;;;;;;1007:19543:21;;;20331:39;20314:56;;;;;;:::i;:::-;;1007:19543;20256:150;;;;20123:75;20155:8;;;20185:2;20155:8;;:::i;:::-;1007:19543;;20123:75;;;;;;20009:51;1007:19543;;;;;;:::i;:::-;;;;-1:-1:-1;;;1007:19543:21;;;;20039:10;:::o;5827:148:5:-;1007:19543:21;;5911:16:5;5907:40;;5954:9;;:16;5827:148::o;5907:40::-;1007:19543:21;;-1:-1:-1;;;5936:11:5;;;;;375:3;1007:19543:21;;;;;;:::i;:::-;375:3:5;1007:19543:21;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;1007:19543:21;;;375:3:5;;;;;;;;;;-1:-1:-1;375:3:5;;;:::o;:::-;;:::i;:::-;1007:19543:21;;;;;;:::i;:::-;375:3:5;1007:19543:21;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;;-1:-1:-1;375:3:5;;;:::o;:::-;1007:19543:21;;;;;;:::i;:::-;375:3:5;1007:19543:21;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;1007:19543:21;;;;;;:::i;:::-;375:3:5;1007:19543:21;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;1007:19543:21;;;;;;:::i;:::-;375:3:5;1007:19543:21;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;1007:19543:21;;;;;;:::i;:::-;375:3:5;1007:19543:21;;-1:-1:-1;;;375:3:5;;;;:::o;:::-;1007:19543:21;;;;;;:::i;:::-;375:3:5;1007:19543:21;;-1:-1:-1;;;375:3:5;;;;:::o;2158:1270::-;2274:32;;:::i;:::-;375:3;2313:34;375:3;;:::i;:::-;2313:34;;:::i;:::-;2373:26;375:3;;;;;:::i;:::-;;;;:::i;:::-;2373:26;;:::i;:::-;2407:30;375:3;;:::i;2407:30::-;2463:22;2471:13;;;375:3;;;;:::i;:::-;;;;:::i;2463:22::-;2493:28;375:3;;:::i;2493:28::-;2546:11;;;;;;;:::i;:::-;2569:9;;;;;1007:19543:21;2565:227:5;;2158:1270;2802:30;;;;;;;1007:19543:21;2798:346:5;;2158:1270;3154:14;;;;;;1007:19543:21;3150:246:5;;2158:1270;3409:10;;:14;2158:1270;:::o;3150:246::-;375:3;3189:31;375:3;;:::i;3189:31::-;3228:17;;;:::i;:::-;-1:-1:-1;3302:3:5;3279:14;;1007:19543:21;;3275:25:5;;;;;3335:17;;;;1007:19543:21;3335:17:5;;:::i;:::-;;;;:::i;:::-;1007:19543:21;3260:13:5;;3275:25;;;;;3369:18;;;:::i;:::-;3150:246;;;2798:346;2857:20;;;375:3;;;;;:::i;:::-;;;;:::i;:::-;2857:39;2853:88;;3154:14;375:3;3013:29;3106:30;375:3;2948:37;375:3;;:::i;:::-;2948:37;;:::i;:::-;375:3;;;;:::i;:::-;;;;:::i;:::-;3013:29;;:::i;:::-;3051;375:3;;:::i;:::-;3051:29;;:::i;:::-;3106:30;;;:::i;:::-;2798:346;;2853:88;2471:13;1007:19543:21;-1:-1:-1;;;2915:17:5;;;;;2565:227;375:3;2599:26;375:3;;:::i;:::-;2599:26;;:::i;:::-;2633:17;;;:::i;:::-;-1:-1:-1;2702:3:5;2684:9;;1007:19543:21;;2680:20:5;;;;;2736:12;;;;1007:19543:21;2736:12:5;;:::i;:::-;;;;:::i;:::-;1007:19543:21;2665:13:5;;2680:20;;;;;2765:18;;;:::i;:::-;2565:227;;;1200:388:7;;;1377:151;1200:388;-1:-1:-1;;;;;1200:388:7;1007:19543:21;322:1:5;1007:19543:21;;;;;;;;;;1377:151:7;;1007:19543:21;1377:151:7;;;322:1:5;;;;;;;;;;;:::i;:::-;;;;;1007:19543:21;;;322:1:5;;;1007:19543:21;322:1:5;;;1007:19543:21;1377:151:7;1007:19543:21;-1:-1:-1;1377:17:7;-1:-1:-1;;;;;1007:19543:21;1377:151:7;;;;;;;-1:-1:-1;1377:151:7;;;1200:388;1539:22;;;-1:-1:-1;1539:22:7;;1200:388;:::o;1377:151::-;;;;;;;;;;;;;;:::i;:::-;;;;475:163:18;1007:19543:21;;;;;;581:52:18;;;;204:36;1007:19543:21;;581:52:18;;;1007:19543:21;581:52:18;;;1007:19543:21;;;;;;-1:-1:-1;;;;;1007:19543:21;;;;;;;475:163:18;:::o;3777:307:5:-;1007:19543:21;;3937:25:5;3933:51;;-1:-1:-1;1007:19543:21;;;4029:13:5;;;1007:19543:21;4059:11:5;;:20;3777:307::o;3933:51::-;1007:19543:21;;-1:-1:-1;;;3971:13:5;;;;;1007:19543:21;;;;;;;:::i;:::-;-1:-1:-1;1007:19543:21;;;;;;;:::o;1490:173:13:-;1007:19543:21;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;1007:19543:21;;;;:::i;:::-;;375:3:5;1007:19543:21;1251:12:12;;1007:19543:21;;1284:265:12;;;;-1:-1:-1;1284:265:12;;;;;;;;;;-1:-1:-1;1284:265:12;1007:19543:21;1284:265:12;1007:19543:21;1490:173:13;:::o;3021:204::-;1007:19543:21;;4648:30:12;;3021:204:13;;-1:-1:-1;;;;;1007:19543:21;;;6299:2:13;6290:11;;6299:2;;6317:48;:7;;1007:19543:21;;6317:7:13;;1007:19543:21;;;6317:48:13;;:::i;:::-;;6286:623;3190:7;1007:19543:21;;;:::i;:::-;;;;4648:30:12;;:::i;:::-;;3021:204:13:o;6286:623::-;-1:-1:-1;6395:4:13;6386:13;;6395:4;;6474:27;6415:7;:45;:7;;:45;:::i;:::-;;6474:7;;:27;:::i;:::-;;6286:623;;6382:527;6531:6;6522:15;;6531:6;;6612:27;6553:7;:45;:7;;:45;:::i;:::-;;6612:7;;:27;:::i;6518:391::-;6669:10;6660:19;;6669:10;;6754:27;6695:7;:45;:7;;:45;:::i;:::-;;6754:7;;:27;:::i;6656:253::-;6871:27;6812:7;:45;:7;;:45;:::i;:::-;;6871:7;;:27;:::i;1832:202::-;;1916:7;;1007:19543:21;;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;1832:202:13;1942:39;5128:12:12;2009:17:13;5204:416:12;;;;;;;;;;;;;1832:202:13;1007:19543:21;;;;2009:17:13;5128:12:12;2009:17:13;;1007:19543:21;5128:12:12;2009:17:13;;;;;:::i;:::-;;:::i;5204:416:12:-;;;;;;5117:77;1007:19543:21;5106:1:12;1007:19543:21;;;;;5181:1:12;1007:19543:21;;;;;;;5128:12:12;2099:7;2145:19;2009:17:13;2099:7:12;2116:19;1942:39:13;2099:7:12;;2116:19;;;:::i;:::-;;2145;;:::i;:::-;;5117:77;;;;;;3607:146:13;7035:7;;1007:19543:21;;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;3607:146:13;7061:17;5128:12:12;5204:416;;;;;;;;;;;;;;3607:146:13;3732:9;;;1007:19543:21;;;5106:1:12;1007:19543:21;;;;;;;;3607:146:13:o;5204:416:12:-;;;;;;5117:77;1007:19543:21;5106:1:12;1007:19543:21;;;;;5181:1:12;1007:19543:21;;;;;;;5128:12:12;2099:7;2145:19;2099:7;;2116:19;7061:17:13;2099:7:12;;2116:19;;;:::i;2145:::-;;5117:77;;;;;;4211:154:13;7035:7;;1007:19543:21;;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;4211:154:13;1007:19543:21;5128:12:12;5204:416;;;;;;;;;;;;;;4211:154:13;-1:-1:-1;;4344:9:13;1007:19543:21;;-1:-1:-1;;1007:19543:21;;;4344:9:13;1007:19543:21;;;;;4211:154:13:o;5204:416:12:-;;;;;;5117:77;1007:19543:21;5106:1:12;1007:19543:21;;;;;5181:1:12;1007:19543:21;;;;;;;5128:12:12;2099:7;2145:19;2099:7;;2116:19;1007:19543:21;2099:7:12;;2116:19;;;:::i;2145:::-;;5117:77;;;;;;2828:187:13;1007:19543:21;;4648:30:12;;2828:187:13;;-1:-1:-1;;;;;1007:19543:21;;;6299:2:13;6290:11;;6299:2;;6317:48;:7;;1007:19543:21;;6317:7:13;;1007:19543:21;;;6317:48:13;;:::i;6286:623::-;-1:-1:-1;6395:4:13;6386:13;;6395:4;;6474:27;6415:7;:45;:7;;:45;:::i;6382:527::-;6531:6;6522:15;;6531:6;;6612:27;6553:7;:45;:7;;:45;:::i;6518:391::-;6669:10;6660:19;;6669:10;;6754:27;6695:7;:45;:7;;:45;:::i;6656:253::-;6871:27;6812:7;:45;:7;;:45;:::i;1020:555:12:-;;1007:19543:21;;:::i;:::-;;;;;1119:18:12;1115:81;;1020:555;1251:12;;1130:2;1251:12;;1007:19543:21;1284:265:12;;;;;;-1:-1:-1;1284:265:12;;;;1130:2;1284:265;;;;;;;;1020:555;:::o;1115:81::-;1130:2;1007:19543:21;1130:2:12;1007:19543:21;;;;;;;;;;;1115:81:12;;;4539:146;;1007:19543:21;;:::i;:::-;;;;;;;:::i;:::-;;2955:27:12;1007:19543:21;;2963:18:12;;;2955:27;:::i;:::-;3004:7;;1007:19543:21;3047:9:12;;;;;:::i;:::-;3084:12;;;;;1007:19543:21;3070:26:12;;3066:85;;4539:146;3084:12;3161:9;3198:507;;;;;;;;;;;;;;4539:146;3198:507;;;3765:165;3772:9;;;;;;;1007:19543:21;;;;3084:12:12;1007:19543:21;4009:3:12;1007:19543:21;;4045:189:12;;;;;;;;;;;;;4539:146;:::o;3783:9::-;3808:65;;;3910:9;3886:10;3783:9;3808:65;;;;;3886:10;:::i;:::-;3910:9;;:::i;:::-;3783;;:::i;:::-;3765:165;;;3198:507;;;;;;3066:85;3124:15;;;;:::i;:::-;;;:::i;:::-;3066:85;;4948:699;1007:19543:21;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;4948:699;6838:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5204:416::-;;4948:699;:::o;5117:77::-;1007:19543:21;5106:1:12;1007:19543:21;;;;5181:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;:::-;;2145;;:::i;:::-;;5117:77;;4948:699;1007:19543:21;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;4948:699;6721:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;1007:19543:21;5106:1:12;1007:19543:21;;;;5181:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;1007:19543:21;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;4948:699;6579:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;1007:19543:21;5106:1:12;1007:19543:21;;;;5181:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;1007:19543:21;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;4948:699;6441:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;1007:19543:21;5106:1:12;1007:19543:21;;;;5181:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;1007:19543:21;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;4948:699;6838:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;1007:19543:21;5106:1:12;1007:19543:21;;;;5181:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;1007:19543:21;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;4948:699;6721:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;1007:19543:21;5106:1:12;1007:19543:21;;;;5181:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;1007:19543:21;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;4948:699;6579:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;1007:19543:21;5106:1:12;1007:19543:21;;;;5181:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;1007:19543:21;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;4948:699;6441:17:13;5128:12:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;1007:19543:21;5106:1:12;1007:19543:21;;;;5181:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;;1007:19543:21;;:::i;:::-;;5058:7:12;;1007:19543:21;5106:1:12;1007:19543:21;;;;;;;;5128:12:12;;;1007:19543:21;5121:19:12;;;5117:77;;4948:699;5128:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;1007:19543:21;5106:1:12;1007:19543:21;;;;5181:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;:::-;;2145;;:::i;:::-;;5117:77;;8083:795;;1007:19543:21;;:::i;:::-;;8200:7:12;;1007:19543:21;;6896:1:13;1007:19543:21;;;6896:1:13;1007:19543:21;;;8280:12:12;;;1007:19543:21;8266:26:12;;8262:85;;8083:795;6896:1:13;8395:457:12;;;;;;;-1:-1:-1;;;;;8395:457:12;;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;1007:19543:21;;;;;;8334:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;8083:795;;1007:19543:21;;:::i;:::-;;8200:7:12;;1007:19543:21;;6779:1:13;1007:19543:21;;;6779:1:13;1007:19543:21;;;8280:12:12;;;1007:19543:21;8266:26:12;;8262:85;;8083:795;6779:1:13;8395:457:12;;;;;;1007:19543:21;;;8395:457:12;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;1007:19543:21;;;;;;8334:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;8083:795;;1007:19543:21;;:::i;:::-;;8200:7:12;;1007:19543:21;;6637:1:13;1007:19543:21;;;6637:1:13;1007:19543:21;;;8280:12:12;;;1007:19543:21;8266:26:12;;8262:85;;8083:795;6637:1:13;8395:457:12;;;;;;;;;;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;1007:19543:21;;;;;;6637:1:13;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;8083:795;;1007:19543:21;;:::i;:::-;;8200:7:12;;1007:19543:21;;6499:1:13;1007:19543:21;;;6499:1:13;1007:19543:21;;;8280:12:12;;;1007:19543:21;8266:26:12;;8262:85;;8083:795;6499:1:13;8395:457:12;;;;;;1007:19543:21;;;8395:457:12;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;1007:19543:21;6499:1:13;1007:19543:21;;;;8334:1:12;1007:19543:21;;;;;;;2145:19:12;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;1007:19543:21;;;;:::o;2844:1427:12:-;;;1007:19543:21;;:::i;:::-;;2955:27:12;1007:19543:21;;2963:18:12;;;2955:27;:::i;:::-;3004:7;;1007:19543:21;3047:9:12;3084:12;3047:9;;;;:::i;:::-;3084:12;;;;;;1007:19543:21;3070:26:12;;3066:85;;2844:1427;3198:507;;;;;;;;;;;;;;2844:1427;3198:507;;;3765:165;3772:9;;;;;;;1007:19543:21;;;;3084:12:12;1007:19543:21;4009:3:12;1007:19543:21;;4045:189:12;;;;;;;;;;;;;2844:1427;:::o;3783:9::-;3808:65;;;3910:9;3886:10;3783:9;3808:65;;;;;3886:10;:::i;3783:9::-;3765:165;;;3198:507;;;;;;3066:85;3124:15;;;;:::i;:::-;;;:::i;:::-;3066:85;;2004:167;;2145:19;2004:167;2116:19;2099:7;;2116:19;;;:::i;:::-;;2145;:::i"},"methodIdentifiers":{"acceptOwnership()":"79ba5097","aggregateProofs(bytes[],bytes[])":"d175d81a","aggregatedProofHashes(uint256,uint256)":"39a9e4b3","authorizedCallers(address)":"536fff6c","checkUpkeep(bytes)":"6e04ff0d","contractOwner()":"ce606ee0","functionsRequestToProofId(bytes32)":"56959332","getProofRequest(uint256)":"152a9526","getSubscriptionId()":"de3d9fb7","groth16Verifier()":"19c813be","handleOracleFulfillment(bytes32,bytes,bytes)":"0ca76175","isStateVerified(bytes32)":"a9431f23","lastUpkeepTimestamp()":"624cffd4","owner()":"8da5cb5b","performUpkeep(bytes)":"4585e33b","proofRequests(uint256)":"25825746","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","requestCounter()":"973a814e","requestProofVerification(string,uint256)":"57efe032","s_vrfCoordinator()":"9eccacf6","setAuthorizedCaller(address,bool)":"454bbd29","setCoordinator(address)":"8ea98117","setFunctionsConfig(uint64,uint32,bytes32)":"1bd6447a","setFunctionsSource(string)":"36e0025f","setProofServiceUrl(string)":"1098241b","setUpkeepInterval(uint256)":"72e4c9f6","setVRFConfig(uint256,bytes32,uint32)":"b5cce133","transferOwnership(address)":"f2fde38b","upkeepInterval()":"5a74373c","usedProofHashes(bytes32)":"d87318b2","verifiedProofs(bytes32)":"176d80c4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"functionsRouter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vrfSubscriptionId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"vrfKeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"functionsSubscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"functionsDonId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"groth16VerifierAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EmptyArgs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySource\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoInlineSecrets\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyRouterCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"error\",\"type\":\"bytes\"}],\"name\":\"FunctionsRequestError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"FunctionsRequestSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"publicInputs\",\"type\":\"bytes\"}],\"name\":\"FunctionsResponseReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"ProofRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"name\":\"ProofVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"selectedBlock\",\"type\":\"uint256\"}],\"name\":\"RandomnessReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"proofs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"publicInputsArray\",\"type\":\"bytes[]\"}],\"name\":\"aggregateProofs\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"aggregatedHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"aggregatedProofHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedCallers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"functionsRequestToProofId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getProofRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"struct ZKProofAggregator.ProofRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSubscriptionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"groth16Verifier\",\"outputs\":[{\"internalType\":\"contract Groth16Verifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"handleOracleFulfillment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"name\":\"isStateVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpkeepTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proofRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"targetBlockNumber\",\"type\":\"uint256\"}],\"name\":\"requestProofVerification\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setAuthorizedCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"gasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"donId\",\"type\":\"bytes32\"}],\"name\":\"setFunctionsConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"source\",\"type\":\"string\"}],\"name\":\"setFunctionsSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"name\":\"setProofServiceUrl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newInterval\",\"type\":\"uint256\"}],\"name\":\"setUpkeepInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"name\":\"setVRFConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upkeepInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedProofHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"verifiedProofs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Main contract for aggregating ZK proofs with Chainlink services\",\"kind\":\"dev\",\"methods\":{\"aggregateProofs(bytes[],bytes[])\":{\"details\":\"Aggregate multiple ZK proofs into a single verification\",\"params\":{\"proofs\":\"Array of proof data to aggregate\",\"publicInputsArray\":\"Array of public inputs for each proof\"},\"returns\":{\"aggregatedHash\":\"The hash representing the aggregated proof\"}},\"checkUpkeep(bytes)\":{\"details\":\"Chainlink Automation upkeep check\"},\"getProofRequest(uint256)\":{\"details\":\"Get proof request details\"},\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"details\":\"Either response or error parameter will be set, but never both.\",\"params\":{\"err\":\"Aggregated error either from the request's source code or from the execution pipeline.\",\"requestId\":\"The requestId returned by FunctionsClient.sendRequest().\",\"response\":\"Aggregated response from the request's source code.\"}},\"isStateVerified(bytes32)\":{\"details\":\"Check if a state root has been verified\"},\"performUpkeep(bytes)\":{\"details\":\"Chainlink Automation upkeep perform\"},\"requestProofVerification(string,uint256)\":{\"details\":\"Request proof verification for a specific chain state\",\"params\":{\"sourceChain\":\"The identifier of the source blockchain\",\"targetBlockNumber\":\"The block number to verify (0 for random selection)\"}},\"setUpkeepInterval(uint256)\":{\"details\":\"Administrative functions\"}},\"title\":\"ZKProofAggregator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"notice\":\"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"This contract enables trustless cross-chain state verification through ZK proof aggregation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZKProofAggregator.sol\":\"ZKProofAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"keccak256\":\"0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e0828ef423afef9f6f709bb173a7e3991fe555bf9337a4941d65da525ac4ad3\",\"dweb:/ipfs/QmXz1jHRZFTqdnNxP2tffVQ9NnUE1xgtBMRWuyUrTVY4pm\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c3228edc2cff7c55301d3764e54cd7ada6af81ef9aadf8bc116a2c982523d6\",\"dweb:/ipfs/QmXjJQgCu2gvX6QQJ9GC1gEoy3vrmpf1PiRPLqWqKddwRe\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"keccak256\":\"0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7c96e993b253723ed5461008c34b847d7b067221736068d45f029db4d92b0d\",\"dweb:/ipfs/QmTMMXAWXeDgSChnToydej6e3p331KiJZT3S27ZiPkht9t\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeeaeadc797b7656fd30201ab8c8ed24fe8fb3f83a480142bb55c7c7babb2b4b\",\"dweb:/ipfs/Qmdb55a1iWJetog7qUpZ6FHKGSA8g3Vu68LGsXfqfec9k5\"]},\"@chainlink/contracts/src/v0.8/functions/v1_3_0/FunctionsClient.sol\":{\"keccak256\":\"0xdc40f1e9dea8a572d43d310afa68e978c35218d16097b9cfd9d1b6137df3cd0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec1f247a0c4c401d69fa5ad383b6d2ba8dcd31011ce7edd4cb69fedb89ac3e5\",\"dweb:/ipfs/QmV55NBD35u96AYV4F4U9JYmf5uGm4mVoUsqs3mcw3tu4S\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd\",\"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0915715c5ad87db245b527514302b6da362894944299dd65c1382ca07b13d4\",\"dweb:/ipfs/QmQ2xcF7FQB33DAcpXuh4Jpx1PFniEjWbPMRatRgyp3UJW\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]},\"contracts/Groth16Verifier.sol\":{\"keccak256\":\"0xf12cebd51a2e197f8e973487233c5f327ff570789c70522a2024de67486ec0dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f73abeb079a6e7b7343e4ff3852409af7e304099980ab09defb10743573ddb8\",\"dweb:/ipfs/QmQgCZGit8RxQ1uJocb14c3nNse1H6oDQtweG2n1utSgUb\"]},\"contracts/ZKProofAggregator.sol\":{\"keccak256\":\"0x9a42f290e41d844f80d54aaf4fda6f7ca604c3311bd49d1fbcc04608bb1f66a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4af4498a19327413f7950004e6348c1028a4ee994eaea3e6794564094298bb2d\",\"dweb:/ipfs/Qmf92g21jvSuW1SSFSEF1pWF4rMTDEhKvVhXwAvn1GDxyN\"]}},\"version\":1}"}}}}}